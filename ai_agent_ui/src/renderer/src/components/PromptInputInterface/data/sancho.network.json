{
  "content": "SanchoNet | SanchoNet\n\nGetting startedJoin the communitySanchoNet GovTool\nJoin the community\nSanchoNet GovTool\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nGetting started\nWelcome to SanchoNet - your gateway to Cardano's governance future!\nSanchoNet is not an incentivized testnet and no real ada is rewarded for participation.\nSanchoNet is the testnet for rolling out groundbreaking governance features for the Cardano blockchain, aligning with the comprehensive CIP-1694 specifications. SanchoNet stands apart from other testnets; it's a vibrant, inclusive, and community-driven platform. Every community member is invited to join SanchoNet and actively contribute to shaping Cardano's governance future.\nAs SanchoNet advances in its journey of implementation and feature rollout, the community is encouraged to embrace specific roles crucial for testing and refining the governance mechanisms:\nTestnet ada holders: As a testnet ada holder, your role is paramount. You can engage in crafting and submitting governance actions, and your insights will be invaluable to ensure that the governance system upholds the highest standards of security and efficiency.Stake pool operators (SPOs): SPOs are the backbone of any blockchain network, and on SanchoNet, it's no different. As an SPO, you can take charge and run the testnet network with diligence and integrity and of course, you can influence Barataria's future voting on relevant actions. Your feedback will be invaluable.Delegate representatives (DReps): DReps are the voice of the broader community. As a representative, your role involves participating in voting on governance actions. You can consider the collective interests of the community as you engage in these important decisions.\nTestnet ada holders: As a testnet ada holder, your role is paramount. You can engage in crafting and submitting governance actions, and your insights will be invaluable to ensure that the governance system upholds the highest standards of security and efficiency.\nTestnet ada holders: As a testnet ada holder, your role is paramount. You can engage in crafting and submitting governance actions, and your insights will be invaluable to ensure that the governance system upholds the highest standards of security and efficiency.\nStake pool operators (SPOs): SPOs are the backbone of any blockchain network, and on SanchoNet, it's no different. As an SPO, you can take charge and run the testnet network with diligence and integrity and of course, you can influence Barataria's future voting on relevant actions. Your feedback will be invaluable.\nStake pool operators (SPOs): SPOs are the backbone of any blockchain network, and on SanchoNet, it's no different. As an SPO, you can take charge and run the testnet network with diligence and integrity and of course, you can influence Barataria's future voting on relevant actions. Your feedback will be invaluable.\nDelegate representatives (DReps): DReps are the voice of the broader community. As a representative, your role involves participating in voting on governance actions. You can consider the collective interests of the community as you engage in these important decisions.\nDelegate representatives (DReps): DReps are the voice of the broader community. As a representative, your role involves participating in voting on governance actions. You can consider the collective interests of the community as you engage in these important decisions.\nSanchoNet is all about developing and testing the technical components and processes required to action governance for Cardano within CIP-1694. It informs and engages the Cardano community on Voltaire on-chain governance activities currently underway.\nTo fully utilize the on-chain components as they are designed for ultimate use on mainnet, a significant program of off-chain elements (eg committees, informational tools, etc) will also need to be delivered, subject to a separate complimentary roadmap and timeline.\nAs such, SanchoNet will follow an independent development trajectory scoped from a technical, rather than final, governance perspective. SanchoNet will encapsulate the various actions and use cases that SPOs, DReps, and other users will undertake within typical usage situations as the wider governance capabilities are rolled out.\nTherefore, not all SanchoNet functionality will operate initially as intended (for example, within constitutional actions), and will be subject to change and iteration during the course of development.\nSanchoNet is more than just a testnet, it is a playground of opportunities. Within this space, the community can collaboratively create a governance system that is robust, decentralized, and truly community-driven. Your involvement, dedication, and passion will be the driving force behind SanchoNet's success.\nThe rollout of Sanchonet features will be phased in line with the technical development of CIP-1694:\nSanchoNet is under construction\nSanchoNet feature rollout\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nSanchoNet\n\nBuilding together in the age of Voltaire\nSanchoNet SPOs are the lifeblood of the network. They forge the blocks for all other members. Learn more about becoming a Sancho SPO today!\nSanchoNet provides liquid democracy to get a high voter turnout. DReps are the governing body elected directly through the participants' stake delegation. Become a Sancho DRep today!\nCalling all developers! Do you want to build a cool voting wallet? How about a proposal explorer? Well, there is a job for you. Start integrating your favorite ideas on SanchoNet today!\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nAbout | SanchoNet\n\nSanchoNet is about introducing the Cardano community to governance features from CIP-1694 in a controlled testnet environment.\nWant to make this site better? Submit a pull request!\nClone this repositoryRun nix develop to enter a shell with all the necessary toolsEdit one of the files in the docs/* folderRun just run in the Nix shell to run the website locallyOnce you are done with your changes, commit them to the repository!\nClone this repository\nRun nix develop to enter a shell with all the necessary tools\nnix develop\nEdit one of the files in the docs/* folder\ndocs/*\nRun just run in the Nix shell to run the website locally\njust run\nOnce you are done with your changes, commit them to the repository!\nContributing\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nJoin the community | SanchoNet\n\nGetting startedJoin the communitySanchoNet GovTool\nJoin the community\nSanchoNet GovTool\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nGetting started\nJoin the community\nJoin the IOG Discord community: https://discord.gg/p3jYKGxMvEComplete the captcha verificationIn #start-here, select 'Join the SanchoNet Community'\nJoin the IOG Discord community: https://discord.gg/p3jYKGxMvE\nComplete the captcha verification\nIn #start-here, select 'Join the SanchoNet Community'\nThe 'Voltaire' category, containing SanchoNet channels, will appear. You can enter these channels and join the discussion or just follow along!\nThe SanchoNet channels include the following:\n#announcements for updates about SanchoNet\n#spo-sanchonet for SPO discussion\n#drep-sanchonet for DRep discussion\n#builder-sanchonet for discussion of SanchoNet community tooling and infrastructure projects\n#wallets-sanchonet for wallet discussions, SanchoNet and CIP-95\n#govtool-sanchonet for discussion of Sancho GovTool beta\n#live-sancho for live sancho calls\nInstructions\nSanchoNet Discord channels\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nSanchoNet GovTool | SanchoNet\n\nGetting startedJoin the communitySanchoNet GovTool\nJoin the community\nSanchoNet GovTool\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nGetting started\nSanchoNet GovTool\nThe SanchoNet GovTool enables ada holders to experience some of the governance features described in CIP-1694 and to test governance features in SanchoNet through a guided and straightforward experience. The SanchoNet GovTool is currently open for beta testing and can be accessed at sanchogov.tools.\nThe Voltaire GovTool, with the SanchoNet GovTool serving as its testnet version, will empower ada holders to register as delegate representatives (DReps), delegate voting power to DReps, and review and vote on governance actions. Governance tooling is owned and maintained by the community. With community approval, Intersect, through its committees and working groups, will play an important role in hosting and maintaining these governance tools. Through active community involvement, the aim is to create the initial foundation layer together with different builders in the community. These governance tools will support the entire process, encompassing both off-chain and on-chain aspects. As a whole, they will facilitate the implementation of the governance described in CIP-1694 and its adoption. Once this foundational layer is in place, the community will have the opportunity to enhance these governance tools. They will be able to achieve this by maintaining and improving existing features and pillars, creating new features, or establishing entirely new areas either independently or with support from awards and grants facilitated by Intersect. With the freedom to test and refine Cardano s next era of governance principles under one central apparatus, the GovTool helps the Cardano community forge a future governance framework that represents the community s best democratic interests.\nThe Voltaire GovTool will be one of the first tools to allow ada holders to experience the CIP-1694 governance on Cardano. The current version of this tool has been developed using initial feedback from the community and following what's described in CIP-1694. It's now important that the community tests this tool and provides valuable insights to further refine it and make it ready for future product use.\nCheck the beta testing to-do list Check the prerequisites to start Check the quick/start guide\nSanchoNet GovTool guides General governance guides Cardano governance page overview GovTool overview\nWhat is the SanchoNet GovTool?\nWhat is the Voltaire GovTool?\nHow to participate in the beta testing?\nRelated guides and resources\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nWhy SanchoNet? | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nWhy SanchoNet?\nThe selection of the name 'SanchoNet' draws inspiration from the intricate and multifaceted character of Sancho Panza, Don Quixote s companion in Miguel de Cervantes literary classic. In the narrative, Sancho's transformation from a humble farmer to a wise governor and loyal friend mirrors virtues that align with the principles steering the evolution and governance of this network.\nSancho's growth throughout the novel represents a synthesis of realism and idealism. He starts with a practical, down-to-earth perspective but gradually appreciates and even embraces the nobility in Don Quixote's vision of chivalry. His transformation culminates in the episode of governing the fictional 'Island of Barataria,' where his innate wisdom and common sense guide him in delivering fair and wise judgments.\nSancho's capability to harmonize pragmatic realities with lofty ideals mirrors the essence of SanchoNet. Much like Sancho, the mission of SanchoNet is to cultivate a system that remains grounded in reality while guided by visionary principles. The ultimate goal? To establish a platform where every voice holds significance, embracing inclusivity and pragmatic wisdom in governance.\nThe choice of 'SanchoNet' also mirrors the character's transformative journey, echoing the broader themes of growth, self-assurance, and integrity that resonate throughout 'Don Quixote.' The parallel between Sancho and the chivalric code, his self-discovery, and his courage to embrace the extraordinary within himself symbolizes Cardano's aspiration to innovate, empower individuals, and attain greatness.\nMoreover, the intimate relationship between Don Quixote and Sancho, characterized by friendship, mutual influence, and a complex balance between dreams and reality, parallels the collaborative spirit that SanchoNet aims to cultivate within the Cardano community. This partnership transcends mere transactional engagements and evolves into a collective journey toward a more equitable, visionary, and improved ecosystem.\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nDon Quixote | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nWhy SanchoNet?\nDon Quixote\nAlonso Quijano, the man who would become Don Quixote, begins as an ordinary gentleman from the La Mancha region. He's known to be deeply fixated on books of chivalry. This eventually causes him to lose touch with reality. He decides to resurrect the age of chivalry, renaming himself 'Don Quixote de la Mancha.' This signifies the onset of his transformation, both in regard to his identity and how the world views him.\nIn the beginning, Don Quixote's idealism is unrestrained and almost childlike. He perceives the world through a fantastical lens, turning windmills into giants and common inns into castles. His commitment to chivalric codes and virtues is unwavering, albeit frequently misdirected. His notions of honor, justice, and love are drawn from his readings, not real-life encounters. This often leads him into absurd and humorous predicaments. Don Quixote's idealism often materializes as a stubborn refusal to see the world as it truly is, exemplified by his renowned attack on windmills that he misidentifies as giants.\nAs the novel unfolds, Don Quixote's character gradually evolves. The initial portrayal of a madman driven by unattainable dreams slowly gives way to a more nuanced and intricate individual. Despite his delusions, nobility resides in his ideals that begin to resonate with those around him. His faith in his knightly mission affects those he encounters, and even those who initially dismiss him as mad come to recognize the sincerity and purity of his beliefs.\nWhile his squire, Sancho Panza, serves as a foil and grounding influence, Don Quixote also influences Sancho. The relationship between the two characters deepens, as each leaves their mark on the other. Over time, Don Quixote's lofty ideals gradually meld with a more pragmatic grasp of reality, while Sancho starts to appreciate the merits of his master's chivalric worldview.\nAs the story concludes, Don Quixote's character experiences a remarkable evolution. His adventures have led to personal growth, deepening wisdom, and a more profound understanding of himself and the world around him. The sharp contrast between idealism and realism has dissolved, giving rise to a more harmonized and human portrayal.\nThe culmination of this evolution arrives with the tragic realization of his madness and his decision to forsake his knightly persona, reverting back to Alonso Quijano. This final transformation is tinged with sadness, as it signifies the loss of the beautiful ideals that drove him, but it also represents a return to sanity and a reconciliation with the real world.\nThe character of Don Quixote is multi-layered, showcasing a complex evolution. Starting from the naive and delusional Quijano, progressing to the quixotic yet profoundly honorable Don Quixote, and culminating in the wiser and more self-aware man by the narrative's closure, Cervantes skillfully constructs a character that encapsulates the human conflict between idealism and reality. His journey resonates because it mirrors the quest for meaning, virtue, and self-understanding, making Don Quixote a timeless and universal figure in literature.\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nSancho Panza | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nWhy SanchoNet?\nSancho Panza\nSancho Panza, initially depicted as a simple farmer, evolves remarkably throughout the story of 'Don Quixote.' His evolution begins upon becoming the squire of Don Quixote, motivated by the promise of material wealth and the opportunity to govern an island. Though Sancho starts as a counterpoint to Don Quixote's lofty idealism, embodying pragmatism and practicality, his persona gradually deepens, becoming more nuanced and complex.\nAs Sancho accompanies Don Quixote on his chivalric endeavors, he finds himself drawn into the world of ideals and imagination. Though never entirely abandoning his earthy wisdom, Sancho gradually recognizes the nobility within his master's vision. He starts to see beyond the surface of things, recognizing the deeper values of justice, honor, and compassion that underpin Don Quixote's seemingly mad pursuits.\nThe most profound change in Sancho's character comes during his time as the governor of the fictional 'Island of Barataria.' Initially intended as a jest, this episode evolves into a profound experience for Sancho. Faced with the complexities of leadership and governance, Sancho rises to the challenge. He applies his simple wisdom and innate understanding of human nature to solve intricate problems. Instead of becoming confused or overwhelmed, Sancho demonstrates a remarkable ability to govern justly and wisely.\nThe experience of governing Barataria has a lasting impact on Sancho, reinforcing his self-assurance and deepening his understanding of leadership and responsibility. It also further aligns him with Don Quixote's chivalric code, showing him that ideals and practicality can coexist and that ordinary people are capable of extraordinary things.\nSancho's relationship with Don Quixote continues to evolve, moving from servitude to genuine friendship. He becomes a true companion, sharing Don Quixote's dreams and defending them against the skepticism of others. By the end of the story, Sancho's character grows into a synthesis of realism and idealism, embodying the wisdom of the common man and the nobility of the knight-errant.\nSancho's evolution is a testament to the profound impact of friendship, idealism, and personal growth. His journey reflects the novel's rich exploration of human nature, presenting a timeless portrayal of an ordinary man achieving greatness through wisdom, integrity, and the courage to embrace the extraordinary within himself.\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nBarataria | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nWhy SanchoNet?\nBarataria\nBarataria plays a unique and significant role in 'Don Quixote.' While existing only in fiction, its symbolism and the events that unfold within its imagined boundaries contribute meaningfully to the novel's exploration of leadership, governance, idealism, and reality.\nIn the story, Barataria is a fictional island promised to Sancho Panza, Don Quixote's loyal squire, as a reward for his devoted service. The pledge of ruling Barataria fuels Sancho's dreams and expectations. When a duke and duchess, entertained by Don Quixote and Sancho, decide to actualize this promise, they execute an elaborate prank by appointing Sancho as the governor of the nonexistent island.\nThe Barataria episode offers an opportunity to explore Sancho's character, unveiling his practical wisdom and inherent common sense. Despite the absurd situations aimed at testing and mocking him, Sancho governs with dignity, simplicity, and intelligence. His judgments and decrees are marked by a natural grasp of justice and human nature. Instead of becoming a fool in a comedic setting, Sancho turns Barataria into a stage for showcasing his authentic wisdom and leadership.\nBarataria also serves as a mirror to the broader themes of the novel. Just as Don Quixote's idealism often clashes with the harsh realities of the world, Sancho's time in Barataria illustrates the tension between appearance and substance, dream and reality, folly and wisdom. It is a microcosm of the novel's intricate dance between the world as it is and the world as it could be.\nBarataria serves as a link between the lofty ideals of chivalry embodied by Don Quixote and the grounded realism of Sancho. Within this imaginary island, the dreams of both characters converge, and their contrasts find a harmonious resolution.\nIn Western literature, the Barataria episode has transcended its origin to become a symbol of leadership that is wise, compassionate, and unpretentious. It stands as a reminder that true wisdom often resides in simplicity and that leadership can be found in the most unlikely places.\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nConstitutional committee | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRolesConstitutional committeeSPODRepDevelopers\nConstitutional committee\nSPO\nDRep\nDevelopers\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nRoles\nConstitutional committee\nThe Constitution is an off-chain document with its hash registered on-chain. A provisional Constitution, containing essential provisions and safeguards necessary for the implementation of CIP-1694, has been published here. This provisional document is intended as a temporary measure. The final Constitution, which will require ratification by Ada holders, is expected to be approved by late 2024 or early 2025.\nIn addition, the Constitution is supplemented by a set of \"Guardrails\" to ensure the blockchain operates securely and sustainably. These guardrails are designed to prevent unexpected issues with the operation of the Cardano Blockchain. They aim to guide the selection of sensible parameter settings and mitigate potential problems related to security, performance, or functionality. Some of these guardrails are automatable and will be enforced via an on-chain script or built-in ledger rules.\nThe Constitution is accompanied by a guardrails script. At any given time, there can only be one guardrails script, and its hash is also registered on-chain. The guardrails script enforces limits on protocol parameter changes and treasury withdrawals. This script is executed whenever a governance action attempts to change protocol parameters or make a treasury withdrawal. If the proposal adheres to the guardrails, it is accepted on-chain and can be considered by the governance bodies: the Constitutional Committee, DReps, and SPOs. Conversely, if the proposed change exceeds the guardrails, the action is deemed unconstitutional upon submission, and the transaction is rejected, reducing the risk of introducing undesirable changes to the protocol parameters.\nThe Constitutional Committee is a group of individuals or entities, each associated with a pair of Ed25519 credentials or a script, collectively responsible for safeguarding the integrity of the constitution within the Cardano blockchain ecosystem.\nThe Constitutional Committee operates based on a social contract with the network's actors, focusing solely on voting for actions that align with the constitution. This ensures the upholding of the fundamental principles and values of the blockchain.\nIt's important to note that the Constitutional Committee has the authority to reject certain governance actions by voting 'no.' However, committee members should exercise this power judiciously, using it only when actions clearly conflict with the constitution.\nAs the guardian of the blockchain's integrity, the Constitutional Committee ensures that the network operates in harmony with its established principles. Through responsible decision-making and adherence to the constitution, the committee contributes to the sustainable and prosperous future of the blockchain ecosystem.\nBecoming a member of the constitutional committee involves off-chain procedures. The detailed process to join will be outlined in the upcoming weeks. Similar to how SPOs manage their cold/KES keys, committee members will utilize a cold/hot key setup. Hence, developing a solid understanding of the generation and secure management of these keys becomes crucial for those aspiring to join the committee.\nIn general, the constitutional committee member will need to:\nRun a nodeRequest funds from the faucetGenerate cold/hot credentials (keys or scripts)Generate their corresponding key hash or script hash. Be elected on a governance action. Once elected, create a corresponding cold - hot authorization certificate and submit it on-chainReview active governance actionsEngage in discussions with other constitutional committee members to assess the constitutionality of governance actionsCast votesInclude anchors (URL/hash) in their votes.\nRun a node\nRequest funds from the faucet\nGenerate cold/hot credentials (keys or scripts)\nGenerate their corresponding key hash or script hash.\nBe elected on a governance action.\nOnce elected, create a corresponding cold - hot authorization certificate and submit it on-chain\nReview active governance actions\nEngage in discussions with other constitutional committee members to assess the constitutionality of governance actions\nCast votes\nInclude anchors (URL/hash) in their votes.\nMoreover, the committee members might be required to perform specific tests, such as issuing a new hot key and authorizing it, resigning from committee members, or voting on new committee members.\nDetailed tutorials will be provided upon the launch of associated features. These tutorials will offer step-by-step guidance to ensure a smooth and effortless walkthrough of the process.\nThe Constitution\nThe Guardrails Script\nConstitutional Committee\nBecoming a constitutional committee member\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nSanchoNet governance actions | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actionsOverview\nOverview\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nGovernance actions\nOverview\nCIP-1694 describes seven types of governance actions.\nEach type of governance action represents a distinct feature within cardano-node and cardano-cli. As such, they will be rolled out in phases, coinciding with the integration of each feature.\nAny ada holder can submit a governance action. Once on chain, specific governance groups need to vote on the action depending on its type. The following table details the ratification requirements for each governance action scenario. The columns represent:\nGovernance action type The type of governance action. Note that the protocol parameter updates are grouped into four categories.\nGovernance action type The type of governance action. Note that the protocol parameter updates are grouped into four categories.\nConstitutional committee (abbrev. CC) A value of indicates that the constitutional committee must approve this action. A value of - means that constitutional committee votes do not apply.\nConstitutional committee (abbrev. CC) A value of indicates that the constitutional committee must approve this action. A value of - means that constitutional committee votes do not apply.\nDReps The DRep vote threshold that must be met as a percentage of active voting stake.\nDReps The DRep vote threshold that must be met as a percentage of active voting stake.\nSPOs The SPO vote threshold which must be met as a percentage of the stake held by all stake pools. A value of - means that SPO votes do not apply.\nSPOs The SPO vote threshold which must be met as a percentage of the stake held by all stake pools. A value of - means that SPO votes do not apply.\n| 7. Info\nEach of these thresholds is a governance parameter. There is one additional threshold, Q5, related to security relevant protocol parameters:\nQ5\nThe security relevant protocol parameters are:\nmaxBlockBodySize\nmaxBlockBodySize\nmaxTxSize\nmaxTxSize\nmaxBlockHeaderSize\nmaxBlockHeaderSize\nmaxValueSize\nmaxValueSize\nmaxBlockExecutionUnits\nmaxBlockExecutionUnits\ntxFeePerByte\ntxFeePerByte\ntxFeeFixed\ntxFeeFixed\nutxoCostPerByte\nutxoCostPerByte\ngovActionDeposit\ngovActionDeposit\nminFeeRefScriptCostPerByte\nminFeeRefScriptCostPerByte\nTo get ratified, a governance action needs to accumulate enough votes according to the specified thresholds. A governance action expires if it does not receive enough votes during its governance action lifetime.\nRatified governance actions are automatically enacted at the epoch boundary following their ratification.\nThe only exception is when a \"Motion of No Confidence\" is enacted prior to the enactment of other actions. In that case, the ratified but not yet enacted actions are not enacted. Instead, these actions are put back for voting for the remainder of their lifetime. If a new committee is elected before these actions expire, they can still be ratified, but the new committee must approve them.\nCheck out the Tutorials and Voting on governance actions to learn how to create and vote on governance actions.\nGovernance Action Enactment Process\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nSanchoNet faucet | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nFaucet\nChoose whether you want to request funds or a stake delegationFill in your detailsTick the recaptcha boxClick 'Submit'.\nChoose whether you want to request funds or a stake delegation\nFill in your details\nTick the recaptcha box\nClick 'Submit'.\nTo request funds from the faucet:\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nCompile the guardrail script | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nCompile the guardrail script\nTo compile the current version of the guardrail script yourself, you first have to clone the plutus repository\ngit clone https://github.com/IntersectMBO/plutus.gitcd plutus\ngit clone https://github.com/IntersectMBO/plutus.gitcd plutus\nNext we check out the version 1.31.0.0 of plutus and enter a nix development shell via\ngit checkout 1.31.0.0nix develop\ngit checkout 1.31.0.0nix develop\nWe then create a file cabal.project.local to override some dependencies as a hotfix (there is a circular dependency otherwise).\ncabal.project.local\ncat <<EOF > cabal.project.localallow-newer: *:plutus-ledger-apiallow-newer: *:prettyprinter-configurableEOF\ncat <<EOF > cabal.project.localallow-newer: *:plutus-ledger-apiallow-newer: *:prettyprinter-configurableEOF\nNext, we open in a text editor the file cardano-constitution/cardano-constitution.cabal and delete line 134 that reads buildable: False via\ncardano-constitution/cardano-constitution.cabal\nbuildable: False\nsed -i '134d' cardano-constitution/cardano-constitution.cabal\nsed -i '134d' cardano-constitution/cardano-constitution.cabal\nNext, we can build the script via\ncabal updatecabal run cardano-constitution:create-json-envelope -- guardrail.plutus\ncabal updatecabal run cardano-constitution:create-json-envelope -- guardrail.plutus\nYou can get the hash of this just compiled script via, for example\ncardano-cli transaction policyid --script-file guardrail.plutus\ncardano-cli transaction policyid --script-file guardrail.plutus\nAnd compare it to the one currently defined here.\nHow to compile the guardrail script from source\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nDRep Pioneer Program | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer ProgramOverview and GoalsParticipation RequirementsLesson Plan OverviewPrelude an IntroductionsModule 1 - Cardano s Governance and RolesModule 2 - DRep Code of ConductModule 3 - Reward Schemes for DRepsModule 4 - Joining the DReps EcosystemClosing Actitivity and Wrap Up\nOverview and Goals\nParticipation Requirements\nLesson Plan Overview\nPrelude an Introductions\nModule 1 - Cardano s Governance and Roles\nModule 2 - DRep Code of Conduct\nModule 3 - Reward Schemes for DReps\nModule 4 - Joining the DReps Ecosystem\nClosing Actitivity and Wrap Up\nTools and resources\nMeetups\nDRep Pioneer Program\nOverview and Goals\nThe DRep training program is designed to enable participants to learn the skills and knowledge they need to effectively participate as Delegate Representatives (DReps) in the governance structure proposed for Cardano.\nThis documentation serves as a comprehensive guide for DRep Pioneers, who will play a pivotal role as instructors in training individuals from the Cardano Community interested in becoming DReps.\nDisclaimer: The mention of any third-party software or tools in this document is for informational purposes only. We do not endorse, recommend, or have any affiliation with the mentioned third-party software. Participants and instructors are encouraged to conduct their own research and due diligence before using any third-party software, and we accept no responsibility for any consequences arising from the use of such software.\nBy the end of this training, participants will be able to:\nUnderstand the fundamentals of Cardano s on-chain governance design.\nUnderstand the role and expectations of a DRep.\nGain the skills to effectively become a DRep - both the practical and the softer skills (e.g., marketing, building relationships).\nEngage with the Cardano community using the available tools for DReps.\nIntersect would like to sponsor a DRep Pioneer Program by inviting selected members to deliver the course to the Cardano community as Pioneer Workshop Leaders.\nBy the end of the program, a significant part of the community will be equipped with the knowledge and skills needed to effectively participate in the new governance role - DRep.\nA major goal of this initiative is to develop a continuous learning program that will support the first cohort of DReps to be able to effectively perform their role in Cardano s proposed governance design.\nA further goal of the program is to create materials that can be used standalone independent from the training courses, so that a potential DRep can train themselves on what is required in an intuitive and clear way.\nOverview\nLearning Objectives\nGoals of the DRep Pioneer Program\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nTools and resources | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resourcesTools and resourcesConway ledger era FAQs\nTools and resources\nConway ledger era FAQs\nMeetups\nTools and resources\nTools and resources\nLast update: 2024-08-26\nSanchoNet GovTool beta site\nSanchoNet GovTool beta site\nVoltaire GovTool on Preview\nVoltaire GovTool on Preview\nVoltaire GovTool on Mainnet\nVoltaire GovTool on Mainnet\nSanchoNet documentation site\nSanchoNet documentation site\nVoltaire documentation site\nVoltaire documentation site\nGovTool Repository\nGovTool Repository\nLatest node releases\nCIP-1694 | A first step towards on-chain decentralized governance\nConway design CDDL\nConway ledger backlog\nCardano DB-Sync 13.4.0.0\nNote on naming scheme\nBlog post on speeding up DB-Sync\nCIP-95 is the governance extension to the CIP-30 wallet-DApp bridge. For list of supported wallets please check docs.sanchogov.tools.\nCIP-0095 | Web-wallet bridge governance\ndemos CIP-95 test DApp hosted\ndemos DApp source code\ndemos CIP-95 prototype wallet\ndemos CIP-95 wallet build\nCIP-0105 | Conway era key chains for HD wallets\nThis is an Alpha build and the team are keen to hear feedback via Github Issues.\nhttps://www.npmjs.com/package/@emurgo/cardano-serialization-lib-browser/v/12.0.0-beta.2\nhttps://www.npmjs.com/package/@emurgo/cardano-serialization-lib-nodejs/v/12.0.0-beta.2\nhttps://www.npmjs.com/package/@emurgo/cardano-serialization-lib-asmjs/v/12.0.0-beta.2\nhttps://crates.io/crates/cardano-serialization-lib/12.0.0-beta.2\nCardano SDK is a comprehensive suite of Typescript packages suitable for both Node.js and browser-based development, used by Lace at its core for everything relating to the Cardano blockchain.\nThe core/Serialization package has support for serialization and deserialization, developed from the ground up in Typescript.\nhttps://www.npmjs.com/package/@cardano-sdk/core\nUsage examples\nThe Conway ledger era ushers in on-chain governance for Cardano via CIP-1694 | A First Step Towards On-Chain Decentralized Governance, with the addition of many new on-chain governance artifacts. Some of these artifacts support the linking off-chain metadata, as a way to provide context.\nThere have been three governance metadata standards developed, so far, to define what the off-chain contextual data can look like.\nCIP-100 | Governance Metadata Base standard, providing a framework for future more specific standards.\nCIP-108 | Governance Metadata - Governance actions This proposal aims to provide a specification for off-chain metadata vocabulary that can be used to give context to governance actions.\nCIP-119 | Governance Metadata - DReps This proposal aims to provide a specification for off-chain metadata vocabulary that can be used to give context to CIP-100 for DRep registration and updates.\nTwo further standard is around the technical form of the constitution.\nCIP-0120 | Constitution specification This proposal aims to describe a standardized technical form for the Cardano constitution. Hoping to enhance the accessibility and safety of the document.\nCIP-???? | Governance metadata - Constitutional Committee vote rationale This proposal aims to provide a specification for off-chain metadata vocabulary that can be used to give context to constitutional committee votes.\nDisclaimer: These tools and guides are created by the community and are not supported directly. Please refer any issues to the author.\nBlockfrost.io: the leading Cardano API-as-a-Service, which also provides access to the SanchoNet testing network.\nNuFi Wallet CIP-95/ SanchoNet Compatible Build: the first community CIP-95 wallet build.\nOgmios Conway Releases: is a lightweight bridge interface for cardano-node. It provides an HTTP / WebSocket API that enables applications to interact with a local cardano-node via JSON+RPC-2.0.\nCardano-Signer: Open-Source multifunction tool, which can sign&verify data. Can also be used for Key-Generation, like dRep-Keys, CCM-Cold/Hot-Keys with Mnemonic-Support.\nSPO Scripts: Open-Source collection of CLI-Scripts to perform all kinds of transactions, key-generation, etc. on the CLI. Now with full Conway Governance support.\nAdanordic.com: A work-in-progress rudimentary governance related explorer.\nCardano Multiplatform Library A standard multifunctional library for serialization & deserialization of core data structures and useful utility functions.\nCexplorer.io SanchoNet: The biggest and oldest Cardano explorer, supporting the SanchoNet testing network.\ncardano-wallet Conway release: Cardano wallet is command line based software wallet.\ndrep.tools: A very early version of a site to help DReps.\nPlutarch: A Haskell eDSL designed for writing fast and fine-tunable on-chain scripts. Currently supports PlutusLedger V1 and V2, with V3 on its way.\ncarp 3.2.0 This project is designed to sync data from the Cardano blockchain and store it into a Postgres database.\nParameter Proposal Guardrails Checker The Parameter Proposal Guardrails Checker is a web-based tool that checks the constitutionality of a Parameter Update Proposal. It implements checks for the guardrails from the Constitution.\nVoltaire GovTool\nNode\nLedger\nDB Sync\nWallets/CIP-95\nCardano Serialization Library (Conway beta) - Emurgo\nCardano SDK\nGovernance Metadata Standards\nBuilt by the communityTools from the community:Guides from the community:\nTools from the community:\nGuides from the community:\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nMeetups | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nMeetups\nSanchoNet meetups is a way for people to get to know more about SanchoNet be it online or offline at an event.\nThis page can be updated by anyone in the community by submitting a pull request with changes.\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nDisclaimer | SanchoNet\n\nBy using the SanchoNet Testnet, you understand the network is in development and that use of the SanchoNet Testnet is entirely at your own risk.\nYou also acknowledge and agree to have an adequate understanding of the risks associated with use of the SanchoNet Testnet and that all information and materials published, distributed or otherwise made available on Sancho.Network and Github are provided for non-commercial, personal use, and testing purposes only. This includes test-Ada tokens which have no economic or monetary value and are provided only for the purpose of testing on the SanchoNet Testnet.\nSanchoNet Testnet is available on an AS IS and AS AVAILABLE basis, without any representations or warranties of any kind. All implied terms are excluded to the fullest extent permitted by law. No party involved in, or having contributed to the development of, the SanchoNet Testnet including any of their affiliates, directors, employees, contractors, service providers or agents (the Parties Involved) accepts any responsibility or liability to you or any third parties in relation to any materials or information accessed via the SanchoNet Testnet.\nYou acknowledge and agree that the Parties Involved are not responsible for any damage to your computer systems, loss of data, or any other loss or damage resulting (directly or indirectly) from use of the SanchoNet Testnet.\nTo the fullest extent permitted by law, in no event shall the Parties Involved have any liability whatsoever to any person for any direct or indirect loss, liability, cost, claim, expense or damage of any kind, whether in contract or in tort, including negligence or otherwise, arising out of or related to the use of all or part of the SanchoNet Testnet.\nThe software is not subject to the EAR based on Section 734.7 of the U.S. Export Administration Regulations (\"EAR\", 15 CFR Parts 730-774) and Section 742.15(b) of the EAR, which applies to software containing or designed for use with encryption software that is publicly available as open-source. However, products developed using the software may be subject to the EAR or local laws/regulations. You are responsible for compliance with U.S. and local country export/import laws and regulations.\nThe software may not be exported/reexported, either directly or indirectly, to any destination subject to U.S. embargoes or trade sanctions unless formally authorized by the U.S. Government. The embargoed destinations are subject to change and the scope of what is included in the embargo is specific to each embargoed country. For the most current information on U.S. embargoed and sanctioned countries, see the Treasury Department regulations.\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nSPO | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRolesConstitutional committeeSPODRepDevelopers\nConstitutional committee\nSPO\nDRep\nDevelopers\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nRoles\nSPO\nStake pool operators are not only responsible for block production and network maintenance; they also have a role in the governance of the system. Stake pool operators can vote on motions of no confidence, electing new constitutional committee members, initiating hardforks, and making changes to security and relevant protocol parameters.\nBecoming an SPO is critical to support SanchoNet. The process is straightforward, follow the tutorials below:\nDownload the latest nodeRun the nodeRequest funds from the faucetRegister a stake poolRequest delegation from the faucet\nDownload the latest node\nRun the node\nRequest funds from the faucet\nRegister a stake pool\nRequest delegation from the faucet\nBecoming an SPO\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nDevelopers | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRolesConstitutional committeeSPODRepDevelopers\nConstitutional committee\nSPO\nDRep\nDevelopers\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nRoles\nDevelopers\nA SanchoNet developer is an individual skilled in blockchain technology and programming, with a passion for contributing to the evolution of Cardano's governance future.\nTo interact with SanchoNet as a developer, you will need to:\nDownload the latest version of [cardano-node] (https://github.com/IntersectMBO/cardano-node/releases)Run the nodeRequest funds from the faucetBuild a cool tool to integrate with SanchoNetPublish it to the community.\nDownload the latest version of [cardano-node] (https://github.com/IntersectMBO/cardano-node/releases)\nRun the node\nRequest funds from the faucet\nBuild a cool tool to integrate with SanchoNet\nPublish it to the community.\nWallets are websites or applications that convert a mnemonic into a user-friendly interface for sending and receiving ada. Below is a list of all the wallets currently available on SanchoNet:\nExplorers allow you to visualize blockchain data. Some are web-based, while others are generic APIs. Below is a list of the current explorers available on SanchoNet:\nVoting centers enable interaction with the chain for viewing and voting on specific proposals. They can also integrate with wallets to facilitate delegation to DReps and submission of transactions to wallets.\nDevelop on SanchoNet\nCommunity toolingWalletsExplorersVoting centers\nWallets\nExplorers\nVoting centers\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nDRep | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRolesConstitutional committeeSPODRepDevelopers\nConstitutional committee\nSPO\nDRep\nDevelopers\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resources\nMeetups\nRoles\nDRep\nA DRep serves as the community's spokesperson, actively participating in voting on governance actions and advocating for the community's collective interests.\nAs Cardano prepares for the Conway era, community participation becomes vital for its success. A meaningful way to contribute is by becoming a DRep and playing a key role in shaping Cardano's future.\nDReps hold significant responsibilities in the governance process, voting on important system updates. Approval depends on the governance action type and requires a majority vote from the corresponding governance bodies (SPOs, the constitutional committee, and DReps).\nAs a DRep, you'll have the power to vote 'yes,' 'no,' or 'abstain' on governance actions proposing changes to protocol parameters. Your vote represents the ada holders' collective voice, making your role crucial in Cardano's decentralized decision-making.\nTo become a DRep, follow these steps:\nDownload the latest version of cardano-nodeRun the nodeRequest funds from the faucetRegister as a DRep with an on-chain registration certificateInitially, on SanchoNet, use tools like Discord to identify governance actions requiring your attention and voteEngage in discussions with other DReps to assess the merits of active governance actionsCast your votes using Cardano CLI or other voting tools as they become available in the communityWhen submitting your votes, include reasoning for your vote and an anchor (URL and hash).\nDownload the latest version of cardano-node\nRun the node\nRequest funds from the faucet\nRegister as a DRep with an on-chain registration certificate\nInitially, on SanchoNet, use tools like Discord to identify governance actions requiring your attention and vote\nEngage in discussions with other DReps to assess the merits of active governance actions\nCast your votes using Cardano CLI or other voting tools as they become available in the community\nWhen submitting your votes, include reasoning for your vote and an anchor (URL and hash).\nStay tuned for comprehensive tutorials that will be provided upon the release of new features. You might be also asked to conduct specific tests from participants on SanchoNet, highlighting the importance of your active involvement.\nBecoming a DRep\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nGovernance actions | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nCreate governance actions\nA proposal is the process of putting together all the information required to submit a governance action to the chain. A proposal consists of:\nA deposit\nThe reward account that will receive the deposit return\nThe governance action\nAn anchor\nWhen using the cardano-cli to create a governance action, you will notice that it creates a proposal.\ncardano-cli\nDeposit and stake credentials\nAny ada holder can submit a governance action to the chain. They must provide a deposit, which will be returned when the action is finalized (whether it is ratified or has expired). To facilitate this process, the proposer must specify the stake credential that will receive the refunded deposit.\nPrevious governance action ID\nTo prevent unintended conflicts between governance actions of the same type, some governance actions must include the governance action ID of the most recently enacted action of its respective type. Notably, this requirement does not apply to treasury withdrawal and info governance actions.\nYou can get the last enacted governance action IDs with:\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r .nextRatifyState.nextEnactState.prevGovActionIds\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r .nextRatifyState.nextEnactState.prevGovActionIds\n{ \"Committee\": { \"govActionIx\": 0, \"txId\": \"fe2c99fe6bc75a9666427163d51ae7dbf5a60df40135361b7bfd53ac6c7912ec\" }, \"Constitution\": { \"govActionIx\": 0, \"txId\": \"2bcf2a93cb840d72e6fbbad4d52419fa69a3971dee2e32fab414e32a44ecbaf7\" }, \"HardFork\": null, \"PParamUpdate\": null}\n{ \"Committee\": { \"govActionIx\": 0, \"txId\": \"fe2c99fe6bc75a9666427163d51ae7dbf5a60df40135361b7bfd53ac6c7912ec\" }, \"Constitution\": { \"govActionIx\": 0, \"txId\": \"2bcf2a93cb840d72e6fbbad4d52419fa69a3971dee2e32fab414e32a44ecbaf7\" }, \"HardFork\": null, \"PParamUpdate\": null}\nPlease note that both the update committee and motion of no confidence actions share the same space, referred to as 'pgaCommittee,' within the governance state. Consequently, the governance state stores a single value to represent both of these actions. The system also verifies either of these actions against this single stored value.\nAnchors\nWhen proposing a governance action, the proposer may employ an anchor, which comprises a URL hosting a document that outlines the rationale for the proposed changes, along with the document's hash.\nThe document at the URL can be of a free form. It's important that it should communicate to ada holders the what and the why of the proposal. This tutorial mostly uses 'https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld' as an example, see here for more details.\nSee CIP-100 | Governance Metadata and CIP-0108? | Governance Metadata - Governance Actions for standard. Following CIP-100, we canonize the metadata anchor first, via JSON-LD playground, which we then hash.\nYou can use cardano-cli to get the hash:\ncardano-cli\ncardano-cli hash anchor-data --file-text treasury-withdrawal.canonical931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5\ncardano-cli hash anchor-data --file-text treasury-withdrawal.canonical931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5\nAlternatively, utilize b2sum to hash the document:\nb2sum -l 256 treasury-withdrawal.canonical931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 treasury-withdrawal.canonical\nb2sum -l 256 treasury-withdrawal.canonical931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 treasury-withdrawal.canonical\nYou will need to supply the hash of the document when creating a governance action.\nAssume you want to add three CC members, who have generated cold keys and have provided their key hashes:\n89181f26b47c3d3b6b127df163b15b74b45bba7c3b7a1d185c05c2de\n89181f26b47c3d3b6b127df163b15b74b45bba7c3b7a1d185c05c2de\nea8738081fca0726f4e781f5e55fda05f8745432a5f8a8d09eb0b34b\nea8738081fca0726f4e781f5e55fda05f8745432a5f8a8d09eb0b34b\n7f6721067362d4ae9ca73469fe983ce5572dad9028386100104b0da0\n7f6721067362d4ae9ca73469fe983ce5572dad9028386100104b0da0\nYou can create a proposal to add them as new CC members with an expiration epoch (--epoch) for each of them. This is a good time to review the quorum. Let s assume that 2/3 of the committee needs to accept the proposal:\n--epoch\nCreate the governance action proposal:\ncardano-cli conway governance action update-committee \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --add-cc-cold-verification-key-hash 89181f26b47c3d3b6b127df163b15b74b45bba7c3b7a1d185c05c2de \\ --epoch 100 \\ --add-cc-cold-verification-key-hash ea8738081fca0726f4e781f5e55fda05f8745432a5f8a8d09eb0b34b \\ --epoch 95 \\ --add-cc-cold-verification-key-hash 7f6721067362d4ae9ca73469fe983ce5572dad9028386100104b0da0 \\ --epoch 90 \\ --threshold 2/3 \\ --out-file update-committee.action\ncardano-cli conway governance action update-committee \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --add-cc-cold-verification-key-hash 89181f26b47c3d3b6b127df163b15b74b45bba7c3b7a1d185c05c2de \\ --epoch 100 \\ --add-cc-cold-verification-key-hash ea8738081fca0726f4e781f5e55fda05f8745432a5f8a8d09eb0b34b \\ --epoch 95 \\ --add-cc-cold-verification-key-hash 7f6721067362d4ae9ca73469fe983ce5572dad9028386100104b0da0 \\ --epoch 90 \\ --threshold 2/3 \\ --out-file update-committee.action\nNote: If there is a previously enacted governance action to update the committee, the proposal must also include --prev-governance-action-tx-id and --prev-governance-action-index.\n--prev-governance-action-tx-id\n--prev-governance-action-index\nAssume that you want to remove the CC member with the key hash 89181f26b47c3d3b6b127df163b15b74b45bba7c3b7a1d185c05c2de. You can do this with:\n89181f26b47c3d3b6b127df163b15b74b45bba7c3b7a1d185c05c2de\ncardano-cli conway governance action update-committee \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --remove-cc-cold-verification-key-hash 89181f26b47c3d3b6b127df163b15b74b45bba7c3b7a1d185c05c2de \\ --threshold 1/2 \\ --prev-governance-action-tx-id fe2c99fe6bc75a9666427163d51ae7dbf5a60df40135361b7bfd53ac6c7912ec \\ --prev-governance-action-index 0 \\ --out-file update-committee.action\ncardano-cli conway governance action update-committee \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --remove-cc-cold-verification-key-hash 89181f26b47c3d3b6b127df163b15b74b45bba7c3b7a1d185c05c2de \\ --threshold 1/2 \\ --prev-governance-action-tx-id fe2c99fe6bc75a9666427163d51ae7dbf5a60df40135361b7bfd53ac6c7912ec \\ --prev-governance-action-index 0 \\ --out-file update-committee.action\ncardano-cli conway governance action update-committee \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --threshold 60/100 \\ --prev-governance-action-tx-id fe2c99fe6bc75a9666427163d51ae7dbf5a60df40135361b7bfd53ac6c7912ec \\ --prev-governance-action-index 0 \\ --out-file update-committee.action\ncardano-cli conway governance action update-committee \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --threshold 60/100 \\ --prev-governance-action-tx-id fe2c99fe6bc75a9666427163d51ae7dbf5a60df40135361b7bfd53ac6c7912ec \\ --prev-governance-action-index 0 \\ --out-file update-committee.action\nThis section describes how to propose a new constitution. Lets's use as an axample the interim constitution that is to be used on Mainnet. It is available in https://ipfs.io/ipfs/Qmdo2J5vkGKVu2ur43PuTrM7FdaeyfeFav8fhovT6C2tto\nFind the last enacted governance action of this type, If the query returns null it means the current consitution (if it exists) is not enacted in a governance action, but instead supplied on the Conway genesis file.\nnull\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r '.nextRatifyState.nextEnactState.prevGovActionIds.Constitution'null\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r '.nextRatifyState.nextEnactState.prevGovActionIds.Constitution'null\nWhen the constitution has been enacted through a governance action, you will see the transaction ID and index of the proposing transaction, we will use this information later:\ncardano-cli conway query gov-state | jq -r '.nextRatifyState.nextEnactState.prevGovActionIds.Constitution'{ \"govActionIx\": 0, \"txId\": \"bf4832f443fe34f26f929ce2fbb26cc35ef4fda31150b2da45969a9bac4f7a8c\"}\ncardano-cli conway query gov-state | jq -r '.nextRatifyState.nextEnactState.prevGovActionIds.Constitution'{ \"govActionIx\": 0, \"txId\": \"bf4832f443fe34f26f929ce2fbb26cc35ef4fda31150b2da45969a9bac4f7a8c\"}\nWhen proposing a new constitution, you are required to put it on a URL that is publicly accessible and, idealy, in some sort of persistent form. For example put it on IPFS, like the interim constitution\nNow, download the file from the url:\nwget https://ipfs.io/ipfs/Qmdo2J5vkGKVu2ur43PuTrM7FdaeyfeFav8fhovT6C2tto -O constitution.txt\nwget https://ipfs.io/ipfs/Qmdo2J5vkGKVu2ur43PuTrM7FdaeyfeFav8fhovT6C2tto -O constitution.txt\nGet its hash, you can do it with blake2 or with cardano-cli:\nb2sum -l 256 constitution.txta77245f63bc7504c6ce34383633729692388dc1823723b0ee9825743a87a6a6d constitution.txt\nb2sum -l 256 constitution.txta77245f63bc7504c6ce34383633729692388dc1823723b0ee9825743a87a6a6d constitution.txt\nor\ncardano-cli hash anchor-data --file-text constitution.txta77245f63bc7504c6ce34383633729692388dc1823723b0ee9825743a87a6a6d\ncardano-cli hash anchor-data --file-text constitution.txta77245f63bc7504c6ce34383633729692388dc1823723b0ee9825743a87a6a6d\nThe Guardrails script is soon to be open sourced, you will find it here: https://github.com/IntersectMBO/constitution-priv\nFollow the instructions in the README.md file to compile the PlutusV3 script. A successful compilation creates the 'compiled' directory containing the script in a text envelope.\ncat compiled/guardrails-script.plutus\ncat compiled/guardrails-script.plutus\n{ \"type\": \"PlutusScriptV3\", \"description\": \"\", \"cborHex\": \"59082f59082c0101003232323232323232323232323232323232323232323232323232323232323232323232323232323232323225932325333573466e1d2000001180098121bab357426ae88d55cf001054ccd5cd19b874801000460042c6aae74004dd51aba1357446ae88d55cf1baa325333573466e1d200a35573a00226ae84d5d11aab9e0011637546ae84d5d11aba235573c6ea800642b26006003149a2c8a4c3021801c0052000c00e0070018016006901e40608058c00e00290016007003800c00b0034830268320306007001800600690406d6204e00060001801c0052004c00e007001801600690404001e0006007001800600690404007e00060001801c0052006c00e006023801c006001801a4101000980018000600700148023003801808e0070018006006904827600060001801c005200ac00e0070018016006904044bd4060c00e003000c00d2080ade204c000c0003003800a4019801c00e003002c00d2080cab5ee0180c100d1801c005200ec00e0060238000c00e00290086007003800c00b003483d00e0306007001800600690500fe00040243003800a4025803c00c01a0103003800a4029803c00e003002c00cc07520d00f8079801c006001801980ea4120078001800060070014805b00780180360070018006006603e900a4038c0003003800a4041801c00c04601a3003800a4045801c00e003002c00d20f02e80c1801c006001801a4190cb80010090c00e00290126000c00e0029013600b003803c00e003002c00cc0752032c000c00e003000c00cc075200ac000c0006007007801c006005801980ea418170058001801c006001801980ea41209d80018000c0003003800a4051802c00e007003011c00e003000c00d2080e89226c000c0006007003801808e007001800600690406c4770b7e000600030000c00e0029015600b003801c00c047003800c00300348202e2e1cb00030001801c00e006023801c006001801a410181f905540580018000c0003003800a4059801c00c047003800c00300348203000700030000c00e00290176007003800c00b003483200603060070018006006904801e00040243003800a4061801c00c0430001801c0052032c016006003801801e00600780180140100c00e002901a600b003001c00c00f003003c00c00f003002c00c007003001c00c007003803c00e003002c00c0560184014802000c00e002901b6007003800c00b003480030034801b0001801c006001801a4029800180006007001480e3003801c006005801a4001801a40498000c00e003000c00d20ca04c00080486007001480eb00380180860070018006006900f600060001801c005203cc00e006015801c006001801a4101012bcf138c09800180006007001480fb003801805600700180060069040505bc3f482e00060001801c0052040c00e0070018016006900d4060c00e003000c00d204ac000c0003003800a4085801c00c04601630000000000200f003006c00e003000c00c05a0166000200f003005c00e003000c00c057003010c0006000200f003800c00b003012c00cc05d2028c0004008801c01e007001801600602380010043000400e003000c00c04b003011c0006000800c00b00300d8049001801600601d801980924190038000801c0060010066000801c00600900f6000800c00b003480030034820225eb0001003800c003003483403f0003000400c023000400e003000c00d208094ebdc03c000c001003009c001003300f4800b0004006005801a40058001001801401c6014900518052402860169004180424008600a900a180324005003480030001806240cc6016900d18052402460129004180424004600e900018032400c6014446666aae7c004a0005003328009aab9d0019aab9e0011aba100298019aba200224c6012444a6520071300149a4432005225900689802a4d2219002912c998099bad0020068ac99807002800c4cc03001c00e300244cc03001c02a3002012c801460012218010c00888004c004880094cc8c0040048848c8cc0088c00888c00800c8c00888c00400c8d4cc01001000cd400c0044888cc00c896400a300090999804c00488ccd5cd19b87002001800400a01522333573466e2000800600100291199ab9a33712004003000801488ccd5cd19b89002001801400244666ae68cdc4001000c00a001225333573466e240080044004400a44a666ae68cdc4801000880108008004dd6801484cc010004dd6001484c8ccc02a002452005229003912999ab9a3370e0080042666ae68cdc3801800c00200430022452005229003911980899b820040013370400400648a400a45200722333573466e20cdc100200099b82002003800400880648a400a45200722333573466e24cdc100200099b82002003801400091480148a400e44666ae68cdc419b8200400133704004007002800122593300e0020018800c400922593300e00200188014400400233323357346ae8cd5d10009198051bad357420066eb4d5d08011aba2001268001bac00214800c8ccd5cd1aba3001800400a444b26600c0066ae8400626600a0046ae8800630020c0148894ccd5cd19b87480000045854ccd5cd19b88001480004cc00ccdc0a400000466e05200000113280099b8400300199b840020011980200100098021112999ab9a3370e9000000880109980180099b860020012223300622590018c002443200522323300d225900189804803488564cc0140080322600800318010004b20051900991111111001a3201322222222005448964ce402e444444440100020018c00a30000002225333573466e1c00800460002a666ae68cdc48010008c010600445200522900391199ab9a3371266e08010004cdc1001001c0020041191800800918011198010010009\"}\n{ \"type\": \"PlutusScriptV3\", \"description\": \"\", \"cborHex\": \"59082f59082c0101003232323232323232323232323232323232323232323232323232323232323232323232323232323232323225932325333573466e1d2000001180098121bab357426ae88d55cf001054ccd5cd19b874801000460042c6aae74004dd51aba1357446ae88d55cf1baa325333573466e1d200a35573a00226ae84d5d11aab9e0011637546ae84d5d11aba235573c6ea800642b26006003149a2c8a4c3021801c0052000c00e0070018016006901e40608058c00e00290016007003800c00b0034830268320306007001800600690406d6204e00060001801c0052004c00e007001801600690404001e0006007001800600690404007e00060001801c0052006c00e006023801c006001801a4101000980018000600700148023003801808e0070018006006904827600060001801c005200ac00e0070018016006904044bd4060c00e003000c00d2080ade204c000c0003003800a4019801c00e003002c00d2080cab5ee0180c100d1801c005200ec00e0060238000c00e00290086007003800c00b003483d00e0306007001800600690500fe00040243003800a4025803c00c01a0103003800a4029803c00e003002c00cc07520d00f8079801c006001801980ea4120078001800060070014805b00780180360070018006006603e900a4038c0003003800a4041801c00c04601a3003800a4045801c00e003002c00d20f02e80c1801c006001801a4190cb80010090c00e00290126000c00e0029013600b003803c00e003002c00cc0752032c000c00e003000c00cc075200ac000c0006007007801c006005801980ea418170058001801c006001801980ea41209d80018000c0003003800a4051802c00e007003011c00e003000c00d2080e89226c000c0006007003801808e007001800600690406c4770b7e000600030000c00e0029015600b003801c00c047003800c00300348202e2e1cb00030001801c00e006023801c006001801a410181f905540580018000c0003003800a4059801c00c047003800c00300348203000700030000c00e00290176007003800c00b003483200603060070018006006904801e00040243003800a4061801c00c0430001801c0052032c016006003801801e00600780180140100c00e002901a600b003001c00c00f003003c00c00f003002c00c007003001c00c007003803c00e003002c00c0560184014802000c00e002901b6007003800c00b003480030034801b0001801c006001801a4029800180006007001480e3003801c006005801a4001801a40498000c00e003000c00d20ca04c00080486007001480eb00380180860070018006006900f600060001801c005203cc00e006015801c006001801a4101012bcf138c09800180006007001480fb003801805600700180060069040505bc3f482e00060001801c0052040c00e0070018016006900d4060c00e003000c00d204ac000c0003003800a4085801c00c04601630000000000200f003006c00e003000c00c05a0166000200f003005c00e003000c00c057003010c0006000200f003800c00b003012c00cc05d2028c0004008801c01e007001801600602380010043000400e003000c00c04b003011c0006000800c00b00300d8049001801600601d801980924190038000801c0060010066000801c00600900f6000800c00b003480030034820225eb0001003800c003003483403f0003000400c023000400e003000c00d208094ebdc03c000c001003009c001003300f4800b0004006005801a40058001001801401c6014900518052402860169004180424008600a900a180324005003480030001806240cc6016900d18052402460129004180424004600e900018032400c6014446666aae7c004a0005003328009aab9d0019aab9e0011aba100298019aba200224c6012444a6520071300149a4432005225900689802a4d2219002912c998099bad0020068ac99807002800c4cc03001c00e300244cc03001c02a3002012c801460012218010c00888004c004880094cc8c0040048848c8cc0088c00888c00800c8c00888c00400c8d4cc01001000cd400c0044888cc00c896400a300090999804c00488ccd5cd19b87002001800400a01522333573466e2000800600100291199ab9a33712004003000801488ccd5cd19b89002001801400244666ae68cdc4001000c00a001225333573466e240080044004400a44a666ae68cdc4801000880108008004dd6801484cc010004dd6001484c8ccc02a002452005229003912999ab9a3370e0080042666ae68cdc3801800c00200430022452005229003911980899b820040013370400400648a400a45200722333573466e20cdc100200099b82002003800400880648a400a45200722333573466e24cdc100200099b82002003801400091480148a400e44666ae68cdc419b8200400133704004007002800122593300e0020018800c400922593300e00200188014400400233323357346ae8cd5d10009198051bad357420066eb4d5d08011aba2001268001bac00214800c8ccd5cd1aba3001800400a444b26600c0066ae8400626600a0046ae8800630020c0148894ccd5cd19b87480000045854ccd5cd19b88001480004cc00ccdc0a400000466e05200000113280099b8400300199b840020011980200100098021112999ab9a3370e9000000880109980180099b860020012223300622590018c002443200522323300d225900189804803488564cc0140080322600800318010004b20051900991111111001a3201322222222005448964ce402e444444440100020018c00a30000002225333573466e1c00800460002a666ae68cdc48010008c010600445200522900391199ab9a3371266e08010004cdc1001001c0020041191800800918011198010010009\"}\nNow, get the script hash with:\ncardano-cli hash script --script-file guardrails-script.plutus edcd84c10e36ae810dc50847477083069db796219b39ccde790484e0\ncardano-cli hash script --script-file guardrails-script.plutus edcd84c10e36ae810dc50847477083069db796219b39ccde790484e0\nWhen there is no previously enacted constiutition:\ncardano-cli conway governance action create-constitution \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/cardano-foundation/CIPs/master/CIP-0100/cip-0100.common.schema.json \\ --anchor-data-hash \"9d99fbca260b2d77e6d3012204e1a8658f872637ae94cdb1d8a53f4369400aa9\" \\ --constitution-url https://ipfs.io/ipfs/Qmdo2J5vkGKVu2ur43PuTrM7FdaeyfeFav8fhovT6C2tto \\ --constitution-hash \"a77245f63bc7504c6ce34383633729692388dc1823723b0ee9825743a87a6a6d\" \\ --constitution-script-hash \"edcd84c10e36ae810dc50847477083069db796219b39ccde790484e0\" --out-file\ncardano-cli conway governance action create-constitution \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/cardano-foundation/CIPs/master/CIP-0100/cip-0100.common.schema.json \\ --anchor-data-hash \"9d99fbca260b2d77e6d3012204e1a8658f872637ae94cdb1d8a53f4369400aa9\" \\ --constitution-url https://ipfs.io/ipfs/Qmdo2J5vkGKVu2ur43PuTrM7FdaeyfeFav8fhovT6C2tto \\ --constitution-hash \"a77245f63bc7504c6ce34383633729692388dc1823723b0ee9825743a87a6a6d\" \\ --constitution-script-hash \"edcd84c10e36ae810dc50847477083069db796219b39ccde790484e0\" --out-file\nWhen there is a previously enacted constitution, we need to reference the previous governance action id (TXID and INDEX):\ncardano-cli conway governance action create-constitution \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --constitution-url https://ipfs.io/ipfs/Qmdo2J5vkGKVu2ur43PuTrM7FdaeyfeFav8fhovT6C2tto \\ --constitution-hash \"a77245f63bc7504c6ce34383633729692388dc1823723b0ee9825743a87a6a6d\" \\ --constitution-script-hash \"edcd84c10e36ae810dc50847477083069db796219b39ccde790484e0\" \\ --prev-governance-action-tx-id \"bf4832f443fe34f26f929ce2fbb26cc35ef4fda31150b2da45969a9bac4f7a8c\" \\ --prev-governance-action-index 0 \\ --out-file constitution.action\ncardano-cli conway governance action create-constitution \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --constitution-url https://ipfs.io/ipfs/Qmdo2J5vkGKVu2ur43PuTrM7FdaeyfeFav8fhovT6C2tto \\ --constitution-hash \"a77245f63bc7504c6ce34383633729692388dc1823723b0ee9825743a87a6a6d\" \\ --constitution-script-hash \"edcd84c10e36ae810dc50847477083069db796219b39ccde790484e0\" \\ --prev-governance-action-tx-id \"bf4832f443fe34f26f929ce2fbb26cc35ef4fda31150b2da45969a9bac4f7a8c\" \\ --prev-governance-action-index 0 \\ --out-file constitution.action\nFrom here, you just need to submit the proposal in a transaction\nShould you decide to propose an update to the SanchoNet constitution, please note that all rules and principles outlined for SanchoNet should be fictional and unrelated to the actual rules on the Cardano blockchain. Quotes directly from Don Quixote are encouraged, as well as rules in a similar spirit that aren't directly extracted from the book. SanchoNet is not the space for serious discussions about the future governance of Cardano. For substantial conversations, please visit the dedicated forum to explore the weighty matters of Cardano's constitution with the depth they deserve. Cardano Forum\nFind the last governance action enacted of this type:\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r '.nextRatifyState.nextEnactState.prevGovActionIds.Committee'\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r '.nextRatifyState.nextEnactState.prevGovActionIds.Committee'\n{ \"govActionIx\": 0, \"txId\": \"fe2c99fe6bc75a9666427163d51ae7dbf5a60df40135361b7bfd53ac6c7912ec\"}\n{ \"govActionIx\": 0, \"txId\": \"fe2c99fe6bc75a9666427163d51ae7dbf5a60df40135361b7bfd53ac6c7912ec\"}\ncardano-cli conway governance action create-no-confidence \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --prev-governance-action-tx-id fe2c99fe6bc75a9666427163d51ae7dbf5a60df40135361b7bfd53ac6c7912ec \\ --prev-governance-action-index 0 \\ --out-file no-confidence.action\ncardano-cli conway governance action create-no-confidence \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --prev-governance-action-tx-id fe2c99fe6bc75a9666427163d51ae7dbf5a60df40135361b7bfd53ac6c7912ec \\ --prev-governance-action-index 0 \\ --out-file no-confidence.action\nIn addition to the stake credential required to obtain a deposit refund, the proposer must also furnish stake credentials for receiving funds from the treasury in the event that the governance action is approved.\nAlso, treasury withdrawals must reference the Guardrails script.\ncardano-cli conway governance action create-treasury-withdrawal \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --funds-receiving-stake-verification-key-file stake.vkey \\ --constitution-script-hash \"edcd84c10e36ae810dc50847477083069db796219b39ccde790484e0\" \\ --transfer 50000000000 \\ --out-file treasury.action\ncardano-cli conway governance action create-treasury-withdrawal \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --funds-receiving-stake-verification-key-file stake.vkey \\ --constitution-script-hash \"edcd84c10e36ae810dc50847477083069db796219b39ccde790484e0\" \\ --transfer 50000000000 \\ --out-file treasury.action\nNote that you do not need to provide any previous governance action ID on treasury withdrawals.\ncardano-cli conway governance action create-info --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://tinyurl.com/yc74fxx4 \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --out-file info.action\ncardano-cli conway governance action create-info --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://tinyurl.com/yc74fxx4 \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --out-file info.action\nWhen updating protocol parameters, you must reference the Guardrails script. This reference is not automatically inferred because, actions can be created off-line so the cli may not have access to a node, and also because a governance action may be submitted in advance, anticipating that a new Guardrails script will be ratified and enacted during the proposal's lifespan.\ncardano-cli conway governance action create-protocol-parameters-update \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --constitution-script-hash \"edcd84c10e36ae810dc50847477083069db796219b39ccde790484e0\" \\ --key-reg-deposit-amt 1000000 \\ --out-file pp-update.action\ncardano-cli conway governance action create-protocol-parameters-update \\ --testnet \\ --governance-action-deposit $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r '.currentPParams.govActionDeposit') \\ --deposit-return-stake-verification-key-file stake.vkey \\ --anchor-url https://raw.githubusercontent.com/Ryun1/metadata/main/cip108/treasury-withdrawal.jsonld \\ --anchor-data-hash 931f1d8cdfdc82050bd2baadfe384df8bf99b00e36cb12bfb8795beab3ac7fe5 \\ --constitution-script-hash \"edcd84c10e36ae810dc50847477083069db796219b39ccde790484e0\" \\ --key-reg-deposit-amt 1000000 \\ --out-file pp-update.action\nNote: If there is a previously enacted governance action to update the protocol parameters, the proposal must also include --prev-governance-action-tx-id and --prev-governance-action-index.\n--prev-governance-action-tx-id\n--prev-governance-action-index\nContinue with build, sign and submit the transactions\nSubmitting the *.action file to the blockchain is the essential step in bringing your proposal to life and making it accessible for the community to participate in the voting process. This process essentially transforms your proposal from a conceptual idea into an actionable item. Once submitted, it becomes part of the public ledger, while also allowing members of the governance bodies to review, discuss, and ultimately cast their votes on its approval or rejection.\n*.action\nNote that you can also use build-raw and calculate-min-fee to build transactions in an off-line settting. The example below uses the convenient build:\nbuild-raw\ncalculate-min-fee\nbuild\ncardano-cli conway transaction build \\ --testnet-magic 4 \\ --tx-in \"$(cardano-cli query utxo --address \"$(cat payment.addr)\" --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]')\" \\ --change-address $(cat payment.addr) \\ --proposal-file info.action \\ --out-file tx.raw\ncardano-cli conway transaction build \\ --testnet-magic 4 \\ --tx-in \"$(cardano-cli query utxo --address \"$(cat payment.addr)\" --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]')\" \\ --change-address $(cat payment.addr) \\ --proposal-file info.action \\ --out-file tx.raw\ncardano-cli conway transaction sign \\ --testnet-magic 4 \\ --tx-body-file tx.raw \\ --signing-key-file payment.skey \\ --out-file tx.signed\ncardano-cli conway transaction sign \\ --testnet-magic 4 \\ --tx-body-file tx.raw \\ --signing-key-file payment.skey \\ --out-file tx.signed\ncardano-cli conway transaction submit \\ --testnet-magic 4 \\ --tx-file tx.signed\ncardano-cli conway transaction submit \\ --testnet-magic 4 \\ --tx-file tx.signed\nThis transaction will pay the governance action deposit and fee, in addition, we must supply a collateral since we will be running a plutus script: the guardrails script.\nAt the time of writing this tutorial, the build command has a bug that causes it to underestimate the execution units. For now we will use build-raw instead.\nbuild\nbuild-raw\nQuery the utxos of our address:\ncardano-cli conway query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------0a2d91bcc0775581594f49eb9709108aa8b75c9f59e77774868462d8251c6b31 0 149999600000 lovelace + TxOutDatumNone1fa4fd83daf44c6cc2db9abd495306568b5f64b28296d4e55958bee3d9b4f90e 1 50816371 lovelace + TxOutDatumNonec925e0e4b83f5f36b3950f4e940f59632f9589cd9bcae4a071878a54d455a47e 0 49999690803 lovelace + TxOutDatumNone\ncardano-cli conway query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------0a2d91bcc0775581594f49eb9709108aa8b75c9f59e77774868462d8251c6b31 0 149999600000 lovelace + TxOutDatumNone1fa4fd83daf44c6cc2db9abd495306568b5f64b28296d4e55958bee3d9b4f90e 1 50816371 lovelace + TxOutDatumNonec925e0e4b83f5f36b3950f4e940f59632f9589cd9bcae4a071878a54d455a47e 0 49999690803 lovelace + TxOutDatumNone\nWe will use build-raw, this means we need to balance the transaction manually, in other words, we need to calculate the change of the transaction ourselves so that inputs = outputs.\nbuild-raw\nGet the value of the UTxO at index 0 (first UTxO). This will be our input (--tx-in) for the transaction.\nutxo_value=$(cardano-cli conway query utxo --address \"$(cat payment.addr)\" --output-json | jq '.[keys[0]].value.lovelace')\nutxo_value=$(cardano-cli conway query utxo --address \"$(cat payment.addr)\" --output-json | jq '.[keys[0]].value.lovelace')\nWe'll need to deduct the fee. For simplicity let's set the fee on 500000 lovelace:\nfee=500000\nfee=500000\nWe need to take the governance action deposit into account:\ngovActDeposit=$(cardano-cli conway query gov-state | jq -r .currentPParams.govActionDeposit)\ngovActDeposit=$(cardano-cli conway query gov-state | jq -r .currentPParams.govActionDeposit)\nNow we can calculate the change of the transaction. Later, we will use $change in the transaction output (--tx-out).\nchange=$(($utxo_value - $fee - $govActDeposit))\nchange=$(($utxo_value - $fee - $govActDeposit))\nWhen building the transaction, we include the *.action file and supply the guardrails script with --proposal-script-file. Note that the guardrails script does not require a datum to be passed.\n*.action\ncardano-cli conway transaction build-raw \\--proposal-script-file guardrails-script.plutus \\--tx-in-collateral \"$(cardano-cli query utxo --address \"$(cat payment.addr)\" --output-json | jq -r 'keys[1]')\" \\--proposal-redeemer-value {} \\--proposal-execution-units \"(119000000, 555000)\" \\--tx-in \"$(cardano-cli query utxo --address \"$(cat payment.addr)\" --output-json | jq -r 'keys[0]')\" \\--tx-out \"$(cat payment.addr)+$change\" \\--fee \"$fee\" \\--protocol-params-file pparams.json \\--proposal-file pparams.action \\--out-file pparams-tx.raw\ncardano-cli conway transaction build-raw \\--proposal-script-file guardrails-script.plutus \\--tx-in-collateral \"$(cardano-cli query utxo --address \"$(cat payment.addr)\" --output-json | jq -r 'keys[1]')\" \\--proposal-redeemer-value {} \\--proposal-execution-units \"(119000000, 555000)\" \\--tx-in \"$(cardano-cli query utxo --address \"$(cat payment.addr)\" --output-json | jq -r 'keys[0]')\" \\--tx-out \"$(cat payment.addr)+$change\" \\--fee \"$fee\" \\--protocol-params-file pparams.json \\--proposal-file pparams.action \\--out-file pparams-tx.raw\nThis example uses the second UTxO (Index 1) of payment.addr as collateral: $( ...--output-json | jq -r 'keys[1]'). Adjust the command so that it accomodates to your needs and preferences of utxos to use.\n$( ...--output-json | jq -r 'keys[1]').\nWe sign the transaction only with payment.skey since we are using the same for fees and collateral:\npayment.skey\ncardano-cli conway transaction sign \\--tx-file pparams-tx.raw \\--signing-key-file payment.skey \\--out-file pparams-tx.signed\ncardano-cli conway transaction sign \\--tx-file pparams-tx.raw \\--signing-key-file payment.skey \\--out-file pparams-tx.signed\nAnd submit it to the chain with:\ncardano-cli conway transaction submit \\--tx-file pparams-tx.signed\ncardano-cli conway transaction submit \\--tx-file pparams-tx.signed\nYou may want to find your governance action ID to share it with others on Discord1 and seek their support. The transaction ID and the index of the transaction that submitted the proposal serve as the action ID. An effective way to find your governance action ID is by querying the governance state and filtering by (the proposer) stake key hash.\nFirst, find your key hash with:\ncardano-cli conway stake-address key-hash --stake-verification-key-file stake.vkey\ncardano-cli conway stake-address key-hash --stake-verification-key-file stake.vkey\n8e0debc9fdc6c616ac40d98bf3950b436895eea9cccf0396a6e5e12b\n8e0debc9fdc6c616ac40d98bf3950b436895eea9cccf0396a6e5e12b\nUse jq to filter the gov-state output by the stake key hash. The output contains all the relevant information about your governance actions, including actionId:\njq\ngov-state\nactionId\ncardano-cli conway query gov-state --testnet-magic 4 \\| jq -r --arg keyHash \"8e0debc9fdc6c616ac40d98bf3950b436895eea9cccf0396a6e5e12b\" '.proposals | to_entries[] | select(.value.returnAddr.credential.keyHash | contains($keyHash)) | .value'\ncardano-cli conway query gov-state --testnet-magic 4 \\| jq -r --arg keyHash \"8e0debc9fdc6c616ac40d98bf3950b436895eea9cccf0396a6e5e12b\" '.proposals | to_entries[] | select(.value.returnAddr.credential.keyHash | contains($keyHash)) | .value'\n{ \"action\": { \"contents\": [ [ { \"credential\": { \"keyHash\": \"7249a71391f08399f06b492eae7892a33191699625cff50b7dee55c6\" }, \"network\": \"Testnet\" }, 20388738581 ] ], \"tag\": \"TreasuryWithdrawals\" }, \"actionId\": { \"govActionIx\": 0, \"txId\": \"4fcd92abf2ce3d6796c5fae51ea83d563ca8611359c9624fd1cecd7fa1ce71cc\" }, \"committeeVotes\": { \"keyHash-23e05ad2b71317a6348ce4b68dae37aa1c0e545cdea740b23c21742e\": \"VoteNo\", \"keyHash-540bedcd4bdcbf523e899c3ef43f2b96ecec4f6303af58d15a413ed1\": \"VoteYes\", \"keyHash-6c1d098a366f2274651943a7f778b3b5459c129f0407a0db2902253a\": \"VoteYes\" }, \"dRepVotes\": { \"keyHash-13797df5308dfebf2348fa58b312a177cf97939f5f7d21168e1a54db\": \"VoteYes\", \"keyHash-9853551d8b99884f51608822e012bbf0d444eb7bea2807ee664f1241\": \"Abstain\", \"keyHash-cf09b59e134fa14e48da39b552c02299a054d7c8b895b3d827453672\": \"VoteNo\" }, \"deposit\": 1000000000, \"expiresAfter\": 34, \"proposedIn\": 33, \"returnAddr\": { \"credential\": { \"keyHash\": \"8e0debc9fdc6c616ac40d98bf3950b436895eea9cccf0396a6e5e12b\" }, \"network\": \"Testnet\" }, \"stakePoolVotes\": {}}\n{ \"action\": { \"contents\": [ [ { \"credential\": { \"keyHash\": \"7249a71391f08399f06b492eae7892a33191699625cff50b7dee55c6\" }, \"network\": \"Testnet\" }, 20388738581 ] ], \"tag\": \"TreasuryWithdrawals\" }, \"actionId\": { \"govActionIx\": 0, \"txId\": \"4fcd92abf2ce3d6796c5fae51ea83d563ca8611359c9624fd1cecd7fa1ce71cc\" }, \"committeeVotes\": { \"keyHash-23e05ad2b71317a6348ce4b68dae37aa1c0e545cdea740b23c21742e\": \"VoteNo\", \"keyHash-540bedcd4bdcbf523e899c3ef43f2b96ecec4f6303af58d15a413ed1\": \"VoteYes\", \"keyHash-6c1d098a366f2274651943a7f778b3b5459c129f0407a0db2902253a\": \"VoteYes\" }, \"dRepVotes\": { \"keyHash-13797df5308dfebf2348fa58b312a177cf97939f5f7d21168e1a54db\": \"VoteYes\", \"keyHash-9853551d8b99884f51608822e012bbf0d444eb7bea2807ee664f1241\": \"Abstain\", \"keyHash-cf09b59e134fa14e48da39b552c02299a054d7c8b895b3d827453672\": \"VoteNo\" }, \"deposit\": 1000000000, \"expiresAfter\": 34, \"proposedIn\": 33, \"returnAddr\": { \"credential\": { \"keyHash\": \"8e0debc9fdc6c616ac40d98bf3950b436895eea9cccf0396a6e5e12b\" }, \"network\": \"Testnet\" }, \"stakePoolVotes\": {}}\nCommon aspects of all types of governance actions\nUpdate committee actions\nUpdating the constitution\nMotion of no confidence\nTreasury withdrawal\nInfo\nUpdate protocol parameters\nSubmitting the action file in a transaction\nSubmitting a treasury-withdrawal and protocol-parameter-update governance action\nFinding the governance action ID of your proposal\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nVoting on governance actions | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nVoting on actions\nPayment key pair\nAddress with funds\nCC hot, DRep OR stake pool keys\nA SanchoNet node\nTo vote on governance actions, follow this process:\nObtain the action ID of an ongoing governance action from Discord or query the governance state.Determine your voting stance; engage in discussion if requiredConstruct your vote file through the Cardano CLI. The example below demonstrates voting --yes, although options for --no or --abstain are also available.\nObtain the action ID of an ongoing governance action from Discord or query the governance state.\nDetermine your voting stance; engage in discussion if required\nConstruct your vote file through the Cardano CLI. The example below demonstrates voting --yes, although options for --no or --abstain are also available.\n--yes\n--no\n--abstain\nAssume that we have been given the action ID df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79#0 for a new constitution proposal.\ndf58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79#0\nObtain the URL and hash of the new constitution proposal from the governance state:\nObtain the URL and hash of the new constitution proposal from the governance state:\ncardano-cli conway query gov-state --testnet-magic 4 | \\jq -r --arg govActionId \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" '.proposals | to_entries[] | select(.value.actionId.txId | contains($govActionId)) | .value'\ncardano-cli conway query gov-state --testnet-magic 4 | \\jq -r --arg govActionId \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" '.proposals | to_entries[] | select(.value.actionId.txId | contains($govActionId)) | .value'\n{ \"action\": { \"contents\": [ null, { \"anchor\": { \"dataHash\": \"5d372dca1a4cc90d7d16d966c48270e33e3aa0abcb0e78f0d5ca7ff330d2245d\", \"url\": \"https://tinyurl.com/mr3ferf9\" } } ], \"tag\": \"NewConstitution\" }, \"actionId\": { \"govActionIx\": 0, \"txId\": \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" }, \"committeeVotes\": { \"keyHash-c8ac605b25d6084c2ceb28043c8f01b62629966d038a249c7847d66d\": \"VoteYes\", \"keyHash-d13507f7e7fb8ac3ce2094187c9d99d4601021e9ef5a5f310567765d\": \"VoteYes\" }, \"dRepVotes\": { \"keyHash-16faaf6daa2635bbf53bbbaf38b3a6040adf7ced2f7f08952592cf5b\": \"VoteYes\", \"keyHash-57cb90cfb635e76af648abf1b6a91519218a5919b3cba2527e3725d1\": \"VoteYes\", \"keyHash-7d84808d563f0f258ad7e4337c2c4bd13010930ebdf7b86c3bfd9ef8\": \"VoteYes\" }, \"deposit\": 0, \"expiresAfter\": 80, \"proposedIn\": 78, \"returnAddr\": { \"credential\": { \"keyHash\": \"f925cbd4eb78aad49ec7bf9b4ddfa4cc4486c967e392699d143c81aa\" }, \"network\": \"Testnet\" }, \"stakePoolVotes\": {}}\n{ \"action\": { \"contents\": [ null, { \"anchor\": { \"dataHash\": \"5d372dca1a4cc90d7d16d966c48270e33e3aa0abcb0e78f0d5ca7ff330d2245d\", \"url\": \"https://tinyurl.com/mr3ferf9\" } } ], \"tag\": \"NewConstitution\" }, \"actionId\": { \"govActionIx\": 0, \"txId\": \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" }, \"committeeVotes\": { \"keyHash-c8ac605b25d6084c2ceb28043c8f01b62629966d038a249c7847d66d\": \"VoteYes\", \"keyHash-d13507f7e7fb8ac3ce2094187c9d99d4601021e9ef5a5f310567765d\": \"VoteYes\" }, \"dRepVotes\": { \"keyHash-16faaf6daa2635bbf53bbbaf38b3a6040adf7ced2f7f08952592cf5b\": \"VoteYes\", \"keyHash-57cb90cfb635e76af648abf1b6a91519218a5919b3cba2527e3725d1\": \"VoteYes\", \"keyHash-7d84808d563f0f258ad7e4337c2c4bd13010930ebdf7b86c3bfd9ef8\": \"VoteYes\" }, \"deposit\": 0, \"expiresAfter\": 80, \"proposedIn\": 78, \"returnAddr\": { \"credential\": { \"keyHash\": \"f925cbd4eb78aad49ec7bf9b4ddfa4cc4486c967e392699d143c81aa\" }, \"network\": \"Testnet\" }, \"stakePoolVotes\": {}}\nDownload the file from the URL registered on the ledger state:\nDownload the file from the URL registered on the ledger state:\nwget https://tinyurl.com/mr3ferf9 -O constitution.txt\nwget https://tinyurl.com/mr3ferf9 -O constitution.txt\nVerify that the hash of the file matches the dataHashfrom the ledger state:\nVerify that the hash of the file matches the dataHashfrom the ledger state:\ndataHash\nb2sum -l 256 constitution.txt5d372dca1a4cc90d7d16d966c48270e33e3aa0abcb0e78f0d5ca7ff330d2245d constitution.txt\nb2sum -l 256 constitution.txt5d372dca1a4cc90d7d16d966c48270e33e3aa0abcb0e78f0d5ca7ff330d2245d constitution.txt\nEverything is in order; the text at the URL matches the dataHash, confirming that the text at the URL is precisely what we are voting for.\nIn the future, voting apps, explorers, wallets, and other tools could perform the filtering, ensuring that they only display actions whose URL content has been verified against the hash on the ledger state.\nVote with DRep keys:\nVote with DRep keys:\ncardano-cli conway governance vote create \\ --yes \\ --governance-action-tx-id \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" \\ --governance-action-index \"0\" \\ --drep-verification-key-file drep.vkey \\ --out-file df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79-constitution.vote\ncardano-cli conway governance vote create \\ --yes \\ --governance-action-tx-id \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" \\ --governance-action-index \"0\" \\ --drep-verification-key-file drep.vkey \\ --out-file df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79-constitution.vote\nVote with CC hot keys:\nVote with CC hot keys:\ncardano-cli conway governance vote create \\ --yes \\ --governance-action-tx-id \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" \\ --governance-action-index \"0\" \\ --cc-hot-verification-key-file cc-hot.vkey \\ --out-file df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79-constitution.vote\ncardano-cli conway governance vote create \\ --yes \\ --governance-action-tx-id \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" \\ --governance-action-index \"0\" \\ --cc-hot-verification-key-file cc-hot.vkey \\ --out-file df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79-constitution.vote\nVote with SPO keys:\nVote with SPO keys:\ncardano-cli conway governance vote create \\ --yes \\ --governance-action-tx-id \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" \\ --governance-action-index \"0\" \\ --cold-verification-key-file cold.vkey \\ --out-file df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79-constitution.vote\ncardano-cli conway governance vote create \\ --yes \\ --governance-action-tx-id \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" \\ --governance-action-index \"0\" \\ --cold-verification-key-file cold.vkey \\ --out-file df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79-constitution.vote\nBuild the transaction:\ncardano-cli conway transaction build --testnet-magic 4 \\ --tx-in \"$(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]')\" \\ --change-address $(cat payment.addr) \\ --vote-file df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79-constitution.vote \\ --witness-override 2 \\ --out-file vote-tx.raw\ncardano-cli conway transaction build --testnet-magic 4 \\ --tx-in \"$(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]')\" \\ --change-address $(cat payment.addr) \\ --vote-file df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79-constitution.vote \\ --witness-override 2 \\ --out-file vote-tx.raw\nSign it with the DRep key:\ncardano-cli conway transaction sign --tx-body-file vote-tx.raw \\ --signing-key-file drep.skey \\ --signing-key-file payment.skey \\ --testnet-magic 4 \\ --out-file vote-tx.signed\ncardano-cli conway transaction sign --tx-body-file vote-tx.raw \\ --signing-key-file drep.skey \\ --signing-key-file payment.skey \\ --testnet-magic 4 \\ --out-file vote-tx.signed\nOR sign it with the CC hot key:\ncardano-cli conway transaction sign --tx-body-file vote-tx.raw \\ --signing-key-file cc-hot.skey \\ --signing-key-file payment.skey \\ --testnet-magic 4 \\ --out-file vote-tx.signed\ncardano-cli conway transaction sign --tx-body-file vote-tx.raw \\ --signing-key-file cc-hot.skey \\ --signing-key-file payment.skey \\ --testnet-magic 4 \\ --out-file vote-tx.signed\nOR sign it with the SPO cold key:\ncardano-cli conway transaction sign --tx-body-file vote-tx.raw \\ --signing-key-file cold.skey \\ --signing-key-file payment.skey \\ --testnet-magic 4 \\ --out-file vote-tx.signed\ncardano-cli conway transaction sign --tx-body-file vote-tx.raw \\ --signing-key-file cold.skey \\ --signing-key-file payment.skey \\ --testnet-magic 4 \\ --out-file vote-tx.signed\nSubmit the transaction:\ncardano-cli conway transaction submit --testnet-magic 4 --tx-file vote-tx.signed\ncardano-cli conway transaction submit --testnet-magic 4 --tx-file vote-tx.signed\nPre-requisites\nVerify the content of the governance action\nCreate the vote file\nInclude the vote in a transaction\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nStart a SanchoNet node | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nStart a SanchoNet node\nThe latest version for SanchoNet is 9.1.0. See releases.\nwget https://book.world.dev.cardano.org/environments/sanchonet/config.jsonwget https://book.world.dev.cardano.org/environments/sanchonet/topology.jsonwget https://book.world.dev.cardano.org/environments/sanchonet/byron-genesis.jsonwget https://book.world.dev.cardano.org/environments/sanchonet/shelley-genesis.jsonwget https://book.world.dev.cardano.org/environments/sanchonet/alonzo-genesis.jsonwget https://book.world.dev.cardano.org/environments/sanchonet/conway-genesis.json\nwget https://book.world.dev.cardano.org/environments/sanchonet/config.jsonwget https://book.world.dev.cardano.org/environments/sanchonet/topology.jsonwget https://book.world.dev.cardano.org/environments/sanchonet/byron-genesis.jsonwget https://book.world.dev.cardano.org/environments/sanchonet/shelley-genesis.jsonwget https://book.world.dev.cardano.org/environments/sanchonet/alonzo-genesis.jsonwget https://book.world.dev.cardano.org/environments/sanchonet/conway-genesis.json\ncardano-node run --topology topology.json \\--database-path db \\--socket-path node.socket \\--port 3001 \\--config config.json\ncardano-node run --topology topology.json \\--database-path db \\--socket-path node.socket \\--port 3001 \\--config config.json\nFor a step-by-step tutorial on how to build and run a node please visit Cardano node course | Building and running the node.\nDownload or build cardano-node and cardano-cli binaries:\nGet configuration files\nRun the node\nNeed help?\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nFile naming convention/schema | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nFile naming convention\nTo align the tutorials, examples, and also third-party tooling, you can find a suggested file naming convention/schema related to the Conway and Voltaire eras in this document.\nThe schemas can be extended with a *. prefix if needed. For example:\n*.\nSuggested file name: drep.skey\ndrep.skey\nExtended with a prefix: myname.drep.skey\nmyname.drep.skey\nThe naming convention is a work in progress. Please revisit this page regularly to check if any new or modified schemas have been selected.\nBelow is a list of currently used files related to the constitution's text-content/action/vote.\nconstitution.txt / *.constitution.txt constitution in cleartext utf-8\nconstitution.txt / *.constitution.txt\nconstitution.action / *.constitution.action for action file content in JSON\nconstitution.action / *.constitution.action\nExample content:\n{ \"type\": \"Governance proposal\", \"description\": \"\", \"cborHex\": \"841a000f4240581c1b7a61b...36a56ff490a4af6\"}\n{ \"type\": \"Governance proposal\", \"description\": \"\", \"cborHex\": \"841a000f4240581c1b7a61b...36a56ff490a4af6\"}\nconstitution.vote / *.constitution.vote for the vote ballot in JSON\nconstitution.vote / *.constitution.vote\nExample content:\n{ \"type\": \"Governance vote\", \"description\": \"\", \"cborHex\": \"8482582064e7cad9b3ece...1e235709ffa691001f6\"}\n{ \"type\": \"Governance vote\", \"description\": \"\", \"cborHex\": \"8482582064e7cad9b3ece...1e235709ffa691001f6\"}\nBelow is a list of currently used files related to SanchoNet DRep usage.\nGenerated as a normal ed25519 key or derived from path 1852'/1815'/acc'/3/idx' drep.skey / *.drep.skey for the SanchoNet DRep secret-key JSON (see example content below)\n1852'/1815'/acc'/3/idx'\ndrep.skey / *.drep.skey\nExample content:\n{ \"type\": \"DRepSigningKey_ed25519\", \"description\": \"Delegate Representative Signing Key\", \"cborHex\": \"00000\"}{ \"type\": \"DRepExtendedSigningKey_ed25519_bip32\", \"description\": \"Delegate Representative Signing Key\", \"cborHex\": \"5840d84f8646463b03accf....da82c5dba3b1e4aa0df20b7\"}\n{ \"type\": \"DRepSigningKey_ed25519\", \"description\": \"Delegate Representative Signing Key\", \"cborHex\": \"00000\"}{ \"type\": \"DRepExtendedSigningKey_ed25519_bip32\", \"description\": \"Delegate Representative Signing Key\", \"cborHex\": \"5840d84f8646463b03accf....da82c5dba3b1e4aa0df20b7\"}\nThe keys derived from hardware wallets will have the keyword 'Hardware' in the description field, such as: 'Hardware Delegate Representative Signing Key'.\ndrep.vkey / *.drep.vkey for the SanchoNet DRep verification-key JSON (see example content below)\ndrep.vkey / *.drep.vkey\nExample content:\n{ \"type\": \"DRepVerificationKey_ed25519\", \"description\": \"Delegate Representative Verification Key\", \"cborHex\": \"00000\"}{ \"type\": \"DRepExtendedVerificationKey_ed25519_bip32\", \"description\": \"Delegate Representative Verification Key\", \"cborHex\": \"5820fd6b3cda64cf11f9b91ea3c88dffed906bc872f1e24566d68637c718788638d9\"}\n{ \"type\": \"DRepVerificationKey_ed25519\", \"description\": \"Delegate Representative Verification Key\", \"cborHex\": \"00000\"}{ \"type\": \"DRepExtendedVerificationKey_ed25519_bip32\", \"description\": \"Delegate Representative Verification Key\", \"cborHex\": \"5820fd6b3cda64cf11f9b91ea3c88dffed906bc872f1e24566d68637c718788638d9\"}\nThe keys derived from hardware wallets will have the keyword 'Hardware' in the description field, such as: Hardware Delegate Representative Verification Key\nHardware Delegate Representative Verification Key\ndrep.id / *.drep.id for the DRep ID in bech format drep1...\ndrep.id / *.drep.id\ndrep1...\nExample content:\ndrep12dggdndq3hhjzszukw5k5sulsesjux780s39h087s0p9vk6ylra\ndrep12dggdndq3hhjzszukw5k5sulsesjux780s39h087s0p9vk6ylra\ndrep-reg.cert / *.drep-reg.cert for the registration certificate JSON\ndrep-reg.cert / *.drep-reg.cert\nExample content:\n{ \"type\": \"CertificateConway\", \"description\": \"DRep Registration Certificate\", \"cborHex\": \"00000000\"}\n{ \"type\": \"CertificateConway\", \"description\": \"DRep Registration Certificate\", \"cborHex\": \"00000000\"}\ndrep-ret.cert / *.drep-ret.cert for the de-registration/retirement certificate JSON\ndrep-ret.cert / *.drep-ret.cert\nExample content:\n{ \"type\": \"CertificateConway\", \"description\": \"DRep Retirement Certificate\", \"cborHex\": \"00000000\"}\n{ \"type\": \"CertificateConway\", \"description\": \"DRep Retirement Certificate\", \"cborHex\": \"00000000\"}\nvote-deleg.cert / *.vote-deleg.cert for the vote delegation certificate JSON\nvote-deleg.cert / *.vote-deleg.cert\nExample content:\n{ \"type\": \"CertificateConway\", \"description\": \"Vote Delegation Certificate\", \"cborHex\": \"83098200581cc827e7d1fb57cf12662203612fe1f0bb3578574b16f90f4a78cd355c8200581c44924d8233e23a4eda97ba2ce0a336d6152171e70960396b4903eb8a\"}\n{ \"type\": \"CertificateConway\", \"description\": \"Vote Delegation Certificate\", \"cborHex\": \"83098200581cc827e7d1fb57cf12662203612fe1f0bb3578574b16f90f4a78cd355c8200581c44924d8233e23a4eda97ba2ce0a336d6152171e70960396b4903eb8a\"}\nBelow is a list of currently used files related to the constitution committee member usage.\ncc-cold.skey / *.cc-cold.skey for the cold constitutional committee member secret-key JSON\ncc-cold.skey / *.cc-cold.skey\ncc-hot.skey / *.cc-hot.skey for the hot constitutional committee member secret-key JSON\ncc-hot.skey / *.cc-hot.skey\ncc-cold.vkey / *.cc-cold.vkey for the cold constitutional committee member verification-key JSON\ncc-cold.vkey / *.cc-cold.vkey\ncc-hot.vkey / *.cc-hot.vkey for the hot constitutional committee member verification-key JSON\ncc-hot.vkey / *.cc-hot.vkey\nConstitution files\nSanchoNet delegate representatives (DReps) files\nConstitution committee files\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nGenerate keys and address | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nGenerate keys and an address\nFirst, generate a payment key pair and a stake key pair. Then, use the payment verification key and the stake verification key to build an address that can be used to receive funds from the faucet.\nThe payment keys control the funds, while the stake keys control the participation in the protocol: delegating stake to a pool and delegating votes to a delegate representative.\ncardano-cli installed\nGenerate payment keys:\nGenerate payment keys:\ncardano-cli conway address key-gen \\--verification-key-file payment.vkey \\--signing-key-file payment.skey\ncardano-cli conway address key-gen \\--verification-key-file payment.vkey \\--signing-key-file payment.skey\nGenerate stake keys:\nGenerate stake keys:\ncardano-cli conway stake-address key-gen \\--verification-key-file stake.vkey \\--signing-key-file stake.skey\ncardano-cli conway stake-address key-gen \\--verification-key-file stake.vkey \\--signing-key-file stake.skey\nBuild your address:\nBuild your address:\ncardano-cli conway address build \\--payment-verification-key-file payment.vkey \\--stake-verification-key-file stake.vkey \\--out-file payment.addr \\--testnet-magic 4\ncardano-cli conway address build \\--payment-verification-key-file payment.vkey \\--stake-verification-key-file stake.vkey \\--out-file payment.addr \\--testnet-magic 4\nUse your address on the faucet to get SanchoNet testnet tokens.\nUse your address on the faucet to get SanchoNet testnet tokens.\nPre-requisites\nGenerate key pairs\nBuild the address\nGet funds from the faucet\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nStake address registration certificate | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nStake address registration\nTo take part on the SanchoNet consensus protocol, we need to submit a stake address registration certificate to the chain. This allows to delegate stake to a SanchoNet stake pool and votes to a SanchoNet delegate representative (DRep).\nStake key pair\nPayment key pair\nAddress with funds\nA SanchoNet node\nRegister the stake address you previously created by generating a registration certificate:\nRegister the stake address you previously created by generating a registration certificate:\ncardano-cli conway stake-address registration-certificate \\--stake-verification-key-file stake.vkey \\--key-reg-deposit-amt $(cardano-cli conway query gov-state --testnet-magic 4 | jq .currentPParams.stakeAddressDeposit) \\--out-file registration.cert\ncardano-cli conway stake-address registration-certificate \\--stake-verification-key-file stake.vkey \\--key-reg-deposit-amt $(cardano-cli conway query gov-state --testnet-magic 4 | jq .currentPParams.stakeAddressDeposit) \\--out-file registration.cert\nBuild, sign and submit the transaction.\nBuild, sign and submit the transaction.\nBuild the transaction:\ncardano-cli conway transaction build \\--testnet-magic 4 \\--witness-override 2 \\--tx-in $(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]') \\--change-address $(cat payment.addr) \\--certificate-file registration.cert \\--out-file tx.raw\ncardano-cli conway transaction build \\--testnet-magic 4 \\--witness-override 2 \\--tx-in $(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]') \\--change-address $(cat payment.addr) \\--certificate-file registration.cert \\--out-file tx.raw\nSign the transaction:\ncardano-cli conway transaction sign \\--tx-body-file tx.raw \\--signing-key-file payment.skey \\--signing-key-file stake.skey \\--testnet-magic 4 \\--out-file tx.signed\ncardano-cli conway transaction sign \\--tx-body-file tx.raw \\--signing-key-file payment.skey \\--signing-key-file stake.skey \\--testnet-magic 4 \\--out-file tx.signed\nSubmit the transaction:\ncardano-cli conway transaction submit \\--testnet-magic 4 \\--tx-file tx.signed\ncardano-cli conway transaction submit \\--testnet-magic 4 \\--tx-file tx.signed\nPre-requisites\nGenerate the registration certificate\nSubmit the certificate to the chain\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nRegister a stake pool | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nRegister a stake pool\nWARNING: This tutorial is simplified and deliberately excludes secure key handling which is essential for other testnets and mainnet. For a comprehensive tutorial, see the Cardano course where you can access video lessons and a more detailed instruction handbook.\nBefore you start, ensure that you have:\nA running node: see the tutorialCreated keys and addresses: see the tutorialRequested funds from the faucet\nA running node: see the tutorial\nCreated keys and addresses: see the tutorial\nRequested funds from the faucet\nSetting up a stake pool on SanchoNet involves configuring a block producer node and at least one relay node. The relay node plays a crucial role in propagating the blocks forged by your block-producing node, as well as fetching blocks from other stake pools and serving them to your block producer. In this structure, the block producer communicates solely with your relay node, which in turn interfaces with the rest of the network. This ensures a streamlined communication process and helps to secure your block producer.\nThe typical configuration of the stake pool should resemble the following:\nTo set up your relay node, carry out the following steps:\nInstall the Cardano node and the Cardano CLI on your relay node.Configure the firewall for incoming connections: set up the firewall to accept incoming connections on the specific port that you'll be using for the Cardano node. This allows other nodes, including your block producer, to communicate with your relay.Configure the firewall for outgoing connections: enable the firewall to allow outgoing connections. This configuration ensures that your relay node can contact other relay nodes in the network as well as your block producer node.Run the node with P2P topology: start your node using the P2P topology setting.\nInstall the Cardano node and the Cardano CLI on your relay node.\nInstall the Cardano node and the Cardano CLI on your relay node.\nConfigure the firewall for incoming connections: set up the firewall to accept incoming connections on the specific port that you'll be using for the Cardano node. This allows other nodes, including your block producer, to communicate with your relay.\nConfigure the firewall for incoming connections: set up the firewall to accept incoming connections on the specific port that you'll be using for the Cardano node. This allows other nodes, including your block producer, to communicate with your relay.\nConfigure the firewall for outgoing connections: enable the firewall to allow outgoing connections. This configuration ensures that your relay node can contact other relay nodes in the network as well as your block producer node.\nConfigure the firewall for outgoing connections: enable the firewall to allow outgoing connections. This configuration ensures that your relay node can contact other relay nodes in the network as well as your block producer node.\nRun the node with P2P topology: start your node using the P2P topology setting.\nRun the node with P2P topology: start your node using the P2P topology setting.\n{ \"localRoots\":[ { \"accessPoints\":[], \"advertise\":false, \"valency\":2 } ], \"publicRoots\":[ { \"accessPoints\":[ { \"address\":\"sanchonet-node.world.dev.cardano.org\", \"port\":30004 } ], \"advertise\":false } ], \"useLedgerAfterSlot\":1000000}\n{ \"localRoots\":[ { \"accessPoints\":[], \"advertise\":false, \"valency\":2 } ], \"publicRoots\":[ { \"accessPoints\":[ { \"address\":\"sanchonet-node.world.dev.cardano.org\", \"port\":30004 } ], \"advertise\":false } ], \"useLedgerAfterSlot\":1000000}\nSetting up your block producer involves similar steps, but there are a few differences in the configuration:\nInstall the Cardano node and the Cardano CLI on your block producer node.Configure the firewall for incoming connections: set up the firewall to accept incoming connections only from your relay node on the specific port that you'll be using for the Cardano node. This ensures that only your relay node can communicate with your block producer.Configure the firewall for outgoing connections: enable the firewall to allow outgoing connections, preferably, only to your own relay's IP and port.Run the node with P2P topology: start your node using the P2P topology configuration. This time, replace \"address\":\"x.x.x.x\" and \"port\":3000 with the actual IP address and the port of your own relay node. Note that the block producer does not connect to sanchonet-node.world.dev.cardano.org and we avoid using ledger peers by setting \"useLedgerAfterSlot to -1\nInstall the Cardano node and the Cardano CLI on your block producer node.\nInstall the Cardano node and the Cardano CLI on your block producer node.\nConfigure the firewall for incoming connections: set up the firewall to accept incoming connections only from your relay node on the specific port that you'll be using for the Cardano node. This ensures that only your relay node can communicate with your block producer.\nConfigure the firewall for incoming connections: set up the firewall to accept incoming connections only from your relay node on the specific port that you'll be using for the Cardano node. This ensures that only your relay node can communicate with your block producer.\nConfigure the firewall for outgoing connections: enable the firewall to allow outgoing connections, preferably, only to your own relay's IP and port.\nConfigure the firewall for outgoing connections: enable the firewall to allow outgoing connections, preferably, only to your own relay's IP and port.\nRun the node with P2P topology: start your node using the P2P topology configuration. This time, replace \"address\":\"x.x.x.x\" and \"port\":3000 with the actual IP address and the port of your own relay node. Note that the block producer does not connect to sanchonet-node.world.dev.cardano.org and we avoid using ledger peers by setting \"useLedgerAfterSlot to -1\nRun the node with P2P topology: start your node using the P2P topology configuration. This time, replace \"address\":\"x.x.x.x\" and \"port\":3000 with the actual IP address and the port of your own relay node. Note that the block producer does not connect to sanchonet-node.world.dev.cardano.org and we avoid using ledger peers by setting \"useLedgerAfterSlot to -1\nsanchonet-node.world.dev.cardano.org\n\"useLedgerAfterSlot¨\n-1\n{ \"localRoots\":[ { \"accessPoints\":[ { \"address\":\"x.x.x.x\", \"port\":3000 } ], \"advertise\":false, \"valency\":2 } ], \"publicRoots\":[ { \"accessPoints\":[ ], \"advertise\":false } ], \"useLedgerAfterSlot\":-1}\n{ \"localRoots\":[ { \"accessPoints\":[ { \"address\":\"x.x.x.x\", \"port\":3000 } ], \"advertise\":false, \"valency\":2 } ], \"publicRoots\":[ { \"accessPoints\":[ ], \"advertise\":false } ], \"useLedgerAfterSlot\":-1}\nInstall jq, a tool that will assist in parsing the UTXOs for transactions:\nInstall jq, a tool that will assist in parsing the UTXOs for transactions:\nsudo apt-get install jq -y\nsudo apt-get install jq -y\nSet the CARDANO_NODE_SOCKET_PATH variable to the path of node.socket that you identified when starting the node:\nSet the CARDANO_NODE_SOCKET_PATH variable to the path of node.socket that you identified when starting the node:\nCARDANO_NODE_SOCKET_PATH\nnode.socket\nexport CARDANO_NODE_SOCKET_PATH=~/node.socket\nexport CARDANO_NODE_SOCKET_PATH=~/node.socket\nRegister the stake address you previously created by generating a registration certificate:\nRegister the stake address you previously created by generating a registration certificate:\ncardano-cli conway stake-address registration-certificate \\--stake-verification-key-file stake.vkey \\--key-reg-deposit-amt $(cardano-cli conway query gov-state --testnet-magic 4 | jq .currentPParams.stakeAddressDeposit) \\--out-file registration.cert\ncardano-cli conway stake-address registration-certificate \\--stake-verification-key-file stake.vkey \\--key-reg-deposit-amt $(cardano-cli conway query gov-state --testnet-magic 4 | jq .currentPParams.stakeAddressDeposit) \\--out-file registration.cert\nCreate a transaction to submit the stake key registration certificate to the chain. Creating a transaction using the CLI always involves a three-step process: BUILDING, SIGNING, AND SUBMITTING the transaction.\nCreate a transaction to submit the stake key registration certificate to the chain. Creating a transaction using the CLI always involves a three-step process: BUILDING, SIGNING, AND SUBMITTING the transaction.\nBuild the transaction:\ncardano-cli conway transaction build \\--testnet-magic 4 \\--witness-override 2 \\--tx-in $(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]') \\--change-address $(cat payment.addr) \\--certificate-file registration.cert \\--out-file tx.raw\ncardano-cli conway transaction build \\--testnet-magic 4 \\--witness-override 2 \\--tx-in $(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]') \\--change-address $(cat payment.addr) \\--certificate-file registration.cert \\--out-file tx.raw\nSign the transaction:\ncardano-cli conway transaction sign \\--tx-body-file tx.raw \\--signing-key-file payment.skey \\--signing-key-file stake.skey \\--testnet-magic 4 \\--out-file tx.signed\ncardano-cli conway transaction sign \\--tx-body-file tx.raw \\--signing-key-file payment.skey \\--signing-key-file stake.skey \\--testnet-magic 4 \\--out-file tx.signed\nSubmit the transaction:\ncardano-cli conway transaction submit \\--testnet-magic 4 \\--tx-file tx.signed\ncardano-cli conway transaction submit \\--testnet-magic 4 \\--tx-file tx.signed\nGenerate cold keys and the operational certificate for your pool:\nGenerate cold keys and the operational certificate for your pool:\ncardano-cli conway node key-gen \\--cold-verification-key-file cold.vkey \\--cold-signing-key-file cold.skey \\--operational-certificate-issue-counter-file opcert.counter\ncardano-cli conway node key-gen \\--cold-verification-key-file cold.vkey \\--cold-signing-key-file cold.skey \\--operational-certificate-issue-counter-file opcert.counter\nGenerate the key-evolving-signature (KES) keys:\nGenerate the key-evolving-signature (KES) keys:\ncardano-cli conway node key-gen-KES \\--verification-key-file kes.vkey \\--signing-key-file kes.skey\ncardano-cli conway node key-gen-KES \\--verification-key-file kes.vkey \\--signing-key-file kes.skey\nGenerate VRF keys:\nGenerate VRF keys:\ncardano-cli conway node key-gen-VRF \\--verification-key-file vrf.vkey \\--signing-key-file vrf.skey\ncardano-cli conway node key-gen-VRF \\--verification-key-file vrf.vkey \\--signing-key-file vrf.skey\nCreate your stake pool registration certificate:\nCreate your stake pool registration certificate:\ncardano-cli conway stake-pool registration-certificate \\--cold-verification-key-file cold.vkey \\--vrf-verification-key-file vrf.vkey \\--pool-pledge 9000000000 \\--pool-cost 340000000 \\--pool-margin 0.05 \\--pool-reward-account-verification-key-file stake.vkey \\--pool-owner-stake-verification-key-file stake.vkey \\--testnet-magic 4 \\--pool-relay-ipv4 <RELAY NODE PUBLIC IP> \\--pool-relay-port <RELAY NODE PORT> \\--out-file pool-registration.cert\ncardano-cli conway stake-pool registration-certificate \\--cold-verification-key-file cold.vkey \\--vrf-verification-key-file vrf.vkey \\--pool-pledge 9000000000 \\--pool-cost 340000000 \\--pool-margin 0.05 \\--pool-reward-account-verification-key-file stake.vkey \\--pool-owner-stake-verification-key-file stake.vkey \\--testnet-magic 4 \\--pool-relay-ipv4 <RELAY NODE PUBLIC IP> \\--pool-relay-port <RELAY NODE PORT> \\--out-file pool-registration.cert\nCreate a stake delegation certificate:\nCreate a stake delegation certificate:\ncardano-cli conway stake-address stake-delegation-certificate \\--stake-verification-key-file stake.vkey \\--cold-verification-key-file cold.vkey \\--out-file delegation.cert\ncardano-cli conway stake-address stake-delegation-certificate \\--stake-verification-key-file stake.vkey \\--cold-verification-key-file cold.vkey \\--out-file delegation.cert\nBuild, sign and submit the transaction\nBuild, sign and submit the transaction\nBuild:\ncardano-cli conway transaction build \\--testnet-magic 4 \\--witness-override 3 \\--tx-in $(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]') \\--change-address $(cat payment.addr) \\--certificate-file pool-registration.cert \\--certificate-file delegation.cert \\--out-file tx.raw\ncardano-cli conway transaction build \\--testnet-magic 4 \\--witness-override 3 \\--tx-in $(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]') \\--change-address $(cat payment.addr) \\--certificate-file pool-registration.cert \\--certificate-file delegation.cert \\--out-file tx.raw\nSign:\ncardano-cli conway transaction sign \\--tx-body-file tx.raw \\--signing-key-file payment.skey \\--signing-key-file cold.skey \\--signing-key-file stake.skey \\--testnet-magic 4 \\--out-file tx.signed\ncardano-cli conway transaction sign \\--tx-body-file tx.raw \\--signing-key-file payment.skey \\--signing-key-file cold.skey \\--signing-key-file stake.skey \\--testnet-magic 4 \\--out-file tx.signed\nSubmit:\ncardano-cli conway transaction submit \\--testnet-magic 4 \\--tx-file tx.signed\ncardano-cli conway transaction submit \\--testnet-magic 4 \\--tx-file tx.signed\nGet your pool ID, you will need to get a delegation from the faucet:\nGet your pool ID, you will need to get a delegation from the faucet:\ncardano-cli conway stake-pool id \\--cold-verification-key-file cold.vkey \\--output-format bech32 \\--out-file pool.id\ncardano-cli conway stake-pool id \\--cold-verification-key-file cold.vkey \\--output-format bech32 \\--out-file pool.id\nGenerate your operational certificate:\nGenerate your operational certificate:\nslotsPerKESPeriod=$(cat shelley-genesis.json | jq -r '.slotsPerKESPeriod')slotNo=$(cardano-cli query tip --testnet-magic 4 | jq -r '.slot')kesPeriod=$((${slotNo} / ${slotsPerKESPeriod}))cardano-cli conway node issue-op-cert --kes-verification-key-file kes.vkey --cold-signing-key-file cold.skey --operational-certificate-issue-counter-file opcert.counter --kes-period ${kesPeriod} --out-file opcert.cert\nslotsPerKESPeriod=$(cat shelley-genesis.json | jq -r '.slotsPerKESPeriod')slotNo=$(cardano-cli query tip --testnet-magic 4 | jq -r '.slot')kesPeriod=$((${slotNo} / ${slotsPerKESPeriod}))cardano-cli conway node issue-op-cert --kes-verification-key-file kes.vkey --cold-signing-key-file cold.skey --operational-certificate-issue-counter-file opcert.counter --kes-period ${kesPeriod} --out-file opcert.cert\nRequest a stake delegation from the faucet. Note that although the delegation will ocurr immediately, you will need two more epochs for your Block producer to start creating blocks. This due to the stake snashopt mechanism.Restart your node using your pool credentials:\nRequest a stake delegation from the faucet. Note that although the delegation will ocurr immediately, you will need two more epochs for your Block producer to start creating blocks. This due to the stake snashopt mechanism.\nRequest a stake delegation from the faucet. Note that although the delegation will ocurr immediately, you will need two more epochs for your Block producer to start creating blocks. This due to the stake snashopt mechanism.\nRestart your node using your pool credentials:\nRestart your node using your pool credentials:\ncardano-node run --topology topology.json \\--database-path db \\--socket-path node.socket \\--shelley-kes-key kes.skey \\--shelley-vrf-key vrf.skey \\--shelley-operational-certificate opcert.cert \\--port 3001 \\--config config.json\ncardano-node run --topology topology.json \\--database-path db \\--socket-path node.socket \\--shelley-kes-key kes.skey \\--shelley-vrf-key vrf.skey \\--shelley-operational-certificate opcert.cert \\--port 3001 \\--config config.json\nYour stake pool will take part of the stake snapshot on the next epoch boundary. After that, you will be able to query the stake delegated to your pool:\nYour stake pool will take part of the stake snapshot on the next epoch boundary. After that, you will be able to query the stake delegated to your pool:\ncardano-cli conway query stake-snapshot \\--testnet-magic 4 \\--stake-pool-id <pool_id>\ncardano-cli conway query stake-snapshot \\--testnet-magic 4 \\--stake-pool-id <pool_id>\nAfter two epochs (2 days in SanchoNet) your stake pool should start producing blocks, the easiest way to verify it is to grep your node logs\nAfter two epochs (2 days in SanchoNet) your stake pool should start producing blocks, the easiest way to verify it is to grep your node logs\ngrep\ngrep -e TraceForgedBlock\ngrep -e TraceForgedBlock\nPrerequisites\nSet up a relay node\nSet up a block producer\nInstall jq and set the node socket path\nRegister the stake address\nGenerate keys for the stake pool\nGenerate the registration and delegation certificates for the pool\nSubmit the certificates in a transaction\nStarting the node as a block-producer\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nRegistering as a SanchoNet delegate representative (DRep) | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nRegister a DRep\nPayment address with funds\nA SanchoNet node\nGenerate a DRep key pair:\nGenerate a DRep key pair:\ncardano-cli conway governance drep key-gen \\--verification-key-file drep.vkey \\--signing-key-file drep.skey\ncardano-cli conway governance drep key-gen \\--verification-key-file drep.vkey \\--signing-key-file drep.skey\n{ \"type\": \"DRepSigningKey_ed25519\", \"description\": \"Delegate Representative Signing Key\", \"cborHex\": \"5820eba7053fdc9cb3b8aacf142d3d4ad575bb48fb92f4082d81605ac8e2ccfead5d\"}\n{ \"type\": \"DRepSigningKey_ed25519\", \"description\": \"Delegate Representative Signing Key\", \"cborHex\": \"5820eba7053fdc9cb3b8aacf142d3d4ad575bb48fb92f4082d81605ac8e2ccfead5d\"}\n{ \"type\": \"DRepVerificationKey_ed25519\", \"description\": \"Delegate Representative Verification Key\", \"cborHex\": \"5820c19e0e939609531cfd04dcfa5bf1a5f3e245aa88e163759341aba296af34cc7e\"}\n{ \"type\": \"DRepVerificationKey_ed25519\", \"description\": \"Delegate Representative Verification Key\", \"cborHex\": \"5820c19e0e939609531cfd04dcfa5bf1a5f3e245aa88e163759341aba296af34cc7e\"}\nGenerate a SanchoNet DRep ID:\nGenerate a SanchoNet DRep ID:\ncardano-cli conway governance drep id \\--drep-verification-key-file drep.vkey \\--out-file drep.id\ncardano-cli conway governance drep id \\--drep-verification-key-file drep.vkey \\--out-file drep.id\ndrep124w9k5ml25kcshqet8r3g2pwk6kqdhj79thg2rphf5u5urve0an\ndrep124w9k5ml25kcshqet8r3g2pwk6kqdhj79thg2rphf5u5urve0an\nCreate a SanchoNet DRep registration certificate\nCreate a SanchoNet DRep registration certificate\nThere are three ways to generate the certificate:\nUsing the drep.vkey file:\ncardano-cli conway governance drep registration-certificate \\--drep-verification-key-file drep.vkey \\--key-reg-deposit-amt $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r .currentPParams.dRepDeposit) \\--out-file drep-register.cert\ncardano-cli conway governance drep registration-certificate \\--drep-verification-key-file drep.vkey \\--key-reg-deposit-amt $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r .currentPParams.dRepDeposit) \\--out-file drep-register.cert\nUsing the DRep verification key:\ncardano-cli conway governance drep registration-certificate \\--drep-verification-key \"$(cat drep.vkey | jq -r .cborHex | cut -c 5-)\" \\--key-reg-deposit-amt $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r .currentPParams.dRepDeposit) \\--out-file drep-register.cert\ncardano-cli conway governance drep registration-certificate \\--drep-verification-key \"$(cat drep.vkey | jq -r .cborHex | cut -c 5-)\" \\--key-reg-deposit-amt $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r .currentPParams.dRepDeposit) \\--out-file drep-register.cert\nUsing the DRep ID:\ncardano-cli conway governance drep registration-certificate \\--drep-key-hash $(cat drep.id) \\--key-reg-deposit-amt $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r .currentPParams.dRepDeposit) \\--out-file drep-register.cert\ncardano-cli conway governance drep registration-certificate \\--drep-key-hash $(cat drep.id) \\--key-reg-deposit-amt $(cardano-cli conway query gov-state --testnet-magic 4 | jq -r .currentPParams.dRepDeposit) \\--out-file drep-register.cert\nAny of the above methods produces drep-register.cert, which contains:\n{ \"type\": \"CertificateShelley\", \"description\": \"DRep Key Registration Certificate\", \"cborHex\": \"84108200581c555c5b537f552d885c1959c714282eb6ac06de5e2aee850c374d394e00f6\"}\n{ \"type\": \"CertificateShelley\", \"description\": \"DRep Key Registration Certificate\", \"cborHex\": \"84108200581c555c5b537f552d885c1959c714282eb6ac06de5e2aee850c374d394e00f6\"}\nSubmit the SanchoNet DRep registration certificate in a transaction.\nSubmit the SanchoNet DRep registration certificate in a transaction.\nBuild:\ncardano-cli conway transaction build \\--testnet-magic 4 \\--witness-override 2 \\--tx-in $(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]') \\--change-address $(cat payment.addr) \\--certificate-file drep-register.cert \\--out-file tx.raw\ncardano-cli conway transaction build \\--testnet-magic 4 \\--witness-override 2 \\--tx-in $(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]') \\--change-address $(cat payment.addr) \\--certificate-file drep-register.cert \\--out-file tx.raw\nSign:\ncardano-cli conway transaction sign \\--tx-body-file tx.raw \\--signing-key-file payment.skey \\--signing-key-file drep.skey \\--testnet-magic 4 \\--out-file tx.signed\ncardano-cli conway transaction sign \\--tx-body-file tx.raw \\--signing-key-file payment.skey \\--signing-key-file drep.skey \\--testnet-magic 4 \\--out-file tx.signed\nSubmit:\ncardano-cli conway transaction submit \\--testnet-magic 4 \\--tx-file tx.signed\ncardano-cli conway transaction submit \\--testnet-magic 4 \\--tx-file tx.signed\nPre-requisites\nGenerate SanchoNet DRep keys and an ID\nGenerate the registration certificate\nSubmit certificate in a transaction\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nRegistering a multisignature delegate representative (DRep) | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nRegister a multisignature DRep\nIn certain scenarios, a Delegate Representative (DRep) may comprise multiple individuals collectively involved in decision-making processes. Registering a multisignature DRep proves to be an optimal mechanism for such collaborative setups.\nWe can utilize Native scripts to register a multisignature DRep. In this example, we will establish a multisignature DRep composed of three sets of keys, where the endorsement of two out of the three sets is necessary.\nPayment address with funds\nA SanchoNet node\nEach individual member of the DRep must generate a DRep key pair and calculate its verification key hash (a DRep ID). Later on we will use the key hashes to build the Native script.\nGenerate a DRep key pair:\nGenerate a DRep key pair:\ncardano-cli conway governance drep key-gen \\--verification-key-file drep1.vkey \\--signing-key-file drep1.skey\ncardano-cli conway governance drep key-gen \\--verification-key-file drep1.vkey \\--signing-key-file drep1.skey\n{ \"type\": \"DRepSigningKey_ed25519\", \"description\": \"Delegate Representative Signing Key\", \"cborHex\": \"5820eba7053fdc9cb3b8aacf142d3d4ad575bb48fb92f4082d81605ac8e2ccfead5d\"}\n{ \"type\": \"DRepSigningKey_ed25519\", \"description\": \"Delegate Representative Signing Key\", \"cborHex\": \"5820eba7053fdc9cb3b8aacf142d3d4ad575bb48fb92f4082d81605ac8e2ccfead5d\"}\n{ \"type\": \"DRepVerificationKey_ed25519\", \"description\": \"Delegate Representative Verification Key\", \"cborHex\": \"5820c19e0e939609531cfd04dcfa5bf1a5f3e245aa88e163759341aba296af34cc7e\"}\n{ \"type\": \"DRepVerificationKey_ed25519\", \"description\": \"Delegate Representative Verification Key\", \"cborHex\": \"5820c19e0e939609531cfd04dcfa5bf1a5f3e245aa88e163759341aba296af34cc7e\"}\nGet the DRep ID (verification key hash) in \"hex\" format:\nGet the DRep ID (verification key hash) in \"hex\" format:\ncardano-cli conway governance drep id \\--drep-verification-key-file drep1.vkey \\--output-format hex \\--out-file drep1.id\ncardano-cli conway governance drep id \\--drep-verification-key-file drep1.vkey \\--output-format hex \\--out-file drep1.id\ncat drep1.ide6d27c194fd18f39e080073e5ea02aa78abe4b6c84d78a498302461c\ncat drep1.ide6d27c194fd18f39e080073e5ea02aa78abe4b6c84d78a498302461c\nMulti-signature scripts can be written using JSON syntax. This is the format that the cardano-cli tool accepts. In this example we want the script to evaluate to True if and only if at least two valid sigantures are present, this is captured by the fields type and required.\ncardano-cli\nTrue\ntype\nrequired\nUse a text editor to build your script, let's name it drep-multisig.json:\nUse a text editor to build your script, let's name it drep-multisig.json:\ndrep-multisig.json\n{ \"type\": \"atLeast\", \"required\": 2, \"scripts\": [ { \"type\": \"sig\", \"keyHash\": \"e6d27c194fd18f39e080073e5ea02aa78abe4b6c84d78a498302461c\" }, { \"type\": \"sig\", \"keyHash\": \"5ab00e8cd1142fcffc5f7a2c2e3549874afd89e26995d7686c2714d4\" }, { \"type\": \"sig\", \"keyHash\": \"db5a8cbb0df0359c36541727229993b21371f834202733c9bbabc1fd\" } ]}\n{ \"type\": \"atLeast\", \"required\": 2, \"scripts\": [ { \"type\": \"sig\", \"keyHash\": \"e6d27c194fd18f39e080073e5ea02aa78abe4b6c84d78a498302461c\" }, { \"type\": \"sig\", \"keyHash\": \"5ab00e8cd1142fcffc5f7a2c2e3549874afd89e26995d7686c2714d4\" }, { \"type\": \"sig\", \"keyHash\": \"db5a8cbb0df0359c36541727229993b21371f834202733c9bbabc1fd\" } ]}\nWe can choose a different type of script, for example type \"any\", where the script evaluates to True with a single valid signature from the list:\nTrue\n{ \"type\": \"any\", \"scripts\": [ { \"type\": \"sig\", \"keyHash\": \"e6d27c194fd18f39e080073e5ea02aa78abe4b6c84d78a498302461c\" }, { \"type\": \"sig\", \"keyHash\": \"5ab00e8cd1142fcffc5f7a2c2e3549874afd89e26995d7686c2714d4\" }, { \"type\": \"sig\", \"keyHash\": \"db5a8cbb0df0359c36541727229993b21371f834202733c9bbabc1fd\" } ]}\n{ \"type\": \"any\", \"scripts\": [ { \"type\": \"sig\", \"keyHash\": \"e6d27c194fd18f39e080073e5ea02aa78abe4b6c84d78a498302461c\" }, { \"type\": \"sig\", \"keyHash\": \"5ab00e8cd1142fcffc5f7a2c2e3549874afd89e26995d7686c2714d4\" }, { \"type\": \"sig\", \"keyHash\": \"db5a8cbb0df0359c36541727229993b21371f834202733c9bbabc1fd\" } ]}\nOr for a more strict setup we can use type \"all\", where all the signatures are required:\n{ \"type\": \"all\", \"scripts\": [ { \"type\": \"sig\", \"keyHash\": \"e6d27c194fd18f39e080073e5ea02aa78abe4b6c84d78a498302461c\" }, { \"type\": \"sig\", \"keyHash\": \"5ab00e8cd1142fcffc5f7a2c2e3549874afd89e26995d7686c2714d4\" }, { \"type\": \"sig\", \"keyHash\": \"db5a8cbb0df0359c36541727229993b21371f834202733c9bbabc1fd\" } ]}\n{ \"type\": \"all\", \"scripts\": [ { \"type\": \"sig\", \"keyHash\": \"e6d27c194fd18f39e080073e5ea02aa78abe4b6c84d78a498302461c\" }, { \"type\": \"sig\", \"keyHash\": \"5ab00e8cd1142fcffc5f7a2c2e3549874afd89e26995d7686c2714d4\" }, { \"type\": \"sig\", \"keyHash\": \"db5a8cbb0df0359c36541727229993b21371f834202733c9bbabc1fd\" } ]}\nWe'll need the script hash (the DRep ID), calculate it with:\nWe'll need the script hash (the DRep ID), calculate it with:\ncardano-cli hash script \\ --script-file drep-multisig.json \\ --out-file drep-multisig.id\ncardano-cli hash script \\ --script-file drep-multisig.json \\ --out-file drep-multisig.id\ncat drep-multisig.idd862ee2eb3ce246b23ff7e1f62ae0705013e793787485cb6e1845356\ncat drep-multisig.idd862ee2eb3ce246b23ff7e1f62ae0705013e793787485cb6e1845356\nGet the DRep deposit amount and store in a variable:\nGet the DRep deposit amount and store in a variable:\ndrepDeposit=$(cardano-cli conway query gov-state --testnet-magic 4 | jq -r .currentPParams.dRepDeposit)\ndrepDeposit=$(cardano-cli conway query gov-state --testnet-magic 4 | jq -r .currentPParams.dRepDeposit)\nGenerate the DRep registration certificate:\nGenerate the DRep registration certificate:\ncardano-cli conway governance drep registration-certificate \\ --drep-script-hash \"$(cat drep-multisig.id)\" \\ --key-reg-deposit-amt \"$drepDeposit\" \\ --out-file drep-multisig-reg.cert\ncardano-cli conway governance drep registration-certificate \\ --drep-script-hash \"$(cat drep-multisig.id)\" \\ --key-reg-deposit-amt \"$drepDeposit\" \\ --out-file drep-multisig-reg.cert\nBuild the transaction. Note that we use --witness-override 4 because this tranaction will contain up to 4 signatures, 1 from the payment key and up to 3 members of the DRep.\nBuild the transaction. Note that we use --witness-override 4 because this tranaction will contain up to 4 signatures, 1 from the payment key and up to 3 members of the DRep.\n--witness-override 4\ncardano-cli conway transaction build \\ --testnet-magic 4 \\ --tx-in $(cardano-cli conway query utxo --address $(cat payment.addr) --testnet-magic 4 --output-json | jq -r 'keys[0]') \\ --change-address $(cat payment.addr) \\ --witness-override 4 \\ --certificate-file drep-multisig-reg.cert \\ --certificate-script-file drep-multisig.json \\ --out-file tx.raw\ncardano-cli conway transaction build \\ --testnet-magic 4 \\ --tx-in $(cardano-cli conway query utxo --address $(cat payment.addr) --testnet-magic 4 --output-json | jq -r 'keys[0]') \\ --change-address $(cat payment.addr) \\ --witness-override 4 \\ --certificate-file drep-multisig-reg.cert \\ --certificate-script-file drep-multisig.json \\ --out-file tx.raw\nEach member of the DRep will witness the transaction with its individual keys from step 1. In addition, we need the witness from the payment address to pay for the transaction fee.\nEach member of the DRep will witness the transaction with its individual keys from step 1. In addition, we need the witness from the payment address to pay for the transaction fee.\nWitnessing the transaction with the payment key:\ncardano-cli conway transaction witness \\ --testnet-magic 4 \\ --tx-body-file tx.raw \\ --signing-key-file payment.skey \\ --out-file payment.witness\ncardano-cli conway transaction witness \\ --testnet-magic 4 \\ --tx-body-file tx.raw \\ --signing-key-file payment.skey \\ --out-file payment.witness\nWitnessing the transaction with the DRep keys from each memeber:\ncardano-cli conway transaction witness \\ --testnet-magic 4 \\ --tx-body-file tx.raw \\ --signing-key-file drep1.skey \\ --out-file drep1.witness\ncardano-cli conway transaction witness \\ --testnet-magic 4 \\ --tx-body-file tx.raw \\ --signing-key-file drep1.skey \\ --out-file drep1.witness\ncardano-cli conway transaction witness \\ --testnet-magic 4 \\ --tx-body-file tx.raw \\ --signing-key-file drep2.skey \\ --out-file drep2.witness\ncardano-cli conway transaction witness \\ --testnet-magic 4 \\ --tx-body-file tx.raw \\ --signing-key-file drep2.skey \\ --out-file drep2.witness\ncardano-cli conway transaction witness \\ --testnet-magic 4 \\ --tx-body-file tx.raw \\ --signing-key-file drep3.skey \\ --out-file drep3.witness\ncardano-cli conway transaction witness \\ --testnet-magic 4 \\ --tx-body-file tx.raw \\ --signing-key-file drep3.skey \\ --out-file drep3.witness\nAssemble the tranaction with all the witnesses from previous step:\nAssemble the tranaction with all the witnesses from previous step:\ncardano-cli conway transaction assemble \\ --tx-body-file tx.raw \\ --witness-file payment.witness \\ --witness-file drep1.witness \\ --witness-file drep2.witness \\ --witness-file drep3.witness \\ --out-file tx.signed\ncardano-cli conway transaction assemble \\ --tx-body-file tx.raw \\ --witness-file payment.witness \\ --witness-file drep1.witness \\ --witness-file drep2.witness \\ --witness-file drep3.witness \\ --out-file tx.signed\nSubmit the transaction\nSubmit the transaction\ncardano-cli conway transaction submit \\ --testnet-magic 4 \\ --tx-file tx.signed\ncardano-cli conway transaction submit \\ --testnet-magic 4 \\ --tx-file tx.signed\nQuery the DRep state to confirm\nQuery the DRep state to confirm\ncardano-cli conway query drep-state \\ --testnet-magic 4 \\ --drep-script-hash $(cat drep-multisig.id)\ncardano-cli conway query drep-state \\ --testnet-magic 4 \\ --drep-script-hash $(cat drep-multisig.id)\n[ [ { \"scriptHash\": \"d862ee2eb3ce246b23ff7e1f62ae0705013e793787485cb6e1845356\" }, { \"anchor\": null, \"deposit\": 2000000, \"expiry\": 270 } ]]\n[ [ { \"scriptHash\": \"d862ee2eb3ce246b23ff7e1f62ae0705013e793787485cb6e1845356\" }, { \"anchor\": null, \"deposit\": 2000000, \"expiry\": 270 } ]]\nAwesome! Now, we just need to delegate voting power to our DRep!\nPre-requisites\nGenerate SanchoNet DRep keys and an ID\nBuild the Native script\nGenerate the DRep registration certificate\nSubmit the Registration certificate in a transaction\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nDelegate votes to a DRep | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nDelegate votes to a DRep\nDelegating your voting power to a SanchoNet delegate representative (DRep) operates much like delegating your stake to a stake pool. Voting power delegation involves the issuance of a delegation certificate from your stake key to the chosen SanchoNet DRep. Just as with stake delegation, the process of delegating votes to a SanchoNet DRep does not entail relinquishing control of your funds. Instead, the vote delegation certificate grants the selected DRep permission to vote on your behalf.\nIn addition to the registered SanchoNet DReps, the system features a couple of default DReps:\n--always-abstain: this option signals your intention not to participate in the voting procedures, indicating a choice to abstain from the voting process\n--always-abstain: this option signals your intention not to participate in the voting procedures, indicating a choice to abstain from the voting process\n--always-no-confidence: this option signifies your lack of trust in the current constitutional committee, indicating a vote of no confidence in their decisions\n--always-no-confidence: this option signifies your lack of trust in the current constitutional committee, indicating a vote of no confidence in their decisions\nPayment keys and address with funds\nStake key\nDefault SanchoNet DRep selection: --always-abstain or --always-no-confidence\n--always-abstain\n--always-no-confidence\nSanchoNet DRep ID (key hash or script hash) of a registered DRep. See useful cli queries\nA SanchoNet node\nGenerate the vote delegation certificate.\nGenerate the vote delegation certificate.\nDelegating to the --always-abstain default DRep:\n--always-abstain\ncardano-cli conway stake-address vote-delegation-certificate \\ --stake-verification-key-file stake.vkey \\ --always-abstain \\ --out-file vote-deleg.cert\ncardano-cli conway stake-address vote-delegation-certificate \\ --stake-verification-key-file stake.vkey \\ --always-abstain \\ --out-file vote-deleg.cert\nDelegating to the --always-no-confidence default DRep:\n--always-no-confidence\ncardano-cli conway stake-address vote-delegation-certificate \\ --stake-verification-key-file stake.vkey \\ --always-no-confidence \\ --out-file vote-deleg.cert\ncardano-cli conway stake-address vote-delegation-certificate \\ --stake-verification-key-file stake.vkey \\ --always-no-confidence \\ --out-file vote-deleg.cert\nDelegating to a key-based registered SanchoNet DRep:\ncardano-cli conway stake-address vote-delegation-certificate \\ --stake-verification-key-file stake.vkey \\ --drep-key-hash $(cat drep.id) \\ --out-file vote-deleg.cert\ncardano-cli conway stake-address vote-delegation-certificate \\ --stake-verification-key-file stake.vkey \\ --drep-key-hash $(cat drep.id) \\ --out-file vote-deleg.cert\nDelegating to a script-based (i.e. multisignature) registered SanchoNet DRep:\ncardano-cli conway stake-address vote-delegation-certificate \\--stake-verification-key-file stake.vkey \\--drep-script-hash $(cat drep-multisig.id) \\--out-file vote-deleg.cert\ncardano-cli conway stake-address vote-delegation-certificate \\--stake-verification-key-file stake.vkey \\--drep-script-hash $(cat drep-multisig.id) \\--out-file vote-deleg.cert\nSubmit the vote delegation certificate in a transaction.\nSubmit the vote delegation certificate in a transaction.\nBuild:\ncardano-cli conway transaction build \\--testnet-magic 4 \\--witness-override 2 \\--tx-in $(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]') \\--change-address $(cat payment.addr) \\--certificate-file vote-deleg.cert \\--out-file tx.raw\ncardano-cli conway transaction build \\--testnet-magic 4 \\--witness-override 2 \\--tx-in $(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]') \\--change-address $(cat payment.addr) \\--certificate-file vote-deleg.cert \\--out-file tx.raw\nSign with payment and stake keys:\ncardano-cli conway transaction sign \\--tx-body-file tx.raw \\--signing-key-file payment.skey \\--signing-key-file stake.skey \\--testnet-magic 4 \\--out-file tx.signed\ncardano-cli conway transaction sign \\--tx-body-file tx.raw \\--signing-key-file payment.skey \\--signing-key-file stake.skey \\--testnet-magic 4 \\--out-file tx.signed\nSubmit:\ncardano-cli conway transaction submit \\--testnet-magic 4 \\--tx-file tx.signed\ncardano-cli conway transaction submit \\--testnet-magic 4 \\--tx-file tx.signed\nPrerequisites\nGenerating the vote delegation certificate\nSubmitting the certificate in a transaction\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nGenerate committee member keys and certificates | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nGenerate committee keys\nIndividuals who are to be nominated as committee members are required to generate a cold key pair. This requirement stems from the necessity to include the cold verification key (or its hash) in the governance action supporting their proposal. The term 'cold key pair' is used to emphasize its intentional storage in a secure, offline environment, which may include safeguarded USB drives, isolated computing machines, or similar devices deliberately disconnected from the internet for enhanced security.\ncardano-cli conway governance committee key-gen-cold \\ --cold-verification-key-file cc-cold.vkey \\ --cold-signing-key-file cc-cold.skey\ncardano-cli conway governance committee key-gen-cold \\ --cold-verification-key-file cc-cold.vkey \\ --cold-signing-key-file cc-cold.skey\ncardano-cli conway governance committee key-hash \\ --verification-key-file cc-cold.vkey > cc-key.hash\ncardano-cli conway governance committee key-hash \\ --verification-key-file cc-cold.vkey > cc-key.hash\ncat cc-key.hash89181f26b47c3d3b6b127df163b15b74b45bba7c3b7a1d185c05c2de\ncat cc-key.hash89181f26b47c3d3b6b127df163b15b74b45bba7c3b7a1d185c05c2de\nThe key hash would be typically used in the update committee governance action that attempts to add or remove CC members.\nAfter new committee members have been ratified by a governance action, the new committee members are required to generate a hot key pair and issue a hot key authorization certificate. This enables them to cast votes by signing their transactions with their hot signing key while keeping their cold keys securely stored in cold storage. In the event that the hot keys are compromised at any point, the committee member must generate a new hot key pair and issue a new hot key authorization certificate.\ncardano-cli conway governance committee key-gen-hot \\ --verification-key-file cc-hot.vkey \\ --signing-key-file cc-hot.skey\ncardano-cli conway governance committee key-gen-hot \\ --verification-key-file cc-hot.vkey \\ --signing-key-file cc-hot.skey\ncardano-cli conway governance committee create-hot-key-authorization-certificate \\ --cold-verification-key-file cc-cold.vkey \\ --hot-verification-key-file cc-hot.vkey \\ --out-file cc-hot-key-authorization.cert\ncardano-cli conway governance committee create-hot-key-authorization-certificate \\ --cold-verification-key-file cc-cold.vkey \\ --hot-verification-key-file cc-hot.vkey \\ --out-file cc-hot-key-authorization.cert\nSubmit the authorization certificate in a transaction:\ncardano-cli conway transaction build \\ --testnet-magic 4 \\ --tx-in \"$(cardano-cli query utxo --address \"$(cat payment.addr)\" --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]')\" \\ --change-address $(cat payment.addr) \\ --certificate-file cc-hot-key-authorization.cert \\ --witness-override 2 \\ --out-file tx.raw\ncardano-cli conway transaction build \\ --testnet-magic 4 \\ --tx-in \"$(cardano-cli query utxo --address \"$(cat payment.addr)\" --testnet-magic 4 --out-file /dev/stdout | jq -r 'keys[0]')\" \\ --change-address $(cat payment.addr) \\ --certificate-file cc-hot-key-authorization.cert \\ --witness-override 2 \\ --out-file tx.raw\ncardano-cli conway transaction sign \\ --testnet-magic 4 \\ --tx-body-file tx.raw \\ --signing-key-file payment.skey \\ --signing-key-file cc-cold.skey \\ --out-file tx.signed\ncardano-cli conway transaction sign \\ --testnet-magic 4 \\ --tx-body-file tx.raw \\ --signing-key-file payment.skey \\ --signing-key-file cc-cold.skey \\ --out-file tx.signed\ncardano-cli conway transaction submit \\ --testnet-magic 4 \\ --tx-file tx.signed\ncardano-cli conway transaction submit \\ --testnet-magic 4 \\ --tx-file tx.signed\nCommittee member cold keysGenerate the cold verification key hash:\nGenerate the cold verification key hash:\nHot key pair and authorization certificate\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nVoting on governance actions as a multisignature DRep | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nVoting as multisignature DRep\nPayment key pair\nAddress with funds\nMultisignature DRep. See Register multisig DRep\nA SanchoNet node\nTo vote on governance actions, follow this process:\nObtain the action ID of an ongoing governance action from Discord or query the governance state.Determine your voting stance; engage in discussion if requiredConstruct your vote file through the Cardano CLI. The example below demonstrates voting --yes, although options for --no or --abstain are also available.\nObtain the action ID of an ongoing governance action from Discord or query the governance state.\nDetermine your voting stance; engage in discussion if required\nConstruct your vote file through the Cardano CLI. The example below demonstrates voting --yes, although options for --no or --abstain are also available.\n--yes\n--no\n--abstain\nAssume that we have been given the action ID df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79#0 for a new constitution proposal.\ndf58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79#0\nObtain the URL and hash of the new constitution proposal from the governance state:\nObtain the URL and hash of the new constitution proposal from the governance state:\ncardano-cli conway query gov-state --testnet-magic 4 | \\jq -r --arg govActionId \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" '.proposals | to_entries[] | select(.value.actionId.txId | contains($govActionId)) | .value'\ncardano-cli conway query gov-state --testnet-magic 4 | \\jq -r --arg govActionId \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" '.proposals | to_entries[] | select(.value.actionId.txId | contains($govActionId)) | .value'\n{ \"action\": { \"contents\": [ null, { \"anchor\": { \"dataHash\": \"5d372dca1a4cc90d7d16d966c48270e33e3aa0abcb0e78f0d5ca7ff330d2245d\", \"url\": \"https://tinyurl.com/mr3ferf9\" } } ], \"tag\": \"NewConstitution\" }, \"actionId\": { \"govActionIx\": 0, \"txId\": \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" }, \"committeeVotes\": { \"keyHash-c8ac605b25d6084c2ceb28043c8f01b62629966d038a249c7847d66d\": \"VoteYes\", \"keyHash-d13507f7e7fb8ac3ce2094187c9d99d4601021e9ef5a5f310567765d\": \"VoteYes\" }, \"dRepVotes\": { \"keyHash-16faaf6daa2635bbf53bbbaf38b3a6040adf7ced2f7f08952592cf5b\": \"VoteYes\", \"keyHash-57cb90cfb635e76af648abf1b6a91519218a5919b3cba2527e3725d1\": \"VoteYes\", \"keyHash-7d84808d563f0f258ad7e4337c2c4bd13010930ebdf7b86c3bfd9ef8\": \"VoteYes\" }, \"deposit\": 0, \"expiresAfter\": 80, \"proposedIn\": 78, \"returnAddr\": { \"credential\": { \"keyHash\": \"f925cbd4eb78aad49ec7bf9b4ddfa4cc4486c967e392699d143c81aa\" }, \"network\": \"Testnet\" }, \"stakePoolVotes\": {}}\n{ \"action\": { \"contents\": [ null, { \"anchor\": { \"dataHash\": \"5d372dca1a4cc90d7d16d966c48270e33e3aa0abcb0e78f0d5ca7ff330d2245d\", \"url\": \"https://tinyurl.com/mr3ferf9\" } } ], \"tag\": \"NewConstitution\" }, \"actionId\": { \"govActionIx\": 0, \"txId\": \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" }, \"committeeVotes\": { \"keyHash-c8ac605b25d6084c2ceb28043c8f01b62629966d038a249c7847d66d\": \"VoteYes\", \"keyHash-d13507f7e7fb8ac3ce2094187c9d99d4601021e9ef5a5f310567765d\": \"VoteYes\" }, \"dRepVotes\": { \"keyHash-16faaf6daa2635bbf53bbbaf38b3a6040adf7ced2f7f08952592cf5b\": \"VoteYes\", \"keyHash-57cb90cfb635e76af648abf1b6a91519218a5919b3cba2527e3725d1\": \"VoteYes\", \"keyHash-7d84808d563f0f258ad7e4337c2c4bd13010930ebdf7b86c3bfd9ef8\": \"VoteYes\" }, \"deposit\": 0, \"expiresAfter\": 80, \"proposedIn\": 78, \"returnAddr\": { \"credential\": { \"keyHash\": \"f925cbd4eb78aad49ec7bf9b4ddfa4cc4486c967e392699d143c81aa\" }, \"network\": \"Testnet\" }, \"stakePoolVotes\": {}}\nDownload the file from the URL registered on the ledger state:\nDownload the file from the URL registered on the ledger state:\nwget https://tinyurl.com/mr3ferf9 -O constitution.txt\nwget https://tinyurl.com/mr3ferf9 -O constitution.txt\nVerify that the hash of the file matches the dataHashfrom the ledger state:\nVerify that the hash of the file matches the dataHashfrom the ledger state:\ndataHash\nb2sum -l 256 constitution.txt5d372dca1a4cc90d7d16d966c48270e33e3aa0abcb0e78f0d5ca7ff330d2245d constitution.txt\nb2sum -l 256 constitution.txt5d372dca1a4cc90d7d16d966c48270e33e3aa0abcb0e78f0d5ca7ff330d2245d constitution.txt\nEverything is in order; the text at the URL matches the dataHash, confirming that the text at the URL is precisely what we are voting for.\nIn the future, voting apps, explorers, wallets, and other tools could perform the filtering, ensuring that they only display actions whose URL content has been verified against the hash on the ledger state.\nVote with DRep keys:\nVote with DRep keys:\ncardano-cli conway governance vote create \\ --yes \\ --governance-action-tx-id \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" \\ --governance-action-index \"0\" \\ --drep-script-hash $(cat drep-multisig.id) \\ --out-file df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79-constitution.vote\ncardano-cli conway governance vote create \\ --yes \\ --governance-action-tx-id \"df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79\" \\ --governance-action-index \"0\" \\ --drep-script-hash $(cat drep-multisig.id) \\ --out-file df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79-constitution.vote\nBuild the transaction:\nBuild the transaction:\ncardano-cli conway transaction build \\ --testnet-magic 4 \\ --tx-in-script-file drep-multisig.json \\ --tx-in \"$(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --output-json | jq -r 'keys[0]')\" \\ --change-address $(cat payment.addr) \\ --vote-file df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79-constitution.vote \\ --witness-override 4 \\ --out-file vote-tx.raw\ncardano-cli conway transaction build \\ --testnet-magic 4 \\ --tx-in-script-file drep-multisig.json \\ --tx-in \"$(cardano-cli query utxo --address $(cat payment.addr) --testnet-magic 4 --output-json | jq -r 'keys[0]')\" \\ --change-address $(cat payment.addr) \\ --vote-file df58f714c0765f3489afb6909384a16c31d600695be7e86ff9c59cf2e8a48c79-constitution.vote \\ --witness-override 4 \\ --out-file vote-tx.raw\nEvery member of the DRep witnesses the transaction with their respective signing keys. Additionally, we need to witness the transaction with the payment signing key:\nEvery member of the DRep witnesses the transaction with their respective signing keys. Additionally, we need to witness the transaction with the payment signing key:\ncardano-cli conway transaction witness \\ --tx-body-file vote-tx.raw \\ --signing-key-file drep1.skey \\ --out-file drep1.witness\ncardano-cli conway transaction witness \\ --tx-body-file vote-tx.raw \\ --signing-key-file drep1.skey \\ --out-file drep1.witness\ncardano-cli conway transaction witness \\ --tx-body-file vote-tx.raw \\ --signing-key-file drep2.skey \\ --out-file drep2.witness\ncardano-cli conway transaction witness \\ --tx-body-file vote-tx.raw \\ --signing-key-file drep2.skey \\ --out-file drep2.witness\ncardano-cli conway transaction witness \\ --tx-body-file vote-tx.raw \\ --signing-key-file drep3.skey \\ --out-file drep3.witness\ncardano-cli conway transaction witness \\ --tx-body-file vote-tx.raw \\ --signing-key-file drep3.skey \\ --out-file drep3.witness\ncardano-cli conway transaction witness \\ --tx-body-file vote-tx.raw \\ --signing-key-file payment.skey \\ --out-file payment.witness\ncardano-cli conway transaction witness \\ --tx-body-file vote-tx.raw \\ --signing-key-file payment.skey \\ --out-file payment.witness\nAssemble the transaction:\nAssemble the transaction:\ncardano-cli conway transaction assemble \\ --tx-body-file vote-tx.raw \\ --witness-file payment.witness \\ --witness-file drep1.witness \\ --witness-file drep2.witness \\ --witness-file drep3.witness \\ --out-file vote-tx.signed\ncardano-cli conway transaction assemble \\ --tx-body-file vote-tx.raw \\ --witness-file payment.witness \\ --witness-file drep1.witness \\ --witness-file drep2.witness \\ --witness-file drep3.witness \\ --out-file vote-tx.signed\nSubmit the transaction:\nSubmit the transaction:\ncardano-cli conway transaction submit --testnet-magic 4 --tx-file vote-tx.signed\ncardano-cli conway transaction submit --testnet-magic 4 --tx-file vote-tx.signed\nPre-requisites\nVerify the content of the governance action\nCreate the vote file\nInclude the vote in a transaction\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nUseful jq filters | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nUseful jq filters\n'jq is like sed for JSON data - you can use it to slice, filter, map, and transform structured data with the same ease that sed, awk, grep and friends let you play with text.'\nInstall jq.\nBelow you will find some useful jq filters to parse the governance state.\ncurrent_epoch=$(cardano-cli query tip --testnet-magic 4 | jq .epoch)\ncurrent_epoch=$(cardano-cli query tip --testnet-magic 4 | jq .epoch)\ncardano-cli conway query gov-state --testnet-magic 4 \\ | jq --argjson epoch \"$current_epoch\" '.proposals | to_entries[] | select(.value.expiresAfter == $epoch)'\ncardano-cli conway query gov-state --testnet-magic 4 \\ | jq --argjson epoch \"$current_epoch\" '.proposals | to_entries[] | select(.value.expiresAfter == $epoch)'\ncurrent_epoch=$(cardano-cli query tip --testnet-magic 4 | jq .epoch)\ncurrent_epoch=$(cardano-cli query tip --testnet-magic 4 | jq .epoch)\ncardano-cli conway query gov-state --testnet-magic 4 \\ | jq -r --argjson epoch \"$current_epoch\" '.proposals | to_entries[] | select(.value.proposedIn == $epoch)'\ncardano-cli conway query gov-state --testnet-magic 4 \\ | jq -r --argjson epoch \"$current_epoch\" '.proposals | to_entries[] | select(.value.proposedIn == $epoch)'\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r ' .proposals | to_entries[] | {govActionId: .value.actionId, type: .value.proposalProcedure.govAction.tag, drepVoteCount: (.value.dRepVotes | keys | length)} ' | jq -s 'sort_by(.voteCount) | reverse[]'\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r ' .proposals | to_entries[] | {govActionId: .value.actionId, type: .value.proposalProcedure.govAction.tag, drepVoteCount: (.value.dRepVotes | keys | length)} ' | jq -s 'sort_by(.voteCount) | reverse[]'\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r ' .proposals | to_entries[] | {govActionId: .value.actionId, type: .value.proposalProcedure.govAction.tag, spoVoteCount: (.value.stakePoolVotes | keys | length)} ' | jq -s 'sort_by(.voteCount) | reverse[]'\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r ' .proposals | to_entries[] | {govActionId: .value.actionId, type: .value.proposalProcedure.govAction.tag, spoVoteCount: (.value.stakePoolVotes | keys | length)} ' | jq -s 'sort_by(.voteCount) | reverse[]'\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r ' .proposals | to_entries[] | {govActionId: .value.actionId, type: .value.proposalProcedure.govAction.tag, ccVoteCount: (.value.committeeVotes | keys | length)} ' | jq -s 'sort_by(.voteCount) | reverse[]'\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r ' .proposals | to_entries[] | {govActionId: .value.actionId, type: .value.proposalProcedure.govAction.tag, ccVoteCount: (.value.committeeVotes | keys | length)} ' | jq -s 'sort_by(.voteCount) | reverse[]'\ncurrent_epoch=$(cardano-cli query tip --testnet-magic 4 | jq .epoch)\ncurrent_epoch=$(cardano-cli query tip --testnet-magic 4 | jq .epoch)\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r --argjson current_epoch \"$current_epoch\" ' .proposals | to_entries[] | select(.value.expiresAfter >= ($current_epoch | tonumber) and .value.expiresAfter <= ($current_epoch + 2)) | { govActionId: .value.actionId, type: .value.proposalProcedure.govAction.tag, expiresAfter: .value.expiresAfter, committeeVotesCount: (.value.committeeVotes | length), dRepVotesCount: (.value.dRepVotes | length), stakePoolVotesCount: (.value.stakePoolVotes | length) } ' | jq -s 'sort_by(.expiresAfter)'\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r --argjson current_epoch \"$current_epoch\" ' .proposals | to_entries[] | select(.value.expiresAfter >= ($current_epoch | tonumber) and .value.expiresAfter <= ($current_epoch + 2)) | { govActionId: .value.actionId, type: .value.proposalProcedure.govAction.tag, expiresAfter: .value.expiresAfter, committeeVotesCount: (.value.committeeVotes | length), dRepVotesCount: (.value.dRepVotes | length), stakePoolVotesCount: (.value.stakePoolVotes | length) } ' | jq -s 'sort_by(.expiresAfter)'\nReplace keyHash-0e7d17c8a917eaee361924d6471331128b3e0de5323f54d70dd0c8c9 with the hex DRep ID of your interest, if it is a script based DRRep, make sure to use scriptHash instead of keyHash prefix.\nkeyHash-0e7d17c8a917eaee361924d6471331128b3e0de5323f54d70dd0c8c9\nscriptHash\nkeyHash\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r --arg dRepKey \"keyHash-0e7d17c8a917eaee361924d6471331128b3e0de5323f54d70dd0c8c9\" ' .proposals | to_entries[] | select(.value.dRepVotes[$dRepKey] != null) | { govActionId: .value.actionId, type: .value.proposalProcedure.govAction.tag, dRepVote: .value.dRepVotes[$dRepKey], expiresAfter: .value.expiresAfter, committeeVotesCount: (.value.committeeVotes | length), dRepVotesCount: (.value.dRepVotes | length), stakePoolVotesCount: (.value.stakePoolVotes | length) } '\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r --arg dRepKey \"keyHash-0e7d17c8a917eaee361924d6471331128b3e0de5323f54d70dd0c8c9\" ' .proposals | to_entries[] | select(.value.dRepVotes[$dRepKey] != null) | { govActionId: .value.actionId, type: .value.proposalProcedure.govAction.tag, dRepVote: .value.dRepVotes[$dRepKey], expiresAfter: .value.expiresAfter, committeeVotesCount: (.value.committeeVotes | length), dRepVotesCount: (.value.dRepVotes | length), stakePoolVotesCount: (.value.stakePoolVotes | length) } '\nReplace 058b60ead63f667c0ff5b40e269dd1f05ce3a804256735ad4eddce20 with the hex DRep ID of your interest.\n058b60ead63f667c0ff5b40e269dd1f05ce3a804256735ad4eddce20\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r --arg dRepKey \"keyHash-0e7d17c8a917eaee361924d6471331128b3e0de5323f54d70dd0c8c9\" ' .proposals | to_entries[] | select(.value.dRepVotes[$dRepKey] == null) | { govActionId: .value.actionId, type: .value.proposalProcedure.govAction.tag, expiresAfter: .value.expiresAfter, committeeVotesCount: (.value.committeeVotes | length), dRepVotesCount: (.value.dRepVotes | length), stakePoolVotesCount: (.value.stakePoolVotes | length) } '\ncardano-cli conway query gov-state --testnet-magic 4 | jq -r --arg dRepKey \"keyHash-0e7d17c8a917eaee361924d6471331128b3e0de5323f54d70dd0c8c9\" ' .proposals | to_entries[] | select(.value.dRepVotes[$dRepKey] == null) | { govActionId: .value.actionId, type: .value.proposalProcedure.govAction.tag, expiresAfter: .value.expiresAfter, committeeVotesCount: (.value.committeeVotes | length), dRepVotesCount: (.value.dRepVotes | length), stakePoolVotesCount: (.value.stakePoolVotes | length) } '\nReplace \"1e08794a48b71ec7e48d3190c7c30455f9538d0e54f4087915ff201167334bc7\" and \"0\" and with the governance action ID and index of your interest.\nand .value.actionId.govActionIx == $actionIndex\ncardano-cli conway query gov-state --testnet-magic 4 \\ | jq -r --arg actionTxId \"1e08794a48b71ec7e48d3190c7c30455f9538d0e54f4087915ff201167334bc7\" --arg actionIndex \"0\" ' .proposals | to_entries[] | select(.value.actionId.txId == $actionTxId and .value.actionId.govActionIx == ($actionIndex | tonumber)) | { govActionId: .value.actionId, dRepVoteYesCount: (.value.dRepVotes | with_entries(select(.value == \"VoteYes\")) | length), dRepVoteNoCount: (.value.dRepVotes | with_entries(select(.value == \"VoteNo\")) | length), dRepAbstainCount: (.value.dRepVotes | with_entries(select(.value == \"Abstain\")) | length), stakePoolVoteYesCount: (.value.stakePoolVotes | with_entries(select(.value == \"VoteYes\")) | length), stakePoolVoteNoCount: (.value.stakePoolVotes | with_entries(select(.value == \"VoteNo\")) | length), stakePoolAbstainCount: (.value.stakePoolVotes | with_entries(select(.value == \"Abstain\")) | length), committeeVoteYesCount: (.value.committeeVotes | with_entries(select(.value == \"VoteYes\")) | length), committeeVoteNoCount: (.value.committeeVotes | with_entries(select(.value == \"VoteNo\")) | length), committeeAbstainCount: (.value.committeeVotes | with_entries(select(.value == \"Abstain\")) | length) }'\ncardano-cli conway query gov-state --testnet-magic 4 \\ | jq -r --arg actionTxId \"1e08794a48b71ec7e48d3190c7c30455f9538d0e54f4087915ff201167334bc7\" --arg actionIndex \"0\" ' .proposals | to_entries[] | select(.value.actionId.txId == $actionTxId and .value.actionId.govActionIx == ($actionIndex | tonumber)) | { govActionId: .value.actionId, dRepVoteYesCount: (.value.dRepVotes | with_entries(select(.value == \"VoteYes\")) | length), dRepVoteNoCount: (.value.dRepVotes | with_entries(select(.value == \"VoteNo\")) | length), dRepAbstainCount: (.value.dRepVotes | with_entries(select(.value == \"Abstain\")) | length), stakePoolVoteYesCount: (.value.stakePoolVotes | with_entries(select(.value == \"VoteYes\")) | length), stakePoolVoteNoCount: (.value.stakePoolVotes | with_entries(select(.value == \"VoteNo\")) | length), stakePoolAbstainCount: (.value.stakePoolVotes | with_entries(select(.value == \"Abstain\")) | length), committeeVoteYesCount: (.value.committeeVotes | with_entries(select(.value == \"VoteYes\")) | length), committeeVoteNoCount: (.value.committeeVotes | with_entries(select(.value == \"VoteNo\")) | length), committeeAbstainCount: (.value.committeeVotes | with_entries(select(.value == \"Abstain\")) | length) }'\ntreasury withdrawal\ncurrent_epoch=$(cardano-cli query tip --testnet-magic 4 | jq .epoch)cardano-cli conway query gov-state --testnet-magic 4 | jq -r --arg currentEpoch \"$current_epoch\" ' .proposals | to_entries[] | select(.value.expiresAfter > ($currentEpoch | tonumber) and .value.proposalProcedure.govAction.tag == \"TreasuryWithdrawals\") | { type: .value.proposalProcedure.govAction.tag, govActionId: .value.actionId, expiresAfter: .value.expiresAfter, dRepVoteYesCount: (.value.dRepVotes | with_entries(select(.value == \"VoteYes\")) | length), dRepVoteNoCount: (.value.dRepVotes | with_entries(select(.value == \"VoteNo\")) | length), dRepAbstainCount: (.value.dRepVotes | with_entries(select(.value == \"Abstain\")) | length), committeeVoteYesCount: (.value.committeeVotes | with_entries(select(.value == \"VoteYes\")) | length), committeeVoteNoCount: (.value.committeeVotes | with_entries(select(.value == \"VoteNo\")) | length), committeeAbstainCount: (.value.committeeVotes | with_entries(select(.value == \"Abstain\")) | length) }' | jq -s 'sort_by(.expiresAfter)'\ncurrent_epoch=$(cardano-cli query tip --testnet-magic 4 | jq .epoch)cardano-cli conway query gov-state --testnet-magic 4 | jq -r --arg currentEpoch \"$current_epoch\" ' .proposals | to_entries[] | select(.value.expiresAfter > ($currentEpoch | tonumber) and .value.proposalProcedure.govAction.tag == \"TreasuryWithdrawals\") | { type: .value.proposalProcedure.govAction.tag, govActionId: .value.actionId, expiresAfter: .value.expiresAfter, dRepVoteYesCount: (.value.dRepVotes | with_entries(select(.value == \"VoteYes\")) | length), dRepVoteNoCount: (.value.dRepVotes | with_entries(select(.value == \"VoteNo\")) | length), dRepAbstainCount: (.value.dRepVotes | with_entries(select(.value == \"Abstain\")) | length), committeeVoteYesCount: (.value.committeeVotes | with_entries(select(.value == \"VoteYes\")) | length), committeeVoteNoCount: (.value.committeeVotes | with_entries(select(.value == \"VoteNo\")) | length), committeeAbstainCount: (.value.committeeVotes | with_entries(select(.value == \"Abstain\")) | length) }' | jq -s 'sort_by(.expiresAfter)'\nupdate committee\ncurrent_epoch=$(cardano-cli query tip --testnet-magic 4 | jq .epoch)cardano-cli conway query gov-state --testnet-magic 4 | jq -r --arg currentEpoch \"$current_epoch\" ' .proposals | to_entries[] | select(.value.expiresAfter > ($currentEpoch | tonumber) and.value.proposalProcedure.govAction.tag == \"UpdateCommittee\") | { type: .value.proposalProcedure.govAction.tag, govActionId: .value.actionId, expiresAfter: .value.expiresAfter, dRepVoteYesCount: (.value.dRepVotes | with_entries(select(.value == \"VoteYes\")) | length), dRepVoteNoCount: (.value.dRepVotes | with_entries(select(.value == \"VoteNo\")) | length), dRepAbstainCount: (.value.dRepVotes | with_entries(select(.value == \"Abstain\")) | length), stakePoolVoteYesCount: (.value.stakePoolVotes | with_entries(select(.value == \"VoteYes\")) | length), stakePoolVoteNoCount: (.value.stakePoolVotes | with_entries(select(.value == \"VoteNo\")) | length), stakePoolAbstainCount: (.value.stakePoolVotes | with_entries(select(.value == \"Abstain\")) | length) }' | jq -s 'sort_by(.expiresAfter)'\ncurrent_epoch=$(cardano-cli query tip --testnet-magic 4 | jq .epoch)cardano-cli conway query gov-state --testnet-magic 4 | jq -r --arg currentEpoch \"$current_epoch\" ' .proposals | to_entries[] | select(.value.expiresAfter > ($currentEpoch | tonumber) and.value.proposalProcedure.govAction.tag == \"UpdateCommittee\") | { type: .value.proposalProcedure.govAction.tag, govActionId: .value.actionId, expiresAfter: .value.expiresAfter, dRepVoteYesCount: (.value.dRepVotes | with_entries(select(.value == \"VoteYes\")) | length), dRepVoteNoCount: (.value.dRepVotes | with_entries(select(.value == \"VoteNo\")) | length), dRepAbstainCount: (.value.dRepVotes | with_entries(select(.value == \"Abstain\")) | length), stakePoolVoteYesCount: (.value.stakePoolVotes | with_entries(select(.value == \"VoteYes\")) | length), stakePoolVoteNoCount: (.value.stakePoolVotes | with_entries(select(.value == \"VoteNo\")) | length), stakePoolAbstainCount: (.value.stakePoolVotes | with_entries(select(.value == \"Abstain\")) | length) }' | jq -s 'sort_by(.expiresAfter)'\nShow governance actions that will expire at the end of the current epoch:\nShow governance actions that were proposed in the current epoch:\nSort governance actions by the number of DRep votes:\nSort by the number of SPO votes:\nSort by the number of CC votes:\nFilter actions that expire within the current and the next two epochs, including information about all roles' votes, sorted by expiration epoch:\nShow actions for which a specific DRep key has voted, indicating the DRep's vote and the total number of votes received for this action:\nShow actions where the given DRep key has not voted yet:\nShow the total number of 'yes', 'no', and 'abstain' votes for a given governance action ID:\nShow the active treasury withdrawal governance actions and their current vote count:\ntreasury withdrawal\nShow the active update committee governance actions and their current vote count:\nupdate committee\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nUseful CLI queries | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorialsCompile the guardrail scriptStart a SanchoNet nodeFile naming conventionGenerate keys and an addressStake address registrationRegister a stake poolRegister a DRepRegister a multisignature DRepDelegate votes to a DRepGenerate committee keysCreate governance actionsVoting on actionsVoting as multisignature DRepUseful jq filtersCLI queries\nCompile the guardrail script\nStart a SanchoNet node\nFile naming convention\nGenerate keys and an address\nStake address registration\nRegister a stake pool\nRegister a DRep\nRegister a multisignature DRep\nDelegate votes to a DRep\nGenerate committee keys\nCreate governance actions\nVoting on actions\nVoting as multisignature DRep\nUseful jq filters\nCLI queries\nDRep Pioneer Program\nTools and resources\nMeetups\nTutorials\nCLI queries\ncardano-cli conway query constitution --testnet-magic 4{ \"anchor\": { \"dataHash\": \"5d372dca1a4cc90d7d16d966c48270e33e3aa0abcb0e78f0d5ca7ff330d2245d\", \"url\": \"https://tinyurl.com/4xdkkjm3\" }}\ncardano-cli conway query constitution --testnet-magic 4{ \"anchor\": { \"dataHash\": \"5d372dca1a4cc90d7d16d966c48270e33e3aa0abcb0e78f0d5ca7ff330d2245d\", \"url\": \"https://tinyurl.com/4xdkkjm3\" }}\ncardano-cli conway query drep-state --testnet-magic 4 --all-dreps[ [ { \"scriptHash\": \"1d8fe9486b5fb282287568f04445c8f4d6cddf76ce2df527fd7debbe\" }, { \"anchor\": null, \"deposit\": 2000000, \"expiry\": 108 } ], [ { \"keyHash\": \"1da9afe241a10fe5ee9590843134d0eebd4a32af448c9ec91db2e863\" }, { \"anchor\": null, \"deposit\": 2000000, \"expiry\": 177 } ], [ { \"keyHash\": \"480036de36a123e98663370e4829ebd43aa9bb06ec4b6b25f3e178db\" }, { \"anchor\": null, \"deposit\": 2000000, \"expiry\": 176 } ], [ { \"keyHash\": \"5b440956e056c96c74d4820b39b4f91cc45bb2b46024c96a594bb2ed\" }, { \"anchor\": null, \"deposit\": 2000000, \"expiry\": 176 }, ]]\ncardano-cli conway query drep-state --testnet-magic 4 --all-dreps[ [ { \"scriptHash\": \"1d8fe9486b5fb282287568f04445c8f4d6cddf76ce2df527fd7debbe\" }, { \"anchor\": null, \"deposit\": 2000000, \"expiry\": 108 } ], [ { \"keyHash\": \"1da9afe241a10fe5ee9590843134d0eebd4a32af448c9ec91db2e863\" }, { \"anchor\": null, \"deposit\": 2000000, \"expiry\": 177 } ], [ { \"keyHash\": \"480036de36a123e98663370e4829ebd43aa9bb06ec4b6b25f3e178db\" }, { \"anchor\": null, \"deposit\": 2000000, \"expiry\": 176 } ], [ { \"keyHash\": \"5b440956e056c96c74d4820b39b4f91cc45bb2b46024c96a594bb2ed\" }, { \"anchor\": null, \"deposit\": 2000000, \"expiry\": 176 }, ]]\ncardano-cli conway query drep-state --drep-key-hash 1da9afe241a10fe5ee9590843134d0eebd4a32af448c9ec91db2e863 --testnet-magic 4[ [ { \"keyHash\": \"1da9afe241a10fe5ee9590843134d0eebd4a32af448c9ec91db2e863\" }, { \"anchor\": null, \"deposit\": 2000000, \"expiry\": 188 } ]]\ncardano-cli conway query drep-state --drep-key-hash 1da9afe241a10fe5ee9590843134d0eebd4a32af448c9ec91db2e863 --testnet-magic 4[ [ { \"keyHash\": \"1da9afe241a10fe5ee9590843134d0eebd4a32af448c9ec91db2e863\" }, { \"anchor\": null, \"deposit\": 2000000, \"expiry\": 188 } ]]\ncardano-cli conway query drep-stake-distribution --testnet-magic 4[ [ \"drep-keyHash-13797df5308dfebf2348fa58b312a177cf97939f5f7d21168e1a54db\", 500000000000 ], [ \"drep-keyHash-9853551d8b99884f51608822e012bbf0d444eb7bea2807ee664f1241\", 495790521257 ], [ \"drep-keyHash-cf09b59e134fa14e48da39b552c02299a054d7c8b895b3d827453672\", 500000000000 ]]\ncardano-cli conway query drep-stake-distribution --testnet-magic 4[ [ \"drep-keyHash-13797df5308dfebf2348fa58b312a177cf97939f5f7d21168e1a54db\", 500000000000 ], [ \"drep-keyHash-9853551d8b99884f51608822e012bbf0d444eb7bea2807ee664f1241\", 495790521257 ], [ \"drep-keyHash-cf09b59e134fa14e48da39b552c02299a054d7c8b895b3d827453672\", 500000000000 ]]\ncardano-cli conway query committee-state --testnet-magic 4{ \"committee\": { \"keyHash-5e86313210aef13297187c38c98abb632678906230f555a1bf0a647a\": { \"expiration\": 161, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"e394a160b9f1345b7b84cd25f0a3f1d12cb0c9835a4167f7dc5b52ca\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" }, \"keyHash-8be41436ce39ca3c2f3e4255e17fc6c11581ef6787bccf9ab60f39dd\": { \"expiration\": 181, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"e6442af170fabe877ba6b23136ffb32026e9ed927158ecdda2ef0e18\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" }, \"keyHash-da9f5c5c94a6709a9188838ce8cd7fe1c39a1923de4933c16d67c1e0\": { \"expiration\": 201, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"f380b5c4f245f9987645023e39b487e11a7d2337aea91dde628d04ed\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" } }, \"epoch\": 86, \"quorum\": 0.6666666666666666666}\ncardano-cli conway query committee-state --testnet-magic 4{ \"committee\": { \"keyHash-5e86313210aef13297187c38c98abb632678906230f555a1bf0a647a\": { \"expiration\": 161, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"e394a160b9f1345b7b84cd25f0a3f1d12cb0c9835a4167f7dc5b52ca\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" }, \"keyHash-8be41436ce39ca3c2f3e4255e17fc6c11581ef6787bccf9ab60f39dd\": { \"expiration\": 181, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"e6442af170fabe877ba6b23136ffb32026e9ed927158ecdda2ef0e18\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" }, \"keyHash-da9f5c5c94a6709a9188838ce8cd7fe1c39a1923de4933c16d67c1e0\": { \"expiration\": 201, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"f380b5c4f245f9987645023e39b487e11a7d2337aea91dde628d04ed\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" } }, \"epoch\": 86, \"quorum\": 0.6666666666666666666}\ncardano-cli conway query committee-state --cold-verification-key-hash da9f5c5c94a6709a9188838ce8cd7fe1c39a1923de4933c16d67c1e0 --testnet-magic 4{ \"committee\": { \"keyHash-da9f5c5c94a6709a9188838ce8cd7fe1c39a1923de4933c16d67c1e0\": { \"expiration\": 201, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"f380b5c4f245f9987645023e39b487e11a7d2337aea91dde628d04ed\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" } }, \"epoch\": 89, \"quorum\": 0.6666666666666666666}\ncardano-cli conway query committee-state --cold-verification-key-hash da9f5c5c94a6709a9188838ce8cd7fe1c39a1923de4933c16d67c1e0 --testnet-magic 4{ \"committee\": { \"keyHash-da9f5c5c94a6709a9188838ce8cd7fe1c39a1923de4933c16d67c1e0\": { \"expiration\": 201, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"f380b5c4f245f9987645023e39b487e11a7d2337aea91dde628d04ed\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" } }, \"epoch\": 89, \"quorum\": 0.6666666666666666666}\ncardano-cli conway query committee-state --expired --testnet-magic 4{ \"committee\": { \"keyHash-059349cd1e77dc3e500d3ffc498adb7307001ecc022c8b083faaa48b\": { \"expiration\": 161, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"23e05ad2b71317a6348ce4b68dae37aa1c0e545cdea740b23c21742e\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Expired\" } }, \"epoch\": 169, \"quorum\": 0.6}\ncardano-cli conway query committee-state --expired --testnet-magic 4{ \"committee\": { \"keyHash-059349cd1e77dc3e500d3ffc498adb7307001ecc022c8b083faaa48b\": { \"expiration\": 161, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"23e05ad2b71317a6348ce4b68dae37aa1c0e545cdea740b23c21742e\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Expired\" } }, \"epoch\": 169, \"quorum\": 0.6}\ncardano-cli conway query committee-state --active --testnet-magic 4{ \"committee\": { \"keyHash-059349cd1e77dc3e500d3ffc498adb7307001ecc022c8b083faaa48b\": { \"expiration\": 161, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"23e05ad2b71317a6348ce4b68dae37aa1c0e545cdea740b23c21742e\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" }, \"keyHash-337e0a7fd01c7a7c27e8bac17e40db182bc2a774467795af1e3fe8a9\": { \"expiration\": 201, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"540bedcd4bdcbf523e899c3ef43f2b96ecec4f6303af58d15a413ed1\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" }, \"keyHash-9c2aabae5d9187a76ed6b04b40e91ecb4ce3171611c3fd4ec6c6a607\": { \"expiration\": 181, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"6c1d098a366f2274651943a7f778b3b5459c129f0407a0db2902253a\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" } }, \"epoch\": 105, \"quorum\": 0.6}\ncardano-cli conway query committee-state --active --testnet-magic 4{ \"committee\": { \"keyHash-059349cd1e77dc3e500d3ffc498adb7307001ecc022c8b083faaa48b\": { \"expiration\": 161, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"23e05ad2b71317a6348ce4b68dae37aa1c0e545cdea740b23c21742e\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" }, \"keyHash-337e0a7fd01c7a7c27e8bac17e40db182bc2a774467795af1e3fe8a9\": { \"expiration\": 201, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"540bedcd4bdcbf523e899c3ef43f2b96ecec4f6303af58d15a413ed1\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" }, \"keyHash-9c2aabae5d9187a76ed6b04b40e91ecb4ce3171611c3fd4ec6c6a607\": { \"expiration\": 181, \"hotCredsAuthStatus\": { \"contents\": { \"keyHash\": \"6c1d098a366f2274651943a7f778b3b5459c129f0407a0db2902253a\" }, \"tag\": \"MemberAuthorized\" }, \"nextEpochChange\": \"NoChangeExpected\", \"status\": \"Active\" } }, \"epoch\": 105, \"quorum\": 0.6}\ncardano-cli conway query committee-state --unrecognized --testnet-magic 42{ \"committee\": {}, \"epoch\": 106, \"quorum\": 0.6}\ncardano-cli conway query committee-state --unrecognized --testnet-magic 42{ \"committee\": {}, \"epoch\": 106, \"quorum\": 0.6}\nQuery the constitution:\nQuery the DRep state for all DReps:\nQuery the DRep state for an individual DRep:\nQuery the DRep stake distribution (voting power):\nQuery the committee state:\nQuery the state of an individual committee key hash:\nQuery expired committee members\nQuery active committee members\nQuery unrecognized committee keys\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nParticipation Requirements | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer ProgramOverview and GoalsParticipation RequirementsLesson Plan OverviewPrelude an IntroductionsModule 1 - Cardano s Governance and RolesModule 2 - DRep Code of ConductModule 3 - Reward Schemes for DRepsModule 4 - Joining the DReps EcosystemClosing Actitivity and Wrap Up\nOverview and Goals\nParticipation Requirements\nLesson Plan Overview\nPrelude an Introductions\nModule 1 - Cardano s Governance and Roles\nModule 2 - DRep Code of Conduct\nModule 3 - Reward Schemes for DReps\nModule 4 - Joining the DReps Ecosystem\nClosing Actitivity and Wrap Up\nTools and resources\nMeetups\nDRep Pioneer Program\nParticipation Requirements\nAll participants should hold ada to participate as DReps. Participation in this training does not ensure that participants will be accepted as DReps by the Cardano community.\nTo successfully complete this training, participants should:\nUnderstand how the Cardano blockchain works.\nBe familiar with Cardano wallets and how they work.\nTo participate in the training, participants should have the following:\nAny of the following web browsers: Google Chrome, Brave, or Microsoft Edge.\nA CIP-95 capable wallet with an active address. The list of compatible wallets can be found here.\nA reliable internet connection, if you are attending the DRep training online.\nAll instructors should have participated in the DRep Pioneers Programs and completed the corresponding training. All instructors are required to join as DReps in the Cardano Governance structure.\nThis training is designed as a six-hour course that can be offered online or in person. Instructors should consider additional time for breaks and meals.\nRegardless of the type of training, online or in person, we encourage you to consider the following:\nPromote the training session on your social media, write a blog post on your personal or professional website, or contribute to Essential Cardano; you can learn more about it at this link.\nWhen promoting your training session, create a registration form to gather participants' information and kindly ask if they would like to receive news and further steps after the training.\nMaintain a visible and active presence throughout the session to foster community and participant connection. Use inclusive language and acknowledge contributions from all participants to create a supportive learning environment.\nAs an instructor, you should be prepared to adapt your teaching style and approach based on the participants' needs and preferences. You should also be flexible, responsive to feedback, and willing to modify the lesson plan or activities to accommodate different learning styles and abilities.\nOptionally, take pictures and record videos from your training session for your records and future session promotion. It s vital to ask for explicit consent from participants to appear in the pictures and videos. You can ask for it in the registration form.\nAfter the session, use the provided form to solicit participant feedback to identify strengths and areas for improvement. Use this feedback to refine future sessions and adapt your approach to meet your audience's needs better.\nTo provide a thriving online session, please take into consideration the following:\nUse a reliable internet connection. A wired connection is highly recommended to reduce the risk of signal loss.\nChoose an appropriate videoconferencing or video streaming software and test it before the session.\nOnline classes can sometimes lead to reduced engagement compared to in-person sessions. Plan interactive activities, discussions, polls, and quizzes to keep participants engaged throughout the session. Encourage participation through the chat function or by using video or audio interactions.\nUtilize visual aids such as slides, videos, live coding, and interactive whiteboards to enhance understanding and retention of the material. Ensure that visual aids are clear, relevant, and accessible to all participants.\nProvide opportunities for participants to receive feedback on their progress and understanding of the material. Incorporate quizzes, polls, or short assignments to assess comprehension and reinforce key concepts.\nOnline classes may require extra time for technical troubleshooting or concept clarification. Plan additional time for these potential issues while ensuring the session stays on schedule. Break the session into manageable segments with built-in breaks to prevent participant fatigue.\nHave a plan to address technical issues that may arise during the session. Depending on the software and tools you will use, designate a technical support staff member or provide troubleshooting resources for participants to resolve common issues independently.\nTo offer an engaging in-person training session, please consider the following:\nEnsure that the physical classroom is conducive to learning. This includes adequate lighting, comfortable seating, proper ventilation, and appropriate room temperature. Arrange the furniture to promote interaction and engagement among participants.\nPrepare all necessary materials and resources in advance, such as handouts, visual aids, and equipment. Ensure that all materials are easily accessible to participants and that any technology or equipment functions correctly in the classroom.\nIn an in-person setting, you can employ various engagement techniques to capture participants' attention and maintain their interest. These may include group discussions, hands-on activities, role-playing exercises, demonstrations, and interactive games.\nEncourage active participation from participants by asking questions, soliciting opinions, and inviting them to share their experiences and insights. Foster a collaborative learning environment where participants feel comfortable expressing themselves and engaging with one another.\nPrioritize the safety and well-being of participants by adhering to any relevant health and safety guidelines, such as maintaining physical distancing, wearing face masks, and sanitizing shared surfaces. Create a supportive and inclusive learning environment where participants feel respected, valued, and supported in their learning journey.\nParticipants RequirementsParticipants Preliminary KnowledgeParticipants Preparation\nParticipants Preliminary Knowledge\nParticipants Preparation\nInstructor RequirementsInstructor Preparation\nInstructor Preparation\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nDRep Pioneer Program Lesson Plan | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer ProgramOverview and GoalsParticipation RequirementsLesson Plan OverviewPrelude an IntroductionsModule 1 - Cardano s Governance and RolesModule 2 - DRep Code of ConductModule 3 - Reward Schemes for DRepsModule 4 - Joining the DReps EcosystemClosing Actitivity and Wrap Up\nOverview and Goals\nParticipation Requirements\nLesson Plan Overview\nPrelude an Introductions\nModule 1 - Cardano s Governance and Roles\nModule 2 - DRep Code of Conduct\nModule 3 - Reward Schemes for DReps\nModule 4 - Joining the DReps Ecosystem\nClosing Actitivity and Wrap Up\nTools and resources\nMeetups\nDRep Pioneer Program\nLesson Plan Overview\nThis lesson contains 12 activities covering all the DRep program content. In addition to these activities, instructors should consider breaks throughout the day according to the local culture and manners, such as lunchtime and refreshments that can be offered in the training session.\nThe following table shows a proposed schedule for a typical training session, with lunchtime around 1:00 p.m. Feel free to adapt the schedule and activity timing accordingly to your audience and local culture.\nProposed Schedule\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub\n\n---\n\nConway ledger era FAQs | SanchoNet\n\nGetting started\nWhy SanchoNet?Don QuixoteSancho PanzaBarataria\nDon Quixote\nSancho Panza\nBarataria\nRoles\nGovernance actions\nFaucet\nTutorials\nDRep Pioneer Program\nTools and resourcesTools and resourcesConway ledger era FAQs\nTools and resources\nConway ledger era FAQs\nMeetups\nTools and resources\nConway ledger era FAQs\nWarning: Please note that due to ongoing development, some answers may change over time.\nLast update: 2024-02-17\nBased on ledger design cddl: node 8.8.0-pre\nreg_cert\nunreg_cert\nvote_deleg_cert\nstake_vote_deleg_cert\nstake_reg_deleg_cert\nvote_reg_deleg_cert\nstake_vote_reg_deleg_cert\nauth_committee_hot_cert\nresign_committee_cold_cert\nreg_drep_cert\nunreg_drep_cert\nupdate_drep_cert\nThere are currently two ways to register/unregister stake credentials because the old stake_registration and stake_deregistration will be deprecated in the era following the Conway era.\nstake_registration\nstake_deregistration\nThe new version allows the ledger to check deposit amounts and return them instantly (rather than on epoch boundary), matching the other new certificates containing deposits.\ncoin\nThis change has been made to enable the checking of deposit amounts at the ledger level. It also proves to be more useful in Voltaire, given that protocol parameters are likely to change more frequently than in past eras.\ncoin\nkeyDeposit\nkeyDeposit\ncoin\ncoin\nkeyDeposit\ncoin\nkeyDeposit\ncoin\nkeyDeposit\nreward_account\nThe decision to provide only the script hash, rather than the entire script, within a new constitution proposal serves the purpose of reusing the mechanisms previously implemented in Babbage. For instance, it allows individuals to use reference scripts to provide the actual script for the proposal policy when proposing various governance actions. Creating another source for scripts would entail more work.\nThe new constitution proposal contains a ScriptHash, also known as the proposal policy. There is nothing special that needs to be done during the proposal stage because the policy is simply being suggested. The significance comes into play when a new constitution with a script hash (proposal policy) is enacted. At that point, the constitution will require scripts and redeemers for every governance proposal, except for the new_constitution and no_confidence proposals. In these cases, it will function in a manner similar to other scripts.\nScriptHash\nnew_constitution\nno_confidence\nThis tag is yet to be implemented. The designated tag for such instances will be 5, with the index in the redeemer corresponding to the proposal procedure. Additionally, there will be tag 4 specifically for voting procedures.\nWith numerous Plutus versions having distinct cost models, accommodating all of them may become impractical. Nevertheless, it's highly unlikely to exceed the maximum transaction size in the near future.\nThere are no checks for this at the ledger level, neither for SPOs nor for DReps. At any point, the DRep and the SPO to whom you delegated can unregister, so there is no need to enforce their existence when delegating.\nNo, there is no mechanism to facilitate that action. The purpose of the deposit is to restrict the use of those funds.\nDRep deposits function similarly to stake credential deposits. They are refunded in the transaction that unregisters the DRep. Stake pool and proposal procedures are retired or expired on the epoch boundary, which is why their deposits are refunded into a reward account. However, DReps and stake credentials are unregistered immediately.\nDonations function more like fees. They are collected in a pool and then transferred at the epoch boundary.\nThe 'current treasury value' is used for conveying the current treasury amount to Plutus scripts. If the treasury field is set incorrectly, the transaction will be rejected.\nResigned and expired constitutional committee members are automatically counted as if they have voted 'Abstain'.\nAnother crucial point to note is that whenever the number of active committee members (those who are neither expired nor resigned) falls below the committeeMinSize protocol parameter, the system enters a mode in which it is as though all committee members have cast a 'No' vote.\ncommitteeMinSize\nparameter_change_action\ntreasury_withdrawals_action\npolicy_hash\nYes. It is only optional, when there is no governance policy. When there is a governance policy we require that policy_hash to be present and equal to the one in the elected constitution.\npolicy_hash\nNo, they are rational numbers on the unit interval where both numerator and denominator are specified by 64bit unsigned integers. So, those thresholds can be very precise.\nYes, the amount in the reward account is counted towards active stake, which means it will also participate in the voting. This decision was to prevent people from constantly withdrawing rewards just so they can get rewards on that amount.\nThe only deposits which count toward voting stake thresholds are deposits locked for governance actions.\n1. What are the new Conway certificates?\n2. Why are there two ways to register/unregister stake credentials now?\n3. Why do new certificates have a coin field?\ncoin\n4. Certificate and transaction field witnesses and deposits\n5. Why isn't the script directly included in a new constitution proposal for the proposal policy?\n6. Regarding the proposal policy for a new CC constitution action: How does the proposal policy script impact the script integrity hash in the transaction body? Do I need to consider the cost model of the provided script?\n7. If a voting proposal requires a script and a redeemer, which redeemer tag should I use?\n8. What will be the maximum number of protocol parameter changes that can be executed in a single governance action?\n9. Can one delegate to DReps that do not exist?\n10. Is it possible to stake a DRep deposit when it is locked?\n11. What happens with DRep deposits when no stake credential is provided, and where is the deposit returned?\n13. Does the new donation field function similarly to implicit outputs?\n14. How does the 'current treasury value' function, and what happens if I set it to an incorrect value?\n15. How does the process of CC resignation (resign_committee_cold_cert) work, and what happens if all CC members resign? Does this impact the quorum?\n16. For parameter_change_action and treasury_withdrawals_action does the optionally supplied policy_hash require a witness from the script?\nparameter_change_action\ntreasury_withdrawals_action\npolicy_hash\n17. Are the governance voting threshold Parameters set to be fixed at 2 decimal places?\n18. Do unwithdrawn staking rewards count towards one's voting power/ is counted in active/inactive voting stake amounts?\n19. Do any locked deposits count towards voting stake?\nGet Started\nStack Exchange\nDiscord\nX\nCookie Policy\nPrivacy Policy\nDisclaimer\nGitHub"
}
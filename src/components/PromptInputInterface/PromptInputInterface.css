/* JavaScript Syntax Highlighting CSS */

.syntax-highlighter {
    background-color: #0f375f;
    border-radius: 6px;
    font-size: 0.9em;
    line-height: 1.5;
    overflow: auto;
    padding: 1em;
    margin: 1em 0;
    font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
    color: #333;
  }
  
  /* Basic reset for pre inside our custom block */
  .syntax-highlighter pre {
    background: none;
    border: none;
    padding: 0;
    margin: 0;
  }
  
  /* JavaScript token styles */
  .syntax-highlighter .token.function {
    color: #d73a49; /* Function names */
  }
  
  .syntax-highlighter .token.keyword {
    color: #d73a49; /* Keywords like 'let', 'const', 'function' */
  }
  
  .syntax-highlighter .token.string {
    color: #032f62; /* Strings */
  }
  
  .syntax-highlighter .token.number {
    color: #0086b3; /* Numbers */
  }
  
  .syntax-highlighter .token.boolean {
    color: #0086b3; /* true, false */
  }
  
  .syntax-highlighter .token.operator {
    color: #005cc5; /* Operators like +, -, = */
  }
  
  .syntax-highlighter .token.punctuation {
    color: #333; /* Punctuation like {}, [], () */
  }
  
  .syntax-highlighter .token.comment {
    color: #6a737d; /* Comments */
  }
  
  .syntax-highlighter .token.regex {
    color: #d73a49; /* Regular expressions */
  }
  
  .syntax-highlighter .token.variable {
    color: #e36209; /* Variable names */
  }
  
  .syntax-highlighter .token.class-name {
    color: #6f42c1; /* Class names */
  }
  
  .syntax-highlighter .token.property {
    color: #6f42c1; /* Object properties */
  }
  
  /* For undefined, null */
  .syntax-highlighter .token.null, 
  .syntax-highlighter .token.undefined {
    color: #0086b3;
  }
  
  /* Template strings */
  .syntax-highlighter .token.template-string {
    color: #032f62; /* Same as string, but could be adjusted */
  }
  
  /* This CSS assumes you'll wrap your code with appropriate class names. 
     Since we're not using a real parser, you would manually add these classes to span elements 
     within your code for this to work. 
  */
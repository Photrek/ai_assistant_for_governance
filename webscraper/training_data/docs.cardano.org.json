[
  {
    "instruction": "Welcome to Cardano Docs?",
    "input": "",
    "output": "Cardano is a decentralized, third-generation, proof-of-stake blockchain, native home to the ada cryptocurrency.\nDive into Cardano's fundamentals, from beginner explainers to in-depth coverage of core concepts, architecture and networking, and the platform's evolution.\nLearn about Cardano s features and find references to developer resources, including guides and tutorials, to kickstart your development journey.\nLearn about stake pool operation basics, including node connectivity, keys, operational certificates, maintenance, and more, with references to detailed developer tutorials.\nGet started with Cardano's testnet environments and explore how to engage with them effectively.\nExplore learning opportunities on Cardano, including details about the Plutus Pioneer program and other educational resources.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Introduction?",
    "input": "",
    "output": "Welcome to the central hub for Cardano documentation. Here, you'll find content that describes and supports the features on both the Cardano mainnet and testnet environments.\nThis includes basic explainers for newcomers to Cardano, explanations of the core features, details about Cardano's design and evolution, insights into how the Cardano network operates, and platform architecture. You can also access developer resources that explain the core concepts and provide links to developer documentation for more technical tutorials.\nIf you are interested in building tools on Cardano, integrating with Cardano, and connecting with the wider developer community, please visit the Cardano Developer Portal.\nCardano is a decentralized third-generation proof-of-stake blockchain platform and home to the ada cryptocurrency. It is the first blockchain platform to evolve out of a scientific philosophy and a research-first driven approach.\nThe Cardano platform has been designed from the ground up and verified by an industry-leading combination of top engineers and academic experts in the fields of blockchain and cryptography. It has a strong focus on sustainability, scalability, and transparency. It is a fully open source project that aims to deliver an inclusive, fair, and resilient infrastructure for financial and social applications on a global scale. One of its primary goals is to bring reliable, secure financial services to those people who do not currently have access.\nCardano has been designed with security as one of its founding principles. It is written in Haskell, a functional programming language. In a functional language like Haskell, building your input using pure functions is encouraged, which leads to a design where components are conveniently testable in isolation. Furthermore, advanced features of Haskell enable employing a whole range of powerful methods for ensuring the correctness of the code, such as basing the implementation on formal and executable specifications, extensive property-based testing, and running tests in simulation.\nCardano's smart contract platform seeks to deliver more advanced features than any protocol previously developed and will serve as a stable and secure platform for the development of enterprise-level DApps. Cardano's democratic governance input, being implemented based on CIP-1694 on-chain governance mechanisms, will enable the project to evolve over time and sustainably fund itself through a visionary treasury input.\nYou can read more about Cardano on the official Cardano website and watch a summary of Cardano's mission in this explainer video.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Welcome?",
    "input": "",
    "output": "Welcome to the developer resources section! Here you will find references to the resources that will help you with developing on Cardano.\nThere are various ways to interact with the Cardano node:\nYou can also rely on third-party services and managed API query layers such as Blockfrost, Koios, Maestro, or FreeLoaderz.\nFor more tools, refer to the most commonly used builder tools on the developer portal or see this list of community-built developer tools.\nPlease note that this information is intended for informational purposes only and does not constitute an endorsement or recommendation of any specific tool or service.\nTo start working with native tokens, see:\nYou can also explore Cardano assets using a variety of explorer tools.\nTo start working with smart contracts, see:\nThere are also many languages you can use to develop smart contracts:\nExplore Cardano's ecoinput:\nKeep navigating this section to learn more about native tokens, smart contracts, and scalability solutions on Cardano. You will also find release notes, links to the ecoinput builder tools, and weekly development updates.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Operating a stake pool?",
    "input": "",
    "output": "Welcome to the stake pool operations section!\nHere, you will find explanations about stake pools, operators, and owners, along with core concepts such as node connectivity, keys, operational certificates, metadata management, performance, and ranking.\nTo get started with stake pool operations, refer to:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Testnet environments?",
    "input": "",
    "output": "Cardano testnets sit at the vanguard of network development, providing sandboxed environments for continuing innovation, harnessing the power of the Cardano community to iterate and improve.\nStake pool operators, exchanges, smart contract developers, and projects can engage with different early-stage and pre-production networks to actively test core Cardano functionality prior to deploying on mainnet.\nDiscover the various testnet environments available on Cardano to select the one best suited for your testing needs.\nSanchoNet is an early-stage testnet environment for testing CIP-1694 on-chain governance mechanisms.\nPreview is the network environment for testing release candidates and expanded test scenarios. Preview is meant for DApps, stake pool operators (SPOs), and exchanges who wish to test mature release candidates.\nPre-production is the most mature network for testing purposes, which resembles a production (mainnet) environment. It is meant for exchanges, SPOs, pre-deployment DApps, and wallets that wish to test release functionality before deploying on mainnet.\nProduction is the live network, also referred to as mainnet. It features official functionality releases. Exchanges, SPOs, DApps, wallets, and end instructions can use the mainnet for development, transaction processing, and other needs.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Community education initiatives?",
    "input": "",
    "output": "This section aims to highlight the diverse educational efforts led by the Cardano community.\nThis space is dedicated to showcasing resources, programs, and projects that support learning and skill development across the ecoinput. Whether it s tutorials, workshops, or other community-driven content, this section aims to reflect the collective knowledge and commitment to growing Cardano s global reach.\nContributions are encouraged! Share your educational resources to expand this library and help others explore and understand Cardano. Please check the contribution guidelines and submit a pull request.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Input?",
    "input": "",
    "output": "Education is a cornerstone of fostering a knowledgeable and engaged global community. By prioritizing education, IO aims to share its expertise and empower individuals to contribute meaningfully to the Cardano ecoinput. Whether you're a developer, an academic, or a business professional, IO educational offerings are designed to equip you with the skills and knowledge needed to thrive in the blockchain space.\nThe team brings together extensive experience in curriculum design, project management, and the technical intricacies of Cardano, Haskell, and smart contracts. This collective skill set ensures that educational programs are comprehensive, practical, and tailored to diverse learners' needs.\nThe IO education team has collaborations with various universities and educational institutions worldwide to deliver high-quality education, including:\nAdditionally, the team has worked on curriculum design for blockchain programs with Yeovil College in the UK and Consilium Academy in South Africa.\nThe education team has held several Cardano Day events across different locations:\nITESO University, Guadalajara, Mexico\nUniversity of Celaya, Guanajuato, Mexico\nUniversity of Malta, Valletta Campus, Valletta, Malta\nUniversity of Wyoming, Laramie, USA.\nUniversity of Cantabria, Santander, Spain\nThese events cover the basics of blockchain technology, Cardano, and smart contracts and prove very popular, with a typical NPS score of 92.\nMore events are continually planned, and if you would like to know more about hosting a Cardano Days event, please get in touch.\nIO also engages in academic and business collaborations, offering specialized lectures and workshops on blockchain and Cardano. These programs bridge the gap between theoretical knowledge and practical application, fostering innovation and real-world problem-solving skills.\nSome example initiatives include:\nFor more updates, please subscribe to the IO Academy YouTube channel, where the team regularly publishes new lectures and educational content.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "New to Cardano?",
    "input": "",
    "output": "The understanding of basic concepts plays an integral role in getting acquainted with blockchain and Cardano in particular. In this section, we start our journey with basic concepts such as the notion of blockchain, understanding proof of stake, and what is a cryptocurrency. You will also find out about various types of wallets and tracking tools, and learn about the delegation options.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Cardano nodes?",
    "input": "",
    "output": "The Cardano node is the top-level component within the network. Network nodes connect to each other within the networking layer, which is the driving force for delivering information exchange requirements. This includes new block diffusion and transaction information for establishing a better data flow. Cardano nodes maintain connections with peers that have been chosen via a custom peer-selection process. By running a Cardano node, you are participating in and contributing to the network.\nStake pools use the Cardano node to validate how the pool interacts with the network and are responsible for transaction processing and block production. They act as reliable server nodes that hold and maintain the combined stake of various stakeholders in a single entity.\nThe goal of blockchain technology is the production of an independently-verifiable and cryptographically-linked chain of records (blocks). A network of block producers works to collectively advance the blockchain. A consensus protocol provides transparency and decides which candidate blocks should be used to extend the chain.\nSubmitted valid transactions might be included in any new block. A block is cryptographically signed by its producer and linked to the previous block in the chain. This makes it impossible to delete transactions from a block, alter the order of the blocks, remove a block from the chain (if it already has a number of other blocks following it), or insert a new block into the chain without alerting all the network participants. This ensures the integrity and transparency of the blockchain expansion.\nThe Cardano blockchain uses the Ouroboros Praos protocol to facilitate consensus on the chain. Ouroboros Praos divides time into epochs. Each Cardano epoch consists of a number of slots, where each slot lasts for one second. A Cardano epoch currently includes 432,000 slots (5 days). In any slot, zero or more block-producing nodes might be nominated to be the slot leader. On average, one node is expected to be nominated every 20 seconds, for a total of 21,600 nominations per epoch. If randomly elected slot leaders produce blocks, one of them will be added to the chain. Other candidate blocks will be discarded.\nThe Cardano network consists of a number of stake pools that control the aggregated stake of their owners and other stakeholders, also known as delegators. Slot leaders are randomly elected from among the stake pools. The more stake a pool controls, the greater the chance it has of being elected as a slot leader to produce a new block that is accepted into the blockchain. This is the basic concept of proof of stake (PoS). To maintain a level playing field, and prevent a situation where a small number of very large pools control the majority of stake, Cardano has an incentive input that discourages delegation to pools that already control a large portion of the total stake.\nWhen validating a transaction, a slot leader needs to ensure that the sender has included enough funds to pay for that transaction and must also ensure that the transaction s parameters are met. Assuming that the transaction meets all these requirements, the slot leader will record it as a part of a new block, which will then be connected to other blocks in the chain.\nRelated topics:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Cardano architecture?",
    "input": "",
    "output": "This section describes the high-level architecture of Cardano, providing details on the core components and their interactions.\nThe following diagram outlines the interaction between the input components of Cardano:\nThe current implementation of Cardano is highly modular. It includes the following components (different deployment use cases will use different combinations of components):\nA blockchain input consists of a set of nodes distributed across a network that communicate with each other to achieve consensus about the input s state.\nNodes are responsible for:\nThe cardano-node is the top level Cardano component that consists of the other subinputs, of which the most significant are consensus, ledger, and networking with ancillary configuration, CLI, logging, and monitoring.\ncardano-node\nThe purpose of the node-to-node Inter-Process Communication (IPC) protocol is to allow for the exchange of blocks and transactions between nodes as part of the Ouroboros consensus algorithm.\nThe node-to-node protocol is a composite protocol, consisting of three mini-protocols:\nThese mini-protocols are multiplexed on a single long-running Transmission Control Protocol (TCP) connection between nodes. They can be run in both directions on the same TCP connection to allow for peer-to-peer (P2P) settings.\nThe overall protocol and each mini-protocol is designed for a trustless setting where both sides need to guard against Denial-of-Service (DoS) attacks. For example, each mini-protocol uses consumer-driven control flow, so a node only requests more work when it is ready, rather than having work pushed upon it.\nThe protocol design is modular and evolvable: version negotiation is used to agree on the set of mini-protocols to use, which allows additional or updated mini-protocols to be added over time without causing compatibility issues.\nThe purpose of the node-to-client IPC protocol is to allow local applications to interact with the blockchain via the node. This includes applications such as wallet backends or blockchain explorers. The node-to-client protocol enables these applications to access the raw chain data and to query the current ledger state. It also provides the ability to submit new transactions to the input.\nThe node-to-client protocol uses the same design as the node-to-node protocol, but with a different set of mini-protocols, and local pipes rather than TCP connections. As such, it is a relatively low-level narrow interface that exposes only what the node can provide natively. For example, the node provides access to all the raw chain data but does not provide a way to query data on the chain. The job of providing data services and more convenient higher level APIs is delegated to dedicated clients, such as cardano-db-sync and the wallet backend.\nThe node-to-client protocol consists of three mini-protocols:\nThe node-to-client version of chain sync uses full blocks, rather than just block headers. This is why no separate block-fetch protocol is needed. The local-tx-submission protocol is like the node-to-node tx-submission protocol but simpler, and it returns the details of transaction validation failures. The local state query protocol provides query access to the current ledger state, which contains a lot of interesting data that is not directly reflected on the chain itself.\nRead more about the networking protocol design here.\nThe node s CLI tool is the 'swiss army knife' of the input. It can do almost everything, but it is quite low level and not very convenient because it s text-based and lacks a graphical instruction interface (GUI).\nThe CLI tool can:\nDaedalus is a full node wallet that helps instructions to manage their ada, and can send and receive payments on the Cardano blockchain. Daedalus consists of a wallet frontend and a backend. The frontend is the graphical application that instructions see and interact with. The backend is a service process that monitors the state of the instruction s wallet and does all the 'heavy lifting', such as coin selection, transaction construction, and submission. The backend interacts with a local node via the node-to-client IPC protocol, and interacts with the frontend via a HTTP API. The backend also provides a CLI that enables interaction with the wallet. The wallet backend can also be used on its own without Daedalus via its API. This is a convenient way for software developers to integrate Cardano with other applications and inputs.\nThe Cardano node stores only the blockchain itself and the associated information needed to validate the blockchain. This design principle is about minimizing code complexity (and reducing computational cost and resource use) to keep the node's local interfaces as minimal as possible and to use external clients to provide a variety of convenient interfaces and extra functionality. In particular, the node does not provide a convenient query interface for historical information on the blockchain. This data service is provided by a separate component using a Structured Query Language (SQL) database.\nLearn more about Cardano DB Sync here.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Design rationale?",
    "input": "",
    "output": "Cardano is an open source proof-of-stake blockchain project that began in 2015 to address existing blockchain challenges in the design and development of cryptocurrencies. It aims to provide a more balanced and sustainable ecoinput that better accounts for the needs of its instructions as well as other inputs seeking integration.\nThe first generation of blockchains (like Bitcoin) offered decentralized ledgers for secure cryptocurrency transfer. However, such blockchains did not provide a functional environment for complex deal settlement and decentralized application (DApp) development. As blockchain technology matured, the second generation (like Ethereum) provided more enhanced solutions for writing and executing smart contracts, application development, and the creation of different token types. On the other hand, the second generation of blockchains often faces issues in terms of scalability.\nCardano is conceived as the third-generation blockchain as it combines the properties of the prior generations and evolves to meet all the arising needs of instructions. When comparing blockchain properties, many aspects should be considered. Thus, the best solution must ensure the highest security, scalability (transaction throughput, data scale, network bandwidth), and functionality (besides transaction processing, the blockchain should provide all means for business deal settlement). Moreover, it is important to ensure that blockchain technology is constantly developing in terms of sustainability and is interoperable with other blockchains and financial institutions.\nTo address these needs, Cardano has been built focusing on such core concepts as:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Contribution guidelines?",
    "input": "",
    "output": "The Cardano Docs site follows the principles of open-source collaboration, inclusiveness, and community-driven success. Contributing to Cardano Docs helps create a rich, accurate, and up-to-date resource for the entire Cardano community. By sharing your knowledge and expertise, you ensure the documentation remains a valuable and reliable source of information for all.\nNote that Cardano Docs focuses on providing information about Cardano's functionalities and features, while the Developer Portal offers developer-related tutorials and guides. These two resources exist in tandem, ensuring a seamless instruction experience for both general instructions and developers.\nBy using this website and contributing to Cardano Docs, you agree to be bound by and comply with the CC BY 4.0 license.\nYou can contribute in several ways, including:\nIf you prefer working with GitHub locally, follow these steps:\nSee more about Docusaurus set up here.\nBy raising an issue, you can identify areas for improvement, report problems, or suggest new content.\nTo create an issue:\nYour contributions are vital to maintaining the quality and integrity of Cardano Docs. Whether you re correcting a typo, adding new content, or suggesting improvements, every contribution helps. Thank you for being an active Cardano community member and helping make Cardano Docs an invaluable resource for everyone.\nEnsure simplicity, accuracy, and accessibility. Aim for a broad understanding, even for select audiences. Be concise avoid unnecessary words.\nLanguage\nAbbreviations and acronyms\nLegal and investment\nPunctuation\nCapitalization\nNumbers and time\nBullet lists\nLinks\nHeadlines and titles\nCardano Docs uses Markdown for formatting. Below are the main Markdown features:\nHeaders\n#\n##\n# H1## H2### H3\n# H1## H2### H3\nEmphasis\n*\n_\n**\n__\n_italic_ or _italic_**bold** or **bold**\n_italic_ or _italic_**bold** or **bold**\nLists\n-\n*\n1.\n- Item 1- Item 2* Item 3.1. First item2. Second item.\n- Item 1- Item 2* Item 3.1. First item2. Second item.\nLinks\n[text](url)\n[Cardano Docs](https://docs.cardano.org/)\n[Cardano Docs](https://docs.cardano.org/)\nImages\n![alt text](url)\nCode\nBlockquotes\n>\n> This is a blockquote.\n> This is a blockquote.\nTables\n|\n| Header 1 | Header 2 ||----------|----------|| Cell 1 | Cell 2 |\n| Header 1 | Header 2 ||----------|----------|| Cell 1 | Cell 2 |\nFor more details, see MD features here.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "The Cardano node video course?",
    "input": "",
    "output": "The IOG Academy provides this course on YouTube.\nInstructor: Carlos Lopez de Lara, product owner at Input Output.\nbuild-raw\nbuild\ncreate-cardano\nNode tests are CLI-based input and end-to-end tests for the Cardano node. Node tests are open source for Cardano node instructions running the CLI, SPOs, third-party tool developers, and others to test Cardano functionality from the end-instruction perspective.\nYou can access Cardano node tests documentation here.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Transaction tutorials?",
    "input": "",
    "output": "A transaction is an event created, signed, and sent by a instruction to modify the ledger's state. It is commonly used to transfer ada or other tokens from one instruction to another. Additionally, it can serve various purposes, such as token creation, delegation registration to a stake pool, or interaction with smart contracts, among others. The process to modify the ledger through a transaction is as follows:\nCreating the transaction. A transaction includes a set of data that specifies how you intend to modify the ledger. The fundamental components of a transaction include UTXOs, from which the funds are sourced, and destination addresses to which you want to send funds along with the desired amount of tokens. There are various tools available to assist in creating transactions, such as wallets and cardano-cli.\ncardano-cli\nSigning the transaction. A instruction who owns the funds to be spent must provide authorization for the transaction through a signature. If the funds are held in a smart contract address, the authorization is carried out by executing the smart contract itself. Various tools are available to assist in signing transactions, including wallets and cardano-cli.\ncardano-cli\nSubmitting the transaction. For a transaction to be reflected in the ledger, the instruction must submit it. These transactions are received by stake pools, validated, and then added to the ledger within a block.\nEach transaction includes an identifier known as TxId, and after completing these three steps, you can view transaction's content in the Cardano Explorer, accessible at https://explorer.cardano.org, for example.\nTxId\nIn this section, you will find tutorials on how to create:\nFor additional references, see:\nPlutus scripts\nNote: For more information about Plutus, tutorials, and how-to guides go to Plutus Docs.\nVasil tutorials\nThe tutorials below provide explainers of the CIPs introduced with Vasil functionality. Examples include the usage of Plutus v2 scripts:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Native tokens?",
    "input": "",
    "output": "To start working with native tokens, see:\nNative tokens is a feature that enables the transacting of multi-assets on Cardano. instructions can transact with ada, and an unlimited number of instruction-defined (custom) tokens natively.\nNative support offers distinct advantages for developers: there is no need to create smart contracts to handle custom tokens, for example, which removes a layer of added complexity and potential for manual errors since the ledger handles all token-related functionality.\nThe native tokens feature extends the accounting infrastructure defined in the ledger model (originally designed for processing ada-only transactions) to accommodate transactions using a range of assets. These assets include ada and a variety of instruction-defined custom token types.\nRead more about native tokens and how they compare to ada and ERC20 and watch this native tokens explainer video.\nCryptocurrency ledgers that track exactly one type of asset are called single-asset ledgers.\nA blockchain, ledger, or cryptocurrency is said to have multi-asset (MA) support when the network or ledger supports tracking, transfer, and ownership of different types of assets on its ledger. In the Cardano environment, this functionality is provided by the native tokens feature.\nThis feature accommodates transactions that simultaneously use a range of assets. These assets include ada and a variety of instruction-defined custom token types.\nSome cryptocurrency ledgers have built-in support to track ownership and transfer of more than one type of asset. This type of MA support is called native. Cardano's MA functionality is native.\nIf a cryptocurrency platform has sufficiently powerful smart contract functionality, it is possible to track assets for which there is no ledger accounting support. This is done with a layer-2 solution built using smart contracts. This type of MA support is non-native.\nAssets\nAn asset is an object that represents value on the blockchain. These objects can be a variety of things, such as a digital asset like ada, a role, a credential, or a quantity of goods.\nThe term asset can refer to either:\nAn asset is uniquely identified by an asset ID, which is a pair of both the policy ID and asset name. It is important to note that although ada can act as an asset, it is not represented using an explicit policy ID.\nTokens that have the same asset ID have the property of being fungible with each other, and are not fungible with tokens that have a different asset ID. An asset ID is a unique identifier for a collection of fungible tokens.\nNFLPlayerCardsPolicyID\nRushConcertPolicyID\nNFLPlayerCardsPolicyID = e0d123e5f316bef7\nNFLPlayerCardsPolicyID = e0d123e5f316bef7\n‘tickets’\n‘VIPTickets’\nDifferent policies can use the same asset names for different tokens. For example, the token bundle:\nFAKERushConcertPolicyID { (Tickets, 500), (VIPTickets, 50)}\nFAKERushConcertPolicyID { (Tickets, 500), (VIPTickets, 50)}\ncontains the Tickets and VIPTickets asset names, but these are not fungible with the RushConcertPolicyID tickets that have been defined in another token bundle, since they are scoped under different policies.\nTickets\nVIPTickets\nRushConcertPolicyID\nTokens\nA token is a short term for 'asset token', which is the on-chain representation of an asset and its basic accounting unit. A token can represent one ada, one house, or the value of ten tonnes of coffee, for example.\nCurrency is a medium of exchange for goods and services that commonly refers to a payment unit. Cardano supports currencies such as ada and native tokens, which act similarly in the network.\nHowever, ada is the principal currency that, at this time, is accepted as fee-payment, to make deposits, and is also the only currency in which rewards are distributed. This property of ada (and no other type of asset) is due to the construction of the underlying consensus protocol.\nNative tokens represent some value and act as an accounting unit, which can be used for payments, transactions, and can be sent to an exchange address. Native means that these tokens are supported by the Cardano accounting ledger without the need for additional smart contracts, as the ledger features built-in support to track ownership and transfer of more than one type of asset.\nWhile both ada and native tokens hold value and act as a payment and transaction unit, only ada is used for fees and rewards, while only native tokens can be customly created.\nAda is Cardano s principal currency. It is essential to hold ada (besides other currencies) to transfer multi-asset tokens between addresses, since each address must hold a minimum ada value (min-ada-value).\nmin-ada-value\nAs a consequence of this design, the following apply:\nmin-ada-value\nmin-ada-value\nmin-ada-value\nBefore transferring custom tokens, instructions may choose to use off-chain communication to negotiate who supplies the ada to cover the min-ada-value in the output made by the transferring transaction.\nFor example: (CryptoDoggiesPolicy, poodle, 1) contained in O can be consolidated with (CryptoDoggiesPolicy, poodle, 3) in O , for a total of (CryptoDoggiesPolicy, poodle, 4) in a new output that is made by the consolidating transaction.\n(CryptoDoggiesPolicy, poodle, 1)\n(CryptoDoggiesPolicy, poodle, 3)\n(CryptoDoggiesPolicy, poodle, 4)\nmin-ada-value\nA token bundle is a heterogeneous ( mixed ) collection of tokens. Any tokens can be bundled together. Token bundles are the standard - and only - way to represent and store assets on the Cardano blockchain.\nToken bundles organize tokens into a particular kind of data structure (see example and explanation below), so that which tokens are fungible with which other tokens explicitly adheres to this organization.\nIn previous versions of the Cardano ledger, ada amounts were specified in transaction and UTXO outputs. With the introduction of multi-asset support, these amounts have been extended with token bundles, which can specify an ada amount alongside quantities of other assets in a single output.\nToken bundles are contained in outputs and mint fields of transactions, and the outputs in the UTXO set tracked by the ledger. Note that certain fields of a transaction must still explicitly specify ada amounts, such as the fee field.\nToken bundle example\nHere is an example of a token bundle, let s call it TB_Example:\n{NFLPlayerCardsPolicyID {(SomeNFLPlayerCard, 1), (SomeOtherNFLPlayerCard, 1), (YetAnotherNFLPlayerCard, 1)}RushConcertPolicyID {(Tickets, 500), (VIPTickets, 50)}}\n{NFLPlayerCardsPolicyID {(SomeNFLPlayerCard, 1), (SomeOtherNFLPlayerCard, 1), (YetAnotherNFLPlayerCard, 1)}RushConcertPolicyID {(Tickets, 500), (VIPTickets, 50)}}\nHow and where are token bundles stored?\nToken bundles can be found:\nMulti { MyAddress, value: TB_Example }\nSplitting and combining token bundles\nTransactions can arbitrarily split and combine token bundles into different bundles. For example, we can split the bundle TB_Example into two:\nTB_Example\nTB_Example_Part1:\nNFLPlayerCardsPolicyID {(SomeNFLPlayerCard, 1)}RushConcertPolicyID {(Tickets, 200), (VIPTickets, 20)}\nNFLPlayerCardsPolicyID {(SomeNFLPlayerCard, 1)}RushConcertPolicyID {(Tickets, 200), (VIPTickets, 20)}\nTB_ExamplePart2:\nNFLPlayerCardsPolicyID {(SomeOtherNFLPlayerCard, 1), (YetAnotherNFLPlayerCard, 1)}RushConcertPolicyID {(Tickets, 300), (VIPTickets, 30)}\nNFLPlayerCardsPolicyID {(SomeOtherNFLPlayerCard, 1), (YetAnotherNFLPlayerCard, 1)}RushConcertPolicyID {(Tickets, 300), (VIPTickets, 30)}\nERC20 is an Ethereum token standard, widely used for the purpose of token issuance on various platforms today. The peculiarity of this token type lies in the fact that it can represent value and serve for such purposes as payments, value transfer, exchange, rewards or incentives, access to services and products, represent voting rights, etc. Also, these tokens can hold both utility and security features, which opens a range of possible use cases for businesses, applications, and enterprises.\nOn Cardano, instructions can create native tokens that will serve the above-mentioned purposes and in addition, it is possible to create unique (non-fungible) assets representing value like real estate or intellectual rights, for example (in Ethereum, this functionality requires a separate standard, ERC721).\nUnlike ERC20 tokens, the tracking and accounting of native tokens is supported by the ledger natively (ERC20 tokens require smart contracts to achieve the same thing). An important benefit of using native tokens is that they do not require smart contracts to transfer their value and can be transferred alongside other token types. Also, unlike ERC20, native tokens do not require special transfer fees or additional event-handling logic to track transactions.\nAnother advantage of native tokens over ERC20 is security. ERC20 tokens have proven vulnerable to a wide range of security issues. This is conditioned by the fact that ERC20 token creation requires manual modification of the contract standard, which can result in errors and possible bugs. Creating and transacting tokens natively removes the possibility of human error, since the ledger itself handles the token logic. Additionally, over- and under-flow vulnerabilities that are present for ERC20 are eliminated for native tokens, as Cardano s scripting language does not have fixed-size integers and the ledger itself (rather than the ERC20 instruction code) tracks token movement.\nOverview\nA minting policy is the set of rules that govern the minting and burning of assets scoped under that policy. The point of a minting policy is to specify the conditions under which tokens are minted (or burned). For example, the rules might specify who has control over the asset supply through minting and burning.\nMinting policies are defined by the instructions who want to create a new asset. For example, a instruction might wish to only allow themselves to mint any more of a certain kind of token. This would be specified in the policy.\nMinting rules can be expressed:\nAs very basic set of rules that is made up of (ANDs and ORs of):\nAdherence to minting policies is checked by the node at the time a transaction is processed, by running the code or checking the relevant signatures. Transactions must adhere to all the minting policies of all assets that the transaction is attempting to mint.\nThe association between an asset and its minting policy is permanent for safety reasons: this feature protects the instructions and the input from illegitimately minted tokens.\nIf the minting policy of a token changes, it is not really the same token any more, and its value cannot be compared to that of the original token. This permanent asset-policy association scheme is integral to defining high-assurance policies. Loosening this identification opens our MA scheme to various attacks. Having a permanent association between these allows us to guarantee that every token was minted in accordance with its minting policy, and not any other policy which it might have previously been associated with.\nNote that this is not as restrictive as it sounds. In a loose parallel with the US monetary policy, we can say that the policy is 'government and laws set the policy', and this is a policy which requires looking up the current laws (which themselves could change), and only minting money in adherence to them.\nNote: There are many other types of minting policies.\nSingle-issuer policy\nA single-issuer minting policy specifies that only the entity holding a particular set of keys is allowed to mint tokens of the particular asset group. For example, the set of keys specified in the minting policy must have signed the minting transaction.\nAn example of an asset group that would use a single-issuer policy would be tokens representing baseball cards. The company manufacturing legitimate collectors' cards would publish the keys required by the minting script to mint new baseball cards. This would mean that no new baseball card tokens can be minted without the company's signatures. This type of policy can be implemented without Plutus smart contracts.\nTime-locked minting policy (token-locking)\nThis type of policy can be used to specify when tokens can be spent from an address. In particular,\nThis type of policy is usually not used by itself. Usually, it is in conjunction with the multi-signature or single issuer policy. For example, this output can be spent after slot s and only by a transaction signed by key k.\nThis type of policy can be implemented without Plutus smart contracts.\nOne-time minting policy\nIn a one-time mint policy, the complete set of tokens of a given asset group is minted by one specific transaction. This means that no more tokens in that particular asset group will ever be minted. This type of policy needs Plutus smart contracts to be implemented.\nOne-type mint policies would be useful for generating concert ticket tokens for a specific concert, for example. The venue capacity is known ahead of time, so there'll be no need to ever allow more tickets to be minted.\nMinting transactions\nTo introduce new quantities of new tokens on the ledger (minting) or to remove existing tokens (burning), each transaction features a mint field. The transactions where the mint field is not empty are known as minting transactions. The use of this field needs to be tightly controlled to ensure that the minting and burning of tokens occur according to the token's minting policy.\nApart from the mint field, minting transactions must also carry the minting policies for the tokens they are minting, so that these tokens can be checked during validation.\nThe outcome of processing a minting transaction is that the ledger will contain the assets included in the mint field, which is included in the balancing of the transaction: if the field is positive, then the outputs of the transaction must contain more assets than the inputs provide; if it is negative then they must contain fewer.\nIt is important to highlight that a single transaction might mint tokens associated with multiple and distinct minting policies. For example, (Policy1, SomeTokens) or (Policy2, SomeOtherTokens). Also, a transaction might simultaneously mint some tokens and burn others.\n(Policy1, SomeTokens)\n(Policy2, SomeOtherTokens)\nThe native token lifecycle consists of five main phases:\nThe following diagram outlines the interaction between the input components:\nEach of these logical phases involves transactions on the Cardano blockchain, which may incur fees in ada. The main groups of actors are:\nThe lifecycle of multi-asset tokens starts with their creation minting, which refers to the process whereby new tokens are created by one or more token issuers in accordance with the monetary policy script that the asset controller has defined. New tokens will usually be created to fulfill specific purposes. For example, fungible or non-fungible (unique) tokens may be created to be used for specific payment, purchasing, or exchange needs. When a new token is minted, the total token supply for that token increases, but there is no impact on the ada supply. Minting coins and transferring them to new addresses may require an ada deposit to be paid, which may be proportional to the number of different tokens that are held, for example.\nToken holders will hold tokens in their wallets, may pass them on to other instructions, exchange them for items of value (including non-native tokens), etc. in exactly the same way that they can use ada. When a instruction has finished using the token, they may choose to redeem them. This means that tokens are returned to an issuer (perhaps in return for a product, service, or some other currency, for instance). Once redeemed, tokens could then be re-issued to other instructions as needed. Token holders will need to maintain some ada in their wallets to pay for transaction fees.\nWhen tokens become redundant, they can be burned, if desired, in accordance with the underlying monetary policy script. The process of burning destroys these tokens (removes them from circulation), and the total token supply decreases. Any deposits will be returned at this point. The burning process is identical for fungible and non-fungible tokens.\nNote: The multi-asset token lifecycle potentially allows tokens to be obtained and reissued by other parties - token holders who act as reissuers for the token. This can be done to eg, enable trading in multiple asset classes, maintain liquidity in one or more tokens (by acting as a broker), or to eliminate the effort/cost of token minting, issuing or metadata server maintenance. Thus, both reissuers and issuers can gain from such a deal - eliminating cost and effort, maintaining separation and integrity, and injecting value into the asset class.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Plutus?",
    "input": "",
    "output": "To start developing with Plutus, see:\nPlutus is the native smart contract language for Cardano. It is a Turing-complete language written in Haskell, and Plutus smart contracts are effectively Haskell programs. By using Plutus, you can be confident in the correct execution of your smart contracts. It draws from modern language research to provide a safe, full-stack programming environment based on Haskell, the leading purely-functional programming language.\nPlutus smart contracts consist of parts that run on the blockchain (on-chain code) and parts that run on a instruction s machine (off-chain or client code). Off-chain code can be written using the Plutus Application Framework (PAF), and this code is then compiled by the GHC (Glasgow Haskell Compiler), whereas on-chain code is compiled by the Plutus compiler into Plutus Core.\nCardano uses the extended UTXO accounting model (EUTXO) which extends the unspent (U) transaction (TX) output (O) accounting model (UTXO) (used by Bitcoin). In the UTXO model, a transaction has inputs and outputs, where the inputs are unspent outputs from previous transactions. As soon as an output is used as input in a transaction, it becomes spent and can never be used again. The output is specified by an address (a public key or public key hash) and a value (consisting of an ada amount and optional, additional native token amounts).\nEUTXO extends the UTXO model by allowing output addresses to contain complex logic to decide which transactions can unlock them, and by adding custom data to all outputs. This model offers unique advantages over other accounting models. The success or failure of transaction validation depends only on the transaction itself and its inputs and not on anything else on the blockchain. Consequently, the validity of a transaction can be checked off-chain before the transaction is sent to the blockchain. A transaction can still fail if some other transaction concurrently consumes an input that the transaction is expecting. However, if all inputs are still present, the transaction is guaranteed to succeed.\nPlutus Core is the scripting language used by Cardano to implement the EUTXO model. It is a functional language similar to Haskell, and a large subset of Haskell can be used to write Plutus Core scripts. As a smart contract author, you don t write any Plutus Core; rather, all Plutus Core scripts are generated by a Haskell compiler plugin.\nThese scripts will be executed by nodes during transaction validation live on the chain. They will either lock EUTXOs in the form of validator scripts or as minting policies, which control the minting and burning of native tokens.\nIn practice, when developing smart contracts, you will write validator scripts in Haskell, which will then be automatically compiled into Plutus Core using a GHC plug-in called Plutus Tx.\nEach native token comes with its own minting policy, which determines the conditions under which tokens can be minted and burnt. instructions can write minting policies in Haskell and compile them to Plutus Core. During the minting or burning process, the Plutus Core policy script is executed in the context of the minting or burning transaction, and the script will have to approve or forbid the action. This feature further accelerates the growth of non-fungible tokens (NFTs) on Cardano by enabling the creation of much more complex minting policies and allowing the creation of NFTs in a trustless manner.\nPlutus provides considerable security advantages. It delivers an easier, more robust way to show that your smart contracts are correct and will not encounter the problems found in previous smart contract language design.\nPlutus enables a novel integrated approach to smart contract and distributed application development that is more convenient and safer than previous alternatives. Both the on-chain and off-chain code are based on the same language. You use a uniform code base, which the Plutus toolchain then automatically separates into on-chain and off-chain code and packages for deployment.\nAdditionally, in contrast to Ethereum, Plutus supports instruction-defined tokens (both fungible and non-fungible) natively which does not require an accompanying smart contract.\nPlutus Core is the scripting language embedded in the Cardano ledger. It forms the basis of the Plutus Platform an application development platform for developing decentralized applications (DApps) on the Cardano blockchain.\nDeveloper resources:\nAssociated links:\nHaskell language server implementation is an implementation of a server for the Language Server Protocol (LSP). A language server talks to a client, who can ask the server to perform various operations, such as reporting errors or providing code completions.\nDeveloper resources:\nPlutus Core is written in Haskell. To use Plutus, it is essential to know the basics of Haskell. To help with the onboarding journey, IOG's education team created the Haskell course for beginners. You can find the repository with explainers, links to lectures, and more below.\nThis section includes references to Plutus instruction documentation such as explanations, tutorials, how-to guides, etc.\nDocumentation:\nPlutus Core and Plutus Tx instruction guide: introduces the Plutus Core programming language and programming with Plutus Tx. Documentation includes explanations, tutorials, how-to instructions, troubleshooting, and reference information:\nVideo presentation on the Plutus Platform: in this session from the 2020 Cardano Summit, Michael Peyton-Jones walks us through working with Plutus, while Jann M ller then takes us through the Plutus Application Platform, where assets can be built and launched. He also demonstrates how tokens can be transferred using a smart contract.\nPlutus Pioneer community notes:\nThis section provides links to Plutus community resources.\nIf you are a community member engaged with Plutus development, please raise a pull request to add more relevant links and information.\nDiscussions & support:\nThere are different tools that developers can use to evaluate and deploy smart contracts on Cardano:\nAn extended list of community-built developer tools on Cardano: includes NFT creation tools, smart contract platforms, software libraries, APIs, interfaces, SDKs, digital product platforms, data services, blockchain integration, automation tools, decentralized protocols, enterprise apps, stake pool tooling, and more.\nEmurgo\nPlutonomicon\nOpShin\nHarmonic\nTxPipe\ndcSpark\nMLabs\ndQuadrant\nCardanoSolutions\nOther tools\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Hydra?",
    "input": "",
    "output": "Hydra is a layer 2 scaling solution for Cardano rooted in peer-reviewed research that increases transaction throughput and ensures cost efficiency while maintaining rigorous security.\nHydra Head is the first protocol of the Hydra family of protocols, which embodies the foundation for more advanced deployment scenarios relying on isomorphic, multi-party state channels. Each Hydra Head works as an off-chain mini ledger shared between a small group of participants. Developers can use Hydra Heads to add specialized, complex protocols on top of Cardano.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Release notes?",
    "input": "",
    "output": "Here is the latest release information for the Cardano components. Component dependencies and compatibility information can be found in the compatibility matrix. Release notes for specific components are available on each component's release page.\nCardano node configuration details (for mainnet and testnets) are available on the Cardano environments page.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Cardano tracking tools?",
    "input": "",
    "output": "Since Cardano is a public blockchain ledger, it is possible to easily track all recent transactions, block details, and epoch data using different tools.\nCardano explorers\nThere is a list of available Cardano explorers. These explorers provide instruction-oriented tools that fetch data from the main database and reflect it in a straightforward and convenient web interface.\nExplorers usually show epoch details, which include:\nBy choosing a specific block, you can explore it in more detail to see its ID, size, epoch and block details, number of included transactions, and confirmations.\nYou can also search for specific epochs, transactions, or blocks by pasting their IDs in the search field.\nCardano supports multi-asset creation and management. To see a list of created assets and tokens, you can use these tools:\nTo find a list of all registered stake pools, their tickers, pool names, and IDs, you can use these tools:\nIf you'd like to include additional references to ecoinput tracking tools, please submit a pull request.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "About stake pools, operators, and owners?",
    "input": "",
    "output": "A stake pool is a reliable server node that represents the combined stake of various stakeholders in a single entity. Stake pools use the Cardano node to form the backbone of the Cardano network by processing transactions and validating and producing blocks.\nStake pool roles include a stake pool operator and one or more stake pool owner(s). It is important to note the conceptual differences between the two:\nUsually, the stake pool operator and the owner are the same person. However, a stake pool can have multiple owners that choose to combine their pledge. It should be noted that the stake pool's declared pledge must be met by the combined stake in the owner's wallets and failure to do so will result in the pool being unable to produce blocks.\nAll operator and owner rewards are paid out into a single rewards account associated with the reward address of the pool. If a stake pool has multiple owners, it is up to the owner of the rewards account to distribute rewards to the operator and other owners.\nAn agreement is likely needed to define when and how the accumulated rewards in a shared account should be split. For example, they can agree to have the operator control the shared account, or they can choose to use a multisig account.\nTo run a pool effectively, a bi-directional relationship and trust are crucial. If this trust is broken, other parties can lose in regards to accumulated or potential rewards, or reputation for the operator.\nDeveloper resources:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Establishing connectivity between the nodes?",
    "input": "",
    "output": "Nodes connect to each other within the Cardano networking layer, and this connection is essential for information exchange about transactions and new block creation.\nCardano's networking evolved from its initial federated structure to hybrid and the Dynamic peer-to-peer (P2P) model. Networking will keep evolving with future additions such as Ouroboros Genesis and peer-sharing. See this explainer for more details about network evolution and P2P.\nIn a previous hybrid setup, SPOs could configure a node to connect to, for example, 50 other SPO nodes. This is a pretty large number, since many nodes can be offline, change their addresses, etc. While 20 connections are enough for efficient communication, SPOs had to over-provision because of the static configuration.\nIn a Dynamic P2P setup, SPOs can target to configure 20 connections, which can be picked from thousands of SPO relays, not just 50. And if any are offline, or go offline, the setup will automatically pick new ones, to meet the set target. This means that the configuration is no longer limited to a static pool of 50 peers.\nAs a stake pool operator, you will have two types of nodes: core nodes and relay nodes. Each core node must be accompanied by one or more relay nodes.\nThe difference between the two types is that core nodes are responsible for producing blocks, while relays are responsible for communicating with other relays in the network and broadcasting blocks. This difference determines how they are configured and how they are connected to the network.\nA core node is configured with various key pairs and an operational certificate required for block generation. It only connects to its relay nodes.\nDeveloper resources:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Logging and monitoring?",
    "input": "",
    "output": "Regular monitoring of active nodes is crucial to determine if the node is running optimally, if the input is performant, or if fine-tuning is required.\nDeveloper resources:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Creating keys and operational certificates?",
    "input": "",
    "output": "It is the responsibility of the operator to manage both the hot (online), and cold (offline) keys for the pool. Cold keys must be secure and should not reside on a device that has internet connectivity. It is recommended that you have multiple backups of your cold keys.\nThe keys that you need as a stake pool operator are:\nThe KES key, or hot key as mentioned above, is a node operational key that authenticates who you are. You specify the validity of the KES key using the start time and key period parameters and this KES key needs to be updated every 90 days. The VRF key is a signing verification key and is stored within the operational certificate.\nDeveloper resources:\nStake pool operators must provide an operational certificate to verify that the pool has the authority to run. The certificate includes the operator s signature and important information about the pool (addresses, keys, etc.)\nOperational certificates represent the link between the operator s offline key and their operational key. A certificate s job is to check whether or not an operational key is valid, to prevent malicious interference. The certificate identifies the current operational key, and is signed by the offline key.\nCertificates are generated with an issue counter number and included in the header of each block the node generates.\nCertificates include a kes-period (start date), which indicates the period within which the certificate is valid before you need to create another one.\nCertificates are generated on the offline machine using the offline/cold keys, before being copied over to the node to validate the KES keys used to sign the blocks.\nDeveloper resources:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Stake pool operations and maintenance?",
    "input": "",
    "output": "After a successful stake pool registration and its further operation, SPOs might be interested in obtaining certain information about their pools activity. Information about those pools that are operating on mainnet can be fetched using different explorer tools. See introduction for useful resources.\nIn certain cases, exchanges and stake pool operators, in particular, are looking for in-depth information about their mainnet and testnet pools. To access data that is stored on the Cardano blockchain, it is recommended to use cardano-node, cardano-db-sync, or cardano-graphql.\nEach of the above integration components can be installed and easily deployed using Docker.\nDeveloper resources:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Pool metadata management?",
    "input": "",
    "output": "Stake pools are registered on-chain, and their on-chain data (such as information required to calculate rewards) is critical to the operation of the ledger. Stake pools also possess metadata that helps instructions make a rational choice of a stake pool to delegate to. This metadata is stored off-chain as it might reflect sensitive content, and such an approach allows for a degree of decentralized censorship.\nOn the other hand, off-chain metadata storage prerequisites a challenge of open access by different instructions. On-chain stake pool registrations contain a URL pointer to the off-chain metadata and a content hash that can be fetched from a specific stake pool. This might cause both performance and privacy issues. Another crucial aspect to address is the stake pool s 'ticker' name, which is the short name a stake pool is recognized by. Ticker names might reflect prominent brands or trademarks which should not be duplicated as this leads to confusion. Stake pool operators (SPOs) running multiple pools might want to use the same metadata for all their pools and then, this might also lead to these pools appearing with the same ticker name.\nA stake pool metadata aggregation server (SMASH) is introduced to address metadata performance and privacy issues. Delegators, SPOs, exchanges, or wallets can deploy and use SMASH to ensure a higher level of metadata accountability and maintenance. SMASH aggregates metadata from existing stake pools and provides an efficient way to fetch it and store it in a semi-centralized environment. SMASH operators (exchanges, wallets, SPOs) are then enabled to validate and manage this metadata curating it for censorship via the delisting feature.\nThe first generation of the SMASH server has been deployed by Input Output Global (IOG). It aggregated stake pool metadata and offered a list of valid stake pools with reviewed content and ticker names. Nowadays, various solutions exist to synchronize data from the chain and a SMASH server is provided out-of-the-box as part of the cardano-db-sync project.\nFor running your own, see these Cardano DB Sync instructions.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Stake pool performance?",
    "input": "",
    "output": "A stake pool elected as a slot leader is responsible for producing new blocks for the Cardano network. If the stake pool does not produce a block, the slot will remain empty and the blockchain will not be extended. The Cardano blockchain can tolerate a number of missing blocks, but the majority of blocks expected to be produced (at least 50 + 1) must be generated during an epoch.\nAlthough occasionally missed blocks don t affect the extension of the blockchain as a whole, an unresponsive elected stake pool decreases the overall performance of the network, which is undesirable.\nStake pool performance is calculated according to its expected activity as the ratio of a number of blocks a stake pool produces in a given epoch versus the number it was capable to produce. For instance, if the stake pool could produce 100 blocks (based on its stake and the chance to be elected) in an epoch, but it actually produced just 50 blocks, its performance would be 50 .\nPoor stake pool performance decreases the number of rewards that a pool and its members receive, thereby decreasing its attractiveness to delegators. To improve its performance, a stake pool should have good network connectivity, be run on a reliable input, and actively participate in block production and verification.\nThe higher the pool s performance, the more attractive it will be to delegators since it will offer higher rewards and incentives.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Stake pool ranking?",
    "input": "",
    "output": "In the Daedalus wallet and Cardano Explorer, stake pools are ranked based on the amount of rewards that instructions will receive if they choose to delegate to those pools. Ranking shows pool saturation level, simplifying the pool choice. From a delegator's perspective, once a pool reaches a certain saturation point, it will no longer be beneficial to delegate to it. The most attractive stake pools are displayed first and ordered from the top down.\nThe ranking input is designed to provide instructions with the ability to choose the most suitable stake pool for a higher return on investment (ROI), so reliable stake pool operators can maintain and support the input and maximize decentralization.\nA pool's ranking is based on several parameters: cost and margin, the pool's performance, and the amount of stake that the pool has already accumulated. These factors promote reliable stake pools that are not yet saturated and provide low cost and margin.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Guidelines for operating large stake pools?",
    "input": "",
    "output": "This section provides guidelines for operators of large stake pools, specifically how to manage the risks and complexity of maintaining significant stake or multiple pools. Operators of smaller stake pools may also find much of this advice useful to them.\nOperating stake pools effectively is crucial to ensure the long-term health and liveliness of decentralization on Cardano. When a stake pool operator (SPO) operates multiple stake pools (or has a single pool that directly controls a significant percentage of the total staked ada), they may have a significant effect on the overall input throughput as a consequence of the proof-of-stake principle.\nThe Cardano design and security analysis assume that each stake pool operates in a broadly independent and mutually supportive (non-adversarial) manner. This means that large SPOs have a particular responsibility to ensure that their operation supports the needs of the network as a whole. For this, it is essential to evaluate and address common risks that may be experienced in stake pool operations.\nVirtualization and containerization risks\nBecause stake pools and relay nodes have specific real-time requirements, it is generally not recommended to run Cardano nodes on virtualized resources without undertaking careful performance, reliability, and security analyses. The mapping of Cardano nodes to the underlying physical infrastructure must consider timing issues for block production and propagation.\nSecurity and common-mode failures\nThe risks of operating a stake pool using container-based virtualization include increased chances of common-mode input failures, resource contention, and increased exposure to security risks (including DOS attacks and loss of private keys). The use of containerized environments, where relay nodes share the same physical infrastructure as stake pool nodes, may impact real-time requirements on block production and networking infrastructure, thus reducing stake pool income. Moreover, concentrating network connections (as may happen with virtualized or containerized services) increases the chances of a DOS attack, as well as reduces network redundancy in non-obvious ways. In a virtualized or shared environment, a single NIC/cable failure or DOS attack, for instance, might then affect multiple stake pools or relay nodes, including those that might be run by different SPOs.\nShared resources\nThe diffusion of a newly minted block causes a pulse of activity to occur. Stake pools and relay nodes that share physical computing resources will be forced to compete for shared CPU, memory, storage, networking, and other resources. The demand for these resources is not smooth, it is correlated by the block diffusion. This can negatively affect block production or result in blockchain synchronization failures. Under some conditions, performance can degrade in a non-linear way (e.g., adding a second node may reduce performance by more than 50 ). To eliminate such risks, it is important to analyze performance requirements not only for the typical load but also for limit cases.\nMaintenance and upgrade\ninput maintenance and upgrades should be always taken into consideration. Although migration of a virtualized instance to new hardware, or duplication of a running instance might seem easy, this commonly results in some timing disruption. This is more significant in a real-time setting (such as Cardano) than for typical data processing applications, which often have high levels of replication and redundancy. input upgrades may also have unexpected effects on the virtualized input s performance, or occasionally, functionality. SPOs, therefore, need to be aware of underlying input maintenance and take appropriate action to avoid losing blocks (and income).\nGeographical and physical concentration\nVirtualized inputs are often concentrated into a few large data centers. This creates potential points of common network failures, including reliance on specific portions of national infrastructures (internet backbones, power grids, etc). Large SPOs should aim to disperse their operations across multiple regions, and very large operators should aim for a global presence.\nTo ensure overall network resilience and robustness, SPOs that operate large stake pools must take special care of:\nStake pool configuration\nSecurity preferences\nGeneral advice:\nThere is no standard input configuration as every stake pool has different operational requirements and preferences. It is the choice of an SPO on how to configure the topology.\nHowever, taking into account the earlier advice, it is recommended that an SPO maintains at least two and an additional relay node(s) per a stake pool. In the case of running multiple stake pools, it is best that SPOs use geographically diverse peers, spread relay nodes across the world, and reach out to other SPOs (particularly other large ones) making agreements to add each other's relay nodes. The more SPOs they have peer-sharing agreements with, the more likely their blocks will propagate and get included in the chain.\nMonitoring is important for all SPOs, and it is essentially a responsibility of an operator to ensure the quality of their pools functionality. As an example of a monitoring process that reflects Prometheus rules alerting on thresholds, one can take a look at the cardano-ops repository here.\nExample relay topology\nPlease note that IOHK relay nodes are outlined as examples.\n{ \"Producers\": [ { \"addr\": \"north-america.relays-new.cardano-mainnet.iohk.io\", \"port\": 3001, \"valency\": 4 }, { \"addr\": \"asia-pacific.relays-new.cardano-mainnet.iohk.io\", \"port\": 3001, \"valency\": 4 }, { \"addr\": \"europe.relays-new.cardano-mainnet.iohk.io\", \"port\": 3001, \"valency\": 4 } ]}\n{ \"Producers\": [ { \"addr\": \"north-america.relays-new.cardano-mainnet.iohk.io\", \"port\": 3001, \"valency\": 4 }, { \"addr\": \"asia-pacific.relays-new.cardano-mainnet.iohk.io\", \"port\": 3001, \"valency\": 4 }, { \"addr\": \"europe.relays-new.cardano-mainnet.iohk.io\", \"port\": 3001, \"valency\": 4 } ]}\nThe MaxConcurrencyDeadline configuration option controls how many attempts the node will run in parallel to fetch the same block. Considering that getting the same block as soon as possible is important for both relay nodes and block producer nodes, we recommend setting the MaxConcurrencyDeadline value to 4.\nMaxConcurrencyDeadline\nDelegation\nStake delegation is the process of allocating individual stakeholders funds to collective stake pools. Delegation is performed for block production purposes to ensure that the block creation complies with the proof-of-stake consensus. By delegating, stakeholders do not transfer stake ownership, voting or other rights.\nLarge SPOs will generally control a significant amount of third-party stake to maintain trust in the blockchain, thus being responsible for:\nLarge operators are not responsible for distributing block production rewards to delegators as this is handled automatically by the blockchain. SPOs are also not responsible for securing delegator keys or taking delegation, voting, or other actions on behalf of stakeholders. Individual stakeholders must take personal responsibility for their own security and must make their own decisions in terms of delegation, voting, etc.\nPledging\nPledging is an important mechanism for producing Cardano s healthy ecoinput. SPOs may opt to pledge some, or all, of their ada to the pool in order to make it more attractive to other delegators, and thus to grow the size of the pool as a whole. Pledged ada may be supplied either by an SPO or by other owners.\nPledging rewards\nPledge influences the rewards that a stake pool can earn, and thus the rewards that delegators can obtain from the pool. The pledging amount may be specified, if desired, during the pool registration, and can then be changed on an epoch-by-epoch basis. No minimum pledge is required, however, there is also no maximum pledge.\nGiven two equivalent stake pools, the one with the greater pledge will earn more rewards, and therefore be more attractive to other delegators. However, the SPO or other pool owners should collectively meet the pledge by delegating. It is also important to ensure that there are enough funds in addresses that use the pool owner's address(es) as stake reference. Failure to meet the pledge will mean that no rewards can be earned for the pool by any owner or delegator. This will generally result in loss of delegation and perhaps pool collapse.\nUnlike delegation, the SPO is responsible for distributing all pledging rewards. This may be done in any agreed manner and is not enforced by the blockchain.\nCollective stake pool operation (maintained by an operator and a group of owners, pledging their stake) requires mutual trust and is a good way to build a larger pool while sharing the risks and rewards.\nDefense against Sybil attacks\nThe pledging mechanism is designed to mitigate against Sybil attacks, which could theoretically allow a proof-of-stake network to be taken over without supplying a significant personal stake. By making pools with higher pledges more attractive, such attacks are prevented. The pledge formula is designed so that a pool with a higher pledge will produce higher rewards and thus become more attractive. To conduct a Sybil attack, an adversary must divide their pledge amongst a large number of pools. Since this will dilute each pool pledge, delegators will be motivated by the rewards mechanism to re-delegate to non-adversarial pools.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Compatibility matrix?",
    "input": "",
    "output": "This omponent compatibility with the Cardano node matrix shows the runtime dependencies of Cardano components on a specific version of cardano-node. (It does not reflect any stacks.) The compatibility matrix should be read in conjunction with the Cardano component dependencies definition.\nIf you only require using the node, such as interacting directly with the node or managing stake pool operations, we recommend the latest node version. If you need compatibility with all components, we recommend using version 10.1.2.\nThe table below illustrates the key architectural components used in various Cardano blockchain operations. It details essential and optional tools for tasks such as stake pool operations, transaction management, and data handling.\ncardano-node\ncardano-cli\ncardano-cli\nPrometheus\nGrafana\ncardano-addresses\ncardano-cli\ncardano-addresses\ncardano-node\ncardano-rosetta\ncardano-wallet\ncardano-wallet\ncardano-rosetta\ncardano-db-sync\ncardano-graphql\ncardano-db-sync\ncardano-graphql\ncardano-rosetta\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Testnets faucet?",
    "input": "",
    "output": "Since Cardano testnets are independent networks, separate from the Cardano mainnet, they require their own tokens.\nThe faucet is a web-based service that provides test ada to instructions of the Cardano testnets. While these tokens have no 'real world' value, they enable instructions to experiment with Cardano testnet features, without having to spend real ada on the mainnet.\npool18ttg8k...a1c\nIf you're an SPO and wish to test stake pool operations on preview or pre-production testnets, you can request some test ada to be delegated to your pool. For this, choose the environment you're working in, and select 'receive pool delegation' from the action menu.\nWhen you have finished using your test tokens, please return them to the faucet so that other members of the community can use them. You can return your test tokens to the relevant address:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Getting started with Cardano testnets?",
    "input": "",
    "output": "To get started and join Cardano testnets, you should install and configure the Cardano node and the command line interface (CLI), configure your testing environment, and generate payment keys and addresses. Note, that you will also need to get some test ada to test your transactions.\nThe Cardano node can run on the following platforms:\nDownload the latest version of the node:\nCheck your executables. The latest versions of the Cardano node and CLI can be found here:\nThere are a number of ways to install and run a Cardano node on testnet. The choice of the best-matching method depends on the operating input, level of technical expertise, and personal preferences.\nFor more information on the various options, see:\nTo start working with the node, it is essential to ensure that the node configuration, genesis, and topology files are correctly set up. In addition, the node will need the configuration files specific to each era that the Cardano network has experienced thus far.\nThese configurations tell the node how to handle the updates that come with each era (ie, Mary, Alonzo, Babbage, etc). Each new era (implemented using the hard fork combinator technology) introduces protocol changes and new ledger rules. While old configurations are still valid, the new configurations and features offer new rules and improvements. In the Babbage era, for example, Plutus V2 scripts work better than Plutus V1 scripts. Plutus V1 scripts, however, are still supported.\nFor more details, see:\nNote that mainnet and testnet commands are very similar except for the flag usage. For example, when interacting with cardano-cli on mainnet, you should add the --mainnet flag. However, to use the same commands on testnets, you should use the --testnet-magic INTEGER flag instead.\n--mainnet\n--testnet-magic INTEGER\nINTEGER indicates the number of the testnet:\nINTEGER\n2\n1\nTo send and receive transactions, you should first create the payment key pair:\ncardano-cli address key-gen \\--verification-key-file payment.vkey \\--signing-key-file payment.skey\ncardano-cli address key-gen \\--verification-key-file payment.vkey \\--signing-key-file payment.skey\nThis creates two files: payment.vkey (the public verification key) and payment.skey (the private signing key).\npayment.vkey\npayment.skey\nBoth verification keys (payment.vkey and stake.vkey) are used to build the address and the resulting payment address is associated with these keys.\nTo build the address, run:\ncardano-cli address build \\--payment-verification-key-file payment.vkey \\--stake-verification-key-file stake.vkey \\--out-file payment.addr \\--testnet-magic INTEGER\ncardano-cli address build \\--payment-verification-key-file payment.vkey \\--stake-verification-key-file stake.vkey \\--out-file payment.addr \\--testnet-magic INTEGER\nTo query the balance of the address, run:\ncardano-cli query utxo \\--address $(cat payment.addr) \\--testnet-magic INTEGER\ncardano-cli query utxo \\--address $(cat payment.addr) \\--testnet-magic INTEGER\nFor more commands, see:\nNote to use the --testnet-magic INTEGER flag instead of --mainnet.\n--testnet-magic INTEGER\n--mainnet\nTo fund your testnet address, go to the testnets faucet and request some test ada:\nIf you're working in a pre-production environment and have an API key, you can run the following command to fund your address:\ncurl -X POST -s 'https://faucet.preprod.world.dev.cardano.org/send-money/YOURADDRESS?api_key=YOURAPIKEY'\ncurl -X POST -s 'https://faucet.preprod.world.dev.cardano.org/send-money/YOURADDRESS?api_key=YOURAPIKEY'\nYou re now ready to create, sign, and submit transactions on testnets. See the tutorials:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Creating a local testnet?",
    "input": "",
    "output": "A local testnet enables developers and projects building on Cardano to test new features or functionality prior to deployment on global testnet environments. While preview and pre-production environments benefit the wider developer community, a local testnet allows the execution of a hard fork in your own setup and subsequent testing of DApp behavior.\nThere are several possible solutions to create a local testnet. These include the use of Plutip (a tool for private network creation) or Nix (a tool for package management and input configuration).\nPlutip, a tool developed on the Cardano blockchain, facilitates the creation of a private network to run Plutus contracts on.\nPlutip can be used in two different ways:\nTutorials referenced above are created by the MLabs team.\nAnother possible option is to spin up a local testnet using Nix. For more information, learn about the packaging principles, and see how to create a local testnet using Nix.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Resources?",
    "input": "",
    "output": "IOG s researchers and engineers often post on IO blog page. Here are a couple of posts which you may find helpful:\nIf you have produced material and would like to contribute your content for inclusion on this page, please raise a pull request.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Support and feedback?",
    "input": "",
    "output": "To get technical support and help with your issues or questions, you can join a dedicated Telegram channel or go to IOG's support page.\nTELEGRAM CHANNEL: CARDANO DEVELOPERS\nTo reach the developers of Cardano directly on Telegram, join the @CardanoStakePoolWorkgroup channel.\nTo contact IOG Technical Support, submit a request using the Submit a request form. You can also click the 'Support' button at the bottom right of your screen. The request form is better if you have a lot to write.\ninstruction feedback is an invaluable and critical aspect of maintaining the Cardano testnet.\nWe welcome feedback on any issues you have encountered:\nYou can also join 'IO DEV announcements' Telegram channel to receive key development updates.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Plutus Pioneer program?",
    "input": "",
    "output": "Before starting, note that Plutus Core, Cardano s native smart contract language, is written in Haskell. Since Plutus contracts are Haskell programs, a basic understanding of Haskell is essential for the Plutus Pioneer program.\nTherefore, it is recommended that instructions complete this self-paced Haskell Bootcamp course, which includes unique code examples, engaging exercises, and prepared solutions to learn Haskell fundamentals.\nIt is a program to recruit and train developers in Plutus for the Cardano ecoinput. When you join this program, you will become part of a group with access to a set of lectures that teach you the core principles of how to code in both Haskell and Plutus. It is highly interactive, with weekly videos, exercises, and Q&A sessions, along with exclusive access to the creators and key experts in the language. You will also be able to join a dedicated community channel, created to help pioneers connect with each other as you learn.\nThis course is not for coding beginners. While you do not need to be an expert in formal methods, programming experience and a general aptitude for logical and mathematical thinking are highly desirable. Some prior knowledge of Haskell or functional programming is also recommended, as Plutus is heavily based on Haskell and includes advanced features like Template Haskell, type-level programming, and effect inputs. We recommend that you work through IO's official Haskell Course. You can also read the Learn You a Haskell book.\nThis course involves approximately ten hours a week of your time and effort. It covers the building blocks of Haskell and Plutus, including:\nAs with all learning experiences, the more you put in, the more you will get out!\nWe have recently completed a very successful fourth cohort of this program and will be launching another course later this year. Please register your interest today using the form below to find out more details.\nIf you are interested in joining a future cohort of this program, please complete the registration form below and we will be in touch soon.\nYes, we are working on certification for those pioneers who successfully complete the entire program. Certificates will be represented as non-fungible tokens (NFTs) (on the testnet) and locked by a Plutus contract. Pioneers can demonstrate their qualification by constructing an appropriate transaction to unlock their individual token.\nREGISTER NOW\nPlease share your details and we will be in touch.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "What is a blockchain?",
    "input": "",
    "output": "A blockchain is a type of database or ledger that is duplicated and distributed to all participants within the blockchain network. It is made up of a set of interconnected nodes that store data or items of value in blocks. These blocks are validated, cryptograhpically secured, and linked to each other in chronological order in a chain. The information stored in the validated blocks of the blockchain cannot be altered later on. It is permanently inscribed in the distributed ledger.\nBlockchain technology, otherwise known as distributed ledger technology (DLT), provides a decentralized and accessible data structure for various records. Such records might include financial payment and transaction details, as well as other types of information from commerce to internet of things (IoT) records.\nAs a blockchain stores data in a decentralized manner, it is independent of centralized, controlling entities, or middlemen. This provides enhanced transparency of data storage and its management. An important feature of blockchain is that it stores records immutably, which means that they cannot be changed, forged, or deleted, as this will break the chain of records.\nBlockchain can be compared to a book of permanent records, where every page acts as an information holder:\nLet s take a closer look at existing data storage solutions to understand the difference between these inputs:\nFinally, blockchains not only provide an immutable and secure database but also act as a functional environment to transact funds, create digital currencies, and process complex deals using digital agreements (smart contracts).\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "What is a cryptocurrency?",
    "input": "",
    "output": "A cryptocurrency is a digital asset, which is stored on the ledger and is designed to serve as a medium of exchange for goods or services. It is otherwise called crypto.\nBlockchain ledgers serve as the underlying technology for cryptocurrency creation in a decentralized environment. Blockchain protocols use rigorous cryptography techniques to enable the minting (creation) of cryptocurrency and to secure and verify crypto ownership and fund movement records. The price of cryptocurrency is not controlled by a government or centralized financial institution. It is defined by its value, correlation to real-world figures, and is driven by market supply and demand.\nAddresses are used when sending cryptocurrency payments. They are unique identifiers and are represented by a string of numbers and letters that are obtained from the instruction's public keys.\nEach blockchain ledger has its underlying cryptocurrency or native currency. Ada is the native, or principal currency on Cardano. This means that ada is the main payment unit on Cardano; it is accepted as fee-payment, to make deposits, and is also the only currency in which rewards are distributed.\nLovelace is the smallest denomination of ada. One ada = 1,000,000 lovelaces. Ada has six decimal places, which makes it easily divisible into smaller fractions.\nCardano also supports the creation of native tokens digital assets that are created for specific purposes. This means that instructions, developers, and businesses can use the Cardano blockchain to create tokens that represent a footprint of value (whether defined by the community, market state, or self-governed entity). A token can be fungible (interchangeable) or non-fungible (unique), and act as a payment unit, reward, trading asset, or information holder.\nRelated topics:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Proof of stake?",
    "input": "",
    "output": "Proof of stake (PoS) is a type of consensus mechanism or protocol that uses the amount of stake (or value) held in the input to determine consensus. In essence, a consensus protocol is what controls the laws and parameters governing the behavior of blockchains. Think of consensus as a ruleset that each network participant adheres to. As blockchains are not controlled by any single, central authority, a consensus protocol is used instead to allow distributed network participants to agree on the history of the network captured on the blockchain to reach consensus on what has happened, and continue from a single source of truth.\nCardano is built on the ground-breaking PoS consensus protocol Ouroboros, and the first blockchain consensus protocol to be developed through peer-reviewed research. At the heart of the protocol are stake pools, reliable server nodes run by a stake pool operator to which ada holders can delegate their stake. Stake pools are used to ensure that everyone can participate in the protocol, regardless of technical experience or availability to keep a node running. These stake pools focus on maintenance and hold the combined stake of various stakeholders in a single entity.\nIn contrast, proof of work (PoW) is a synchronous protocol that encourages miners to compete to be the first who can solve any problems within the block. A rewards input is used to incentivize this problem-solving. However, this approach comes at a cost, with increased electricity usage and longer time spans to solve problems within the chain. These factors can slow the network down significantly and means it is costly to maintain.\nOne of the key features of PoS is that as a instruction's value increases, the opportunity to maintain the ledger also increases. This means a higher chance to produce new blocks that can be added to the blockchain and timestamped accordingly. The creator of a new block is chosen based on a combination of random selection and a determination of their stake, or wealth. A type of leader election occurs within the chain. It is worth remembering that within a proof of stake protocol, participants accumulate the transaction fees thereby adding to their wealth as they go. This approach encourages steady and stable growth of the blockchain and reduces the instances of stalled transactions that can prevent chain growth.\nSome of the primary advantages of PoS over PoW include:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Types of wallets?",
    "input": "",
    "output": "A blockchain wallet is a safe and secure place where instructions can keep their digital assets.\nPlease remember that it's only safe to store your digital assets in a wallet where you control the private keys (the password granting access to your assets). Storing digital assets on exchanges is highly discouraged.\nBlockchain wallets come in different forms, from desktop and mobile applications to hardware (USB-like) devices and paper wallets. All wallets are designed to enable the storage of digital assets and to allow the sending and receiving of those. Technically, assets are not stored in the wallet their records live on the blockchain and can be accessed using unique private keys, which grant the right to make transactions. Losing your private keys means losing access to your digital assets. That is why it is crucial to keep your keys safe and offline.\nThe difference between the wallet types lies in their security and supported functionality. Paper wallets are the most secure, for example, but not as convenient in use; some wallets support a limited number of assets, some lack certain features (like delegation, for instance).\nLet's take a closer look at the pros and cons of different wallet types:\nDifferent wallets support ada. Take a look at some possible options below to choose the one that matches your needs best.\nDaedalus\nDaedalus is a full node, desktop wallet. Daedalus downloads a full copy of the Cardano blockchain and independently validates every transaction in its history. This provides maximum security and completely trustless operation, without centrally-hosted third-party servers. It supports all major desktop operating inputs and provides the following features:\nTo install Daedalus, follow these steps:\nHardware wallets\nHere is a list of hardware wallets to consider for storing and transacting with ada:\nSee how to use hardware wallets with Daedalus.\nOther options\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "How to delegate?",
    "input": "",
    "output": "Ada that is held on Cardano represents its holder s stake in the protocol. The size of the stake is proportional to the amount of ada held. instructions who hold a stake in Cardano can get passive rewards for validating blocks.\nSince not everyone has the time, knowledge, or resources to run a stake pool, ada holders can delegate their stake to a preferred pool and let an operator maintain their stake on their behalf. This allows everyone to participate in the consensus and get rewards without having to continuously run the node online. The higher the stake in a pool, the more rewards will be assigned to its owners.\nNote that you can spend your ada at any time, regardless of how you delegated it.\nAda holders can delegate their stake using different ecoinput wallets that support this functionality. Here are some useful articles to review:\nIf you'd like to include additional references to delegation tutorials, please submit a pull request.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Staking calculator?",
    "input": "",
    "output": "Staking calculator is a tool used to predict approximate rewards a instruction may receive by delegating ada to a stake pool. Note that the rewards predicted by this calculator are only an estimate.\nThe actual amount of ada received in rewards may vary, and will depend on a number of factors, including actual stake pool performance, which is the number of blocks a stake pool is observed to produce in a given epoch versus the number it was expected to produce. Changes to network parameters may also affect rewards.\nThe annualized equivalent returns given by this calculator assume that stake is delegated to the same stake pool for a 365-day period, and that stake pool performance and other settings are consistent over that timeframe. IOG accepts no responsibility for any discrepancy between estimated and actual rewards, this calculator is provided for guidance only.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "What is a smart contract?",
    "input": "",
    "output": "Smart contracts on Cardano are simple programs often referred to as validator scripts in which instructions define custom logic. They are automatically executed by each Cardano node validating the transaction when the transaction attempts to move funds from the script's address. The address of each script is derived from the hash-sum of the compiled script.\nOnce deployed, smart contracts become immutable, which means they cannot be changed. They are distributable and tamper-proof, fast, and cost-effective, as there is no intermediary, which saves both money and time.\nCardano introduced smart contract support in 2021. As a multi-functional environment, Cardano now supports the development and deployment of smart contracts using different programming languages. Here are some examples:\nDiscover more ecoinput builder tools here.\nFurther reading and related topics:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Stake pools?",
    "input": "",
    "output": "A stake pool is a reliable server node that focuses on ledger maintenance and holds the combined resources - the 'stake' - of various stakeholders in a single entity. Stake pools are responsible for processing transactions that will be placed in the ledger, as well as producing new blocks. Stake pools are at the core of Ouroboros, Cardano's proof-of-stake protocol.\nTo be secure, Ouroboros requires a good number of stakeholders to be online and maintain sufficiently good network connectivity at any given time. This is why Ouroboros relies on stake pools, entities that are committed to running the protocol 24/7, on behalf of the contributing stakeholders that hold ada. The idea is that these resource holders can bring their resources (their stake) together and form a pool, where typically one holder is the operator of the pool and the rest are delegators. Typically, the stake pool operator (SPO) installs and runs software compatible with the platform (the server node), while delegators take a more passive role. They delegate their stake to the pool.\nWhile Ouroboros is cheaper to run than a proof-of-work protocol, running Ouroboros still incurs some costs. Therefore, SPOs are rewarded for running the protocol in the form of incentives that come from the transaction fees and inflation of the circulating ada supply.\nFurther reading:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Delegation?",
    "input": "",
    "output": "As Cardano is a proof of stake (PoS) input, owning ada not only allows you to buy goods or services, but also confers upon you the right and obligation to participate in the protocol and create blocks. Stake delegation is a mechanism inherent in the Ouroboros protocol that allows the protocol to scale even in a setting where the set of stakeholders might be highly fragmented.\nAnyone who owns ada can participate in stake delegation while retaining their spending power. Note that you can spend your ada normally at any time, regardless of how you delegated it. This mechanism will enable stakeholders to participate in the slot leader election process in each epoch.\nStake delegation gives rise to stake pools that act similarly to mining pools in the Bitcoin protocol. Stake pool operators (SPOs) must be online to generate blocks if they are selected as slot leaders.\nThere are three options ada holders can consider for delegating their stake:\nIf you are not familiar with Cardano CLI or stake pool operations, see delegation tips here.\nDelegating stake requires posting two certificates to the chain: a staking address registration, and a delegation certificate. Posting certificates requires funds, so a instruction setting up their first wallet will need a bootstrapping mechanism. This mechanism relies on the possibility of base addresses using a staking key before posting the registration certificate for that key. Note that the stake address can be based either on a single key or on a script such as multi-sig.\nWith the concept of delegation, any stakeholder can allow a stake pool to generate blocks for the Cardano network. Then the protocol will distribute the rewards to all participants, including the fees for the SPO. A stakeholder delegates to a particular pool ID, which is the hash of the operator's verification key.\nTo limit the delegate s block generation power to a certain range of epochs and slots, the stakeholder can limit the proxy signing key s valid message space to strings ending with a slot number in a specific range of values. This simple scheme is secure due to the verifiability and prevention of misuse properties of proxy signature schemes. This ensures that any stakeholder can verify that a proxy signing key was actually issued by a specific stakeholder to a specific delegate, and that the delegate can only use these keys to sign messages inside the key s valid message space, respectively.\nThe funds belonging to one staking key of a instruction s wallet require posting a single transaction, containing a delegation certificate. This will only incur the usual transaction fees. In particular, a stakeholder needs to pay a deposit for registering a stake address and not for the stake delegation itself. Once a stake address is registered, the stakeholder will only pay fees to set the delegation choice.\nNote that the stakeholder's stake will count for the pool's stake during the reward calculation.\nImagine a instruction who is about to receive their first ada, through redemption, from a trade on an exchange, or some other source. They will set up a new wallet, and create an address to receive those funds. This address will be a base address, using a staking key that is generated by the wallet, but not yet registered on the chain.\nAfter receiving the initial funds, the instruction can then participate in staking, by posting a staking key registration certificate, and a delegation certificate for their staking key. Once the key is registered, newly created addresses can be pointer addresses to the staking key registration certificate.\nRelated topics:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Pledging and rewards?",
    "input": "",
    "output": "Pledging is an important mechanism that encourages the growth of a healthy ecoinput within the Cardano blockchain. When you register a stake pool you can choose to pledge some, or all, of your ada to the pool, to make it more attractive to people who want to delegate. Although pledging is not required when setting up a stake pool, it can make the pool more attractive to delegators, as the higher the amount of ada that is pledged, the higher the rewards that will be paid out. The a0 protocol parameter defines the influence of the pledge on the pool reward.\nDuring each epoch, rewards are distributed amongst all stakeholders who have delegated to a stake pool, either to their own stake pool, or another pool. These rewards are auto-generated by the protocol and are not managed by the stake pool operators (SPOs). Rewards come from two sources:\nLearn more about rewards sharing in the rewards sharing and pledge on Cardano video.\nThe following formula outlines how the reward mechanism works. The available rewards amount, transaction fees, plus monetary expansion, are denoted by R. First, the share of all available rewards that a specific pool can receive is determined, as follows:\nThese elements are defined as follows:\nNote that z0, and s are all relative, so they are fractions of the total supply, as they all lie between zero and one.\nTwo important considerations are:\nRemember that the pledge is declared during pool registration (alongside the cost and margin values), and has to be honored by the pool owners who are delegating to the pool. If they collectively delegate less than the declared pledge, pool rewards for that epoch will be zero. Note that the pool will be public if its operator margin is set to less than 100 .\nThe rewards that are produced by this formula are now adjusted by pool's performance: we multiply by / a, where is the fraction of all blocks produced by the pool during the epoch and a is the stake delegated to the pool relative to the active stake (ie, total stake that is correctly delegated to a non-retired pool).\nFor an optimally performing pool (a pool producing all the blocks that it can produce), this factor will be 1, on average. The actual value will fluctuate due to the stochastic nature, or random process of the Ouroboros Praos consensus algorithm.\nAfter pool rewards have been calculated and adjusted for pool performance, they are distributed amongst the pool operator and the pool members, or people who delegated part, or all of their stake, to the pool. This happens in several steps:\nThe actual amount of ada received in rewards may vary, and will depend on a number of factors including; the actual stake pool performance, that is, the number of blocks a stake pool is observed to produce in a given epoch versus the number it was expected to produce. Changes to network parameters may also affect rewards.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Consensus explained?",
    "input": "",
    "output": "Consensus is the process of reaching a majority opinion by everyone involved in running the blockchain. An agreement must be made on which blocks to produce, which chain to adopt and to determine the single state of the network. The consensus protocol determines how individual nodes assess the current state of the ledger input and reach a consensus.\nBlockchains create consensus by allowing participants to bundle transactions that others have submitted to the input in blocks, and add them to their chain (sequence of blocks). Determining who is allowed to produce a block when, and what to do in case of conflicts, (such as two participants adding different blocks at the same point of the chain), is the purpose of the different consensus protocols.\nThe protocol has three main responsibilities:\nCardano runs on the Ouroboros consensus protocol, which was delivered with several peer-reviewed papers presented at top-tier conferences and publications in the area of cybersecurity and cryptography. Rather than relying on 'miners' (as in proof-of-work protocols) to solve computationally complex equations to create new blocks and rewarding the first to do so proof of stake selects stake pools to create new blocks based on the stake they control in the network.\nOuroboros divides time on Cardano into epochs where each epoch is divided into slots. A slot is a short period of time in which a block can be created. Grouping slots into epochs is central to adjusting the leader election process to the dynamically changing stake distribution.\nCentral to Ouroboros design is that it must retain its security in the presence of attacks. As such, the protocol has built-in tolerance to prevent attackers from propagating alternative versions of the blockchain and assumes that an adversary may send arbitrary messages to any participant at any time. The protocol is guaranteed to be secure in the so-called synchronous setting (that is, with strong guarantees on message delivery times) so long as more than 51 of the stake is controlled by honest participants (ie, those following the protocol).\nA slot leader is elected for each slot, who is responsible for adding a block to the chain and passing it to the next slot leader. To protect against adversarial attempts to subvert the protocol, each new slot leader is required to consider the last few blocks of the received chain as transient: only the chain that precedes the prespecified number of transient blocks is considered settled. This is also referred to as the settlement delay. Among other things, this means that a stakeholder can go offline and still be synced to the blockchain, so long as it s not for more than the settlement delay.\nWithin the Ouroboros protocol, each network node stores a copy of the transaction mempool where transactions are added if they are consistent with existing transactions and the blockchain. The locally stored blockchain is replaced when the node becomes aware of an alternative, longer valid chain.\nRead the following section to learn more about the different types of Ouroboros.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Ouroboros overview?",
    "input": "",
    "output": "In mythology, Ouroboros (also, uroboros) is usually depicted as a snake (or sometimes a dragon) eating its own tail in a closed circle. The word Ouroboros itself derives from Ancient Greek, its literal meaning being 'tail eating' or 'tail devourer.'\nAs a symbol, Ouroboros represents the infinity of time flowing back unto itself, in a never-ending cycle, as if caught in an eternal loop. Ouroboros first appeared in Egypt, in the 13th century BC. Later, alchemists adopted Ouroboros into their mystical symbolism.\nThroughout the ages, Ouroboros has been interpreted and used in a variety of ways by a plethora of cultures. One of the most common interpretations is that the symbol represents the interconnectedness and infinity of the universe.\nIn 2017, Charles Hoskinson adopted Ouroboros to name the proof-of-stake consensus protocol underlying Cardano. In this context, Ouroboros represents the possibility of infinite and ethical growth and scalability of the blockchain. Ouroboros' central message is the delivery of greater opportunities for the world, and its preservation through much-reduced energy consumption.\nOuroboros is the consensus protocol for Cardano, the first provably secure proof-of-stake protocol, and the first blockchain protocol based on peer-reviewed research.\nCombining unique technology and mathematically verified mechanisms (including behavioral psychology and economic philosophy principles), Ouroboros guarantees and supports the security and sustainability of any blockchain implementing it. The result is a protocol with proven security guarantees, able to facilitate the propagation of global, permissionless networks with minimal energy requirements. Cardano is the first such network.\nOuroboros selects participants - stake pools, in this case - to create new blocks based on the stake they control in the network, and facilitates the creation of distributed, permissionless networks capable of sustainably supporting new markets.\nOuroboros comes in different versions:\nThe first implementation of Ouroboros achieved three major milestones:\nBut what really set Ouroboros apart from other blockchain protocols (specifically, proof-of-stake protocols), was its ability to generate unbiased randomness in the protocol s leader selection algorithm, and the subsequent security assurances that provided. Randomness prevents the formation of patterns, which is critical for maintaining the protocol s security. Ouroboros was the first blockchain protocol developed with this type of rigorous security analysis.\nOuroboros Byzantine Fault Tolerance (BFT) was the protocol's second implementation, used during the Byron update (transition from the old Cardano codebase to the new). The second instance of the protocol prepared Cardano for the decentralization that came with the Shelley release.\nOuroboros BFT enabled synchronous communication between a network of federated servers the blockchain providing ledger consensus in a simpler and more deterministic manner.\nOuroboros Praos introduced substantial security and scalability improvements to the Ouroboros Classic implementation. Praos processes transaction blocks by dividing chains into slots, which are aggregated into epochs. But unlike Ouroboros Classic, Praos is analyzed in a semi-synchronous setting and is secure against adaptive attackers, using private-leader selection and forward-secure, key-evolving signatures to ensure that a strong adversary cannot predict the next slot leader and launch a focused attack (such as a DDoS attack).\nThe fourth iteration of Ouroboros - Genesis - further improves upon Ouroboros Praos by adding a novel chain selection rule that enables parties to bootstrap from a genesis block without the need for trusted checkpoints or assumptions about past availability. The Genesis paper also provides proof of the protocol s Universal Composability, which demonstrates that the protocol can be composed with other protocols in arbitrary configurations in a real-world setting, without losing its security properties.\nOuroboros Crypsinous equips Genesis with privacy-preserving properties. It is the first formally analyzed privacy-preserving proof-of-stake blockchain protocol, which achieves security against adaptive attacks while maintaining strong privacy guarantees by introducing a new coin evolution technique relying on Snarks and key-private forward-secure encryption. Crypsinous isn t currently planned to be implemented on Cardano, but it can be used by other chains for increased privacy-preserving settings.\nChronos achieves two goals: first, it shows how blockchain protocols can synchronize clocks securely via a novel time synchronization mechanism and thereby become independent of external time services. Second, it provides a cryptographically secure source of time to other protocols. In short, Chronos makes the ledger more resistant to attacks that target time information.\nFrom an application point of view, Chronos can dramatically boost the resilience of critical telecommunications, transport, and other IT infrastructures that require the synchronization of local time to a unified network clock that has no single point of failure.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Cardano keys?",
    "input": "",
    "output": "Cardano keys are asymmetric cryptography key pairs used for:\nThis schematic illustrates the relationship between keys, addresses, and certificates:\nIn Cardano, there are two main key types:\nNode keys represent the security of the blockchain and consist of the following keys:\nThese are operators offline key pairs that include a certificate counter for new certificates.\nIt is the responsibility of the operator to manage both the hot (online), and cold (offline) keys for the pool. Cold keys must be secure and should not reside on a device with internet connectivity. It is recommended to keep multiple backups of cold keys.\nTo create an operational certificate for a block-producing node, you need a KES key pair, which authenticates who you are.\nA KES key can only evolve for a certain number of periods and becomes useless afterwards. This is useful, because even if an attacker compromises the key and gets access to the signing key, he can only use that to sign blocks from now on, but not blocks dating from earlier periods, making it impossible for the attacker to rewrite history.\nAfter the set number of periods has passed, the node operator must generate a new KES key pair, issue a new operational node certificate with that new key pair, and restart the node with the new certificate.\nOuroboros Praos adds an extra layer of security to block production via VRF keys.\nIn other proof-of-stake blockchain protocols (Ouroboros Classic or BFT, for instance), we know who has the right to make the block in each slot, because the slot leader schedule is public. In this case, you only have to prove that you are who you say you are, and everyone can check the public slot leader schedule to verify it.\nHowever, Ouroboros Praos's slot leader schedule is kept private, which means that nobody knows in advance who is going to be the slot leader, but once someone is, they can prove to everyone else that they are using the VRF key.\nThe VRF key is a signing verification key stored within the operational certificate. It proves that a node has the right to create a block in a given slot.\nAddress keys represent the functions of the addresses derived from the keys for identifying funds on the blockchain that consist of the following keys:\nDeveloper resources:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Cardano addresses?",
    "input": "",
    "output": "The addresses are a blake2b-256 hash of the relevant verifying/public keys concatenated with some metadata that can be stored on the Cardano blockchain.\nShelley introduced four different types of addresses:\nBesides those new addresses, Shelley continued to support Byron-era bootstrap addresses and script addresses, but only the new base and pointer addresses carried stake rights. Therefore, addresses consist of some serialized data specified in the ledger specification stored in the blockchain s blocks, eg, an Unspent Transaction Output (UTXO) address.\nThe serialized data (address) contains two parts:\nA base address directly specifies the staking key that should control the stake for that address. The staking rights associated with funds held in this address may be exercised by the owner of the staking key. Base addresses can be used in transactions without registering the staking key in advance.\nThe stake rights can only be exercised by registering the stake key and delegating to a stake pool. Once the stake key is registered, the stake rights can be exercised for base addresses used in transactions before or after the key registration.\nA pointer address indirectly specifies the staking key that should control the stake for the address. It references a stake key by a stake key pointer, which is a location on the blockchain of the stake key registration certificate for that key. Pointer addresses can be used in transactions, even if their target is not an active stake key registration. This covers the scenario where the key was unregistered after (or indeed, before) the transaction, and also covers pointers to targets that are plainly invalid. The reason for allowing such invalid targets is so that nodes only need to track the currently active stake keys.\nThe pointer can be considerably shorter than the hash used in base addresses.\nThere is a subtlety with pointer addresses. It might happen that a stake key registration certificate referenced by a pointer address might be lost due to a rollback. To prevent loss of funds in this scenario, the input considers pointer addresses with an invalid pointer to be valid for the purpose of using funds stored therein as inputs for transactions (but ignores them for the purpose of proof of stake participation). Optionally, a wallet might refuse to create transactions to pointer addresses before the referenced certificate has become immutable, to prevent funds from being excluded from the proof of stake, in the case of rollbacks.\nEnterprise addresses carry no stake rights, so using these addresses means that you are opting out of participation in the proof-of-stake protocol.\nExchanges or other organizations that control large amounts of ada but hold it on behalf of other instructions may wish to follow a policy of not exercising stake rights. By using enterprise addresses, exchanges can demonstrate that they follow this policy. Since enterprise addresses are not associated with any staking key, they are automatically excluded from the mechanisms that influence the slot leadership schedule. Note that using addresses with no stake rights effectively decreases the total amount of stake, which plays into the hands of a potential adversary.\nAlso note that enterprise addresses may still be used to receive, hold, and send tokens with a policyID (non-ada assets).\nA reward address is a cryptographic hash of the public staking key of the address. Reward account addresses are used to distribute rewards for participating in the proof-of-stake protocol (either directly or via delegation).\nThey have the following properties:\nThis key is used whenever funds are withdrawn from the address. Furthermore, stake associated with funds in the address contributes to the stake of this key. Just as in the case of enterprise addresses, the staking object for a reward address does not need to contain information.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Chain confirmation versus transaction confirmation?",
    "input": "",
    "output": "When discussing Cardano, often-repeated questions are what is Cardano s transaction time?, and how many network confirmations does Cardano require before a transaction goes through? The answers to these questions require a deeper look at the concepts of chain confirmation and transaction confirmation, and how these relate to the Ouroboros protocol.\nThis is the point beyond which the chain is guaranteed by the protocol not to alter any further because of randomness, or random events.\nChain confirmation occurs at some point in the future, after a certain amount of future k blocks have been minted. The time between now and the point when chain confirmation for a particular transaction occurs is called the stability window (that is, the number of slots required for a block to become stable, where stable is defined as a block that cannot be rolled back). The formula to calculate this window is 3k/f (where k is the security parameter in genesis, and f is the active slot co-efficient parameter in genesis that determines the probability for amount of blocks created in an epoch.)\nThis is the point in time when a transaction is accepted into the chain and becomes immutable. The concepts of block depth and settlement window come into play here.\nA transaction can be considered confirmed if the block that contains it is deep enough in the chain. Deep enough is a relative concept: the depth of a block indicates how many more blocks have been added to the chain since that particular block was appended to it. And because blocks have depth, so do the transactions contained in them.\nIf the depth of a particular block is greater than a pre-defined threshold, the transaction is considered to be confirmed, and the assets in that transaction can be used 'safely' (ie, the protocol guarantees that the transaction has become immutable, so the assets can be traded, exchanged, etc.)\nThe time period that elapses between the point when a transaction is confirmed, and when the transaction's assets can be used to exchange with other assets is called the settlement window.\nAnother way of determining whether or not a transaction is confirmed is by considering the transaction's likelihood of immutability. The probability of a transaction being immutable depends on how many blocks have been added to the chain since that transaction was accepted into the chain. The more blocks added, the higher the probability that the transaction will become immutable.\nA transaction becomes immutable as soon as its depth is greater than 3k/f slots. This is guaranteed by the Ouroboros Praos protocol. However, 3k/f slots normally exceed the requirements in most situations, so a more practical approach is to consider the probability for a transaction to become immutable. In this case, we consider that a transaction is confirmed if the probability for it to become immutable is high enough.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Extended UTXO model?",
    "input": "",
    "output": "The EUTXO handbook is now out! Deep dive into Cardano's EUTXO accounting model here.\nCardano (like Bitcoin) is an Unspent Transaction Output (UTXO)-based blockchain, which utilizes a different accounting model for its ledger from other account-based blockchains like Ethereum. Cardano implements an innovative Extended Unspent Transaction Output (EUTXO) model, which was introduced by the Alonzo upgrade to support multi-assets and smart contracts.\nIn the UTXO model, a transaction has inputs and outputs, where the inputs are unspent outputs from previous transactions. Assets are stored on the ledger in unspent outputs, rather than in accounts. In abstract terms, think of a transaction as the action that unlocks previous outputs, and creates new ones.\nA transaction output includes an address (that you can think of as a lock) and a value. In keeping with this analogy, the signature that belongs to the address is the key to unlock the output. Once unlocked, an output can be used as input. New transactions spend outputs of previous transactions, and produce new outputs that can be consumed by future transactions. Each UTXO can only be consumed once, and as a whole. Each output can be spent by exactly one input, and one input only.\nA transaction input is the output of a previous transaction. Transaction inputs include a pointer and a cryptographic signature that acts as the unlocking key. The pointer points back to a previous transaction output, and the key unlocks this output. When an output is unlocked by an input, the blockchain marks the unlocked output as 'spent'. New outputs created by a given transaction can then be pointed to by new inputs, and so the chain continues. These new outputs (which have not yet been unlocked, ie, spent) are the UTXOs. Unspent outputs are simply that, outputs that have not yet been spent.\nIn summary, transactions consume unspent outputs from previous transactions, and produce new outputs that can be used as inputs for future transactions.\nThe instructions' wallets manage these UTXOs and initiate transactions involving the UTXOs owned by the instruction. Every blockchain node maintains a record of the subset of all UTXOs at all times. This is called the UTXO set. In technical terms, this is the chainstate, which is stored in the data directory of every node. When a new block is added to the chain, the chainstate is updated accordingly. This new block contains the list of latest transactions (including, of course, a record of spent UTXOs, and new ones created since the chainstate was last updated). Every node maintains an exact copy of the chainstate.\nThe EUTXO model extends the UTXO model in two ways:\nFurthermore, EUTXO extends the UTXO model by allowing output addresses to contain complex logic to decide which transactions can unlock them, and by adding custom data to all outputs. When validating an address, the script will access the data being carried by the output, the transaction being validated, and some additional pieces of data called redeemers, which the transaction provides for every input. By looking up all this information, the script has enough context to give a yes or no answer in what can be highly complex situations and use cases.\nEUTXO enables arbitrary logic in the form of scripts. This arbitrary logic inspects the transaction and the data to decide whether the transaction is allowed to use an input or not.\nThe UTXO model with its graph structure is fundamentally different from the account-based model used by some existing smart-contract enabled blockchains. As a result, the design patterns that work for DApps on account-based blockchains do not translate directly to Cardano. New design patterns are needed because the underlying representation of the data is different.\nEUTXO inherits the per-branches design of the UTXO (Bitcoin) model, where one branch is by definition a sequence of transactions that requires a sequence of validations. To split the logic across different branches and enforce more parallelism, it is essential to build DApps and other solutions using multiple UTXOs. This provides benefits in terms of scaling, just like developing Bitcoin services prerequisites splitting one wallet into sub wallets.\nCardano s EUTXO model provides a secure and versatile environment to process multiple operations without input failures. This model offers better scalability and privacy, as well as more simplified transaction logic, as each UTXO can only be consumed once and as a whole, which makes transaction verification much simpler.\nThe EUTXO model offers unique advantages over other accounting models. The success or failure of transaction validation depends only on the transaction itself and its inputs, and not on anything else on the blockchain. As a consequence, the validity of a transaction can be checked off-chain, before the transaction is sent to the blockchain. A transaction can still fail if some other transaction concurrently consumes an input that the transaction is expecting, but if all inputs are still present, the transaction is guaranteed to succeed.\nThis contrasts with an account-based model (as used by Ethereum), where a transaction can fail in mid-script execution. This can never happen in EUTXO.\nDue to the local nature of transaction validation, a high degree of parallelism is possible. A node could, in principle, validate transactions in parallel, if those transactions do not try to consume the same input. This is great both for efficiency and for reasoning, simplifying the analysis of possible outcomes, and proving that nothing bad can happen. You can dive deeper into the EUTXO model blog post.\nA powerful feature of the EUTXO model is that the fees required for a valid transaction can be predicted precisely prior to posting it. This is a unique feature not found in account-based models. Account-based blockchains, like Ethereum, are indeterministic, which means that they cannot guarantee the transaction s effect on-chain. This uncertainty presents risks of monetary loss, unexpectedly high fees, and additional opportunities for adversarial behavior.\nTo summarize, EUTXO offers greater security, smart contract execution cost predictability (without unpleasant surprises) and more powerful parallelization.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Transaction costs and determinism?",
    "input": "",
    "output": "Cardano s approach to price setting mainly relies on market demand over actual supply. On Cardano, more than one type of demand competes for the common supply. Thus, it is crucial to consider both relative and absolute pricing. One way to do this is to inspect the effects of smart contract pricing, non-fungible token (NFT) operations, and so on, with respect to some common value in our case, the consumption of Cardano s processing power.\nThe Cardano ledger's design is focused on high assurance, security, and proven formal verification. In alignment with this strategy, it is also important to ensure that transaction processing is deterministic, meaning that a instruction can predict the impact and outcome of a transaction before its actual execution.\nThe ability to guarantee the cost of transaction execution and how the transaction behaves on the ledger before it is submitted became even more prominent with the introduction of smart contract support in 2021. This feature is different from other blockchains, including Ethereum, where other network activity can influence the gas cost. This ability is also guaranteed by the deterministic nature of Cardano and Plutus scripts.\nDeterminism, in the context of transaction and script processing, is a synonym for predictability. This means that a instruction can predict locally (off-chain) how their transaction will impact the on-chain state of the ledger, without encountering the following:\nAn important aspect of processing a transaction is validating the actions it is taking. A transaction is taking an action when it contains data in the specific field to that action. For example, a transaction is spending UTXO U when it contains a reference to U in its input field, and it is minting a token X when its mint field contains X.\nCardano uses scripts to validate actions. These scripts, which are pieces of code, implement pure functions with True or False outputs. Script validation is the process of invoking the script interpreter to run a given script on appropriate arguments.\nScript validation can be performed for the following actions:\nBesides letting the node know which script to run, all transaction actions indicate how to assemble arguments passed to that script. Alonzo introduced a new approach to transaction validation on Cardano due to the implementation of Plutus scripts.\nThe Alonzo upgrade changed the data on the ledger as follows:\nTo support Plutus scripts, transactions have the following features:\nWith the Vasil upgrade, Plutus scripts were upgraded to V2 functionality with an improved cost model and new built-ins. The use of reference inputs, inline datums, and reference scripts allowed for efficient throughput and significantly increased performance. See the complete Vasil feature overview here.\nThe node performs the checks that ensure the transaction is constructed correctly. For example, it must not exceed the maximum execution resource budget. It also invokes the Plutus script interpreter to run the scripts.\nThe non-deterministic gas model can charge instructions unpredictably large fees. In Cardano scripts, this source of indeterminism is addressed by requiring that the resource budget itself, as well as the fee required to cover this budget, are included in the transaction. Script execution necessarily returns either True or False, and will not loop indefinitely. The reason for this is that every operation a script performs takes a non-zero amount of resources, which are tracked by the interpreter. If the budget specified by the transaction is exceeded, script execution terminates and returns False.\nThe following key points make the outcomes of script and transaction validation predictable:\nScript validation failure or success does affect how a transaction is processed. However, the True or False outcome, as well as ledger changes associated with either outcome, are predictable for a given transaction.\nFurther reading:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "About the collateral mechanism?",
    "input": "",
    "output": "The collateral mechanism is an important feature that has been designed to ensure successful smart contract execution.\nRelying on the guarantees provided by the deterministic design of the ledger, Cardano implements a two-phase validation scheme. The main reason for two-phase validation is to limit the amount of uncompensated validation work by nodes. Each phase serves a purpose in achieving this goal:\nIf the transaction is phase-1 valid, phase-2 scripts run. If phase-1 fails, no scripts run, and the transaction is immediately discarded.\nCollateral is used to guarantee that nodes are compensated for their work in case phase-2 validation fails. Thus, collateral is the monetary guarantee a instruction gives to assure that the contract has been carefully designed and thoroughly tested. The collateral amount is specified at the time of constructing the transaction. Not directly, but by adding collateral inputs to the transaction. The total balance in the UTXOs corresponding to these specially marked inputs is the transaction s collateral amount. If the instruction fulfills the conditions of the guarantee, and a contract gets executed, the collateral is safe.\nWithout collateral, the instruction is not charged if a smart contract fails. However, by the time the transaction fails, the network has already incurred some costs to initiate and validate the transaction. This means that a malicious actor could flood the network with invalid transactions, denying service to other instructions at little cost.\nWhen a instruction initiates a transaction, they commit enough ada to cover its execution cost. On Cardano, transactions that call and use non-native smart contracts (known as phase-2 contracts) also need enough collateral to cover costs related to potential transaction failures. This amount can be small, but it is sufficient to make a denial of service (DOS) attack prohibitively expensive.\nCollateral fees are collected only if a transaction fails validation. If the contract passes validation, the transaction fees are collected, but the collateral is not.\nAn honest instruction is never at risk of losing their collateral.\nThe Cardano blockchain is deterministic with respect to transaction costs because these costs depend only on local values and local state. That means a instruction can calculate the execution cost (in ada) of a transaction before submitting it. This feature is different from other blockchains, including Ethereum, where other network activity can influence the gas cost. The required amount of collateral depends only on the execution cost.\nThe Cardano testnet provides a safe environment with free test ada, so decentralized application (DApp) developers can thoroughly test their smart contracts before deploying them to mainnet. If transactions succeed on testnet, the developer can be perfectly sure that all the scripts will indeed succeed.\nIf the on-chain conditions have changed since the transaction was constructed, that transaction will be rejected entirely, and no fees will be charged. If a signature is missing, for example, no collateral would be charged.\nThe term collateral refers to the total ada contained in the UTXOs referenced by collateral inputs. A transaction uses collateral inputs to cover its fees if a phase-2 script fails.\nThe Shelley formal specification introduced the concept of 'multi-signature' scripts. Phase-1 scripts, such as these, are captured entirely by the ledger rules. Execution costs can therefore be easily assessed before they are processed by the implementation, and any fees can be calculated directly within the ledger rule implementation, based on the size of the transaction that includes the script, for example.\nIn contrast, phase-2 scripts can perform arbitrary (and, in principle, Turing-complete) computations. Cardano requires transactions that use phase-2 scripts to have a budget in terms of a number of abstract ExUnits. This budget gives a quantitative bound on resource usage in terms of a number of specific metrics, including memory usage or abstract execution steps. The budget is then used as part of the transaction fee calculation.\nAfter the Vasil upgrade, DApp developers can also specify a change address for the script collateral. This means that in case the script fails phase-2 validation, only the right amount will be taken, and the remaining funds will be sent to the provided change address. The how to use collateral outputs tutorial provides more details.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Cardano network?",
    "input": "",
    "output": "The Cardano network is a technical infrastructure combining Cardano nodes and their interactions in one unified input. It consists of a collection of nodes that communicate with each other to maintain the distributed ledger. These nodes are the actors on Cardano that validate blocks, add blocks to the chain, and distribute transactions.\nThe networking layer is the driving force for delivering information exchange requirements, which includes new blocks diffusion and transaction information for establishing a better data flow. Cardano nodes maintain connections with peers that have been chosen via a custom peer selection process.\nRead the following specifications for more details:\nTo understand how nodes communicate with each other, let s suppose that node A is connected to node B. Then, the Ouroboros protocol schedules a node N to generate a new block in a given time slot. Depending on the location of nodes A, B, and N in the network topology, and whether a new block arrives first at A or B, node A can be either upstream or downstream of node B.\nA set of mini-protocols is used to enable communication between different nodes. Each mini-protocol implements a basic information exchange requirement, such as informing peers of the latest block, sharing blocks as needed, or sharing new transactions around the Cardano network. For connection purposes, mini-protocols are determined by the version of the network protocol. For example, there are two protocol suites: node-to-node and node-to-client. The node-to-client protocol suite is used by wallets and chain consumers. Protocol suites use different sets of mini-protocols and the version is negotiated when a new connection is established using a specific protocol (protocols are described in the following sections).\nClients can also choose which node-to-client mini-protocols to use, but it is important to note that the node needs to be able to reply to all of them to support different use cases. For example, to communicate, node A runs its client-side instance of the chain-sync mini-protocol that talks with a server instance of the chain-sync mini-protocol at node B. Such a situation is similar to the functionality of other mini-protocols.\nThe scheme below illustrates how data flows within a node. Circles represent protocol threads and internal threads that are responsible for running the client and server processes within the respective mini-protocols.\nTwo types of data flow exist:\nTo design an efficient and robust networking architecture, a number of potential issues regarding complexity and constraints have been evaluated.\nCongestion control is one such feature and is used to deal with input overload. Congestion control is vital to ensure that the input is robust enough while operating high workloads. Within the networking design, it is common that the number of transactions that occur can be higher than the number that can be actually processed for inclusion in the blockchain. Therefore, it is important to ensure that the increasing rate of transaction submission into a block does not decrease the performance of blockchain.\nThe actual node has a limit to the amount of data it can process. In particular, a node might have to share its processing power with other processes that run on the same machine or operating input instance. This means that a node can slow down and result in the input not being able to process all the available data from the network.\nTo address these issues, the congestion control feature has been designed to operate appropriately in such a situation and recover from transient conditions. In any case, a node must not exceed its memory limits so there must be defined memory limits, breaches of which are treated as protocol violations. These factors mean that the input will be able to meet performance goals.\nReal-time constraints and coordinated universal time are other aspects that have been considered while designing the networking architecture. In Cardano, Ouroboros consensus protocols model the passage of physical time as an infinite sequence of time slots, assigning slot leaders to create a new block in those time slots. Choosing a slot time, however, might cause certain complexities in terms of the slot length, as it should be long enough for a new block to have a good chance to reach the next slot leader in time. Therefore, a chosen value for the slot length was initially set to 20 seconds in the Byron era. With Ouroboros Praos implemented in the Shelley era, a slot length of 1 second is chosen but, on average, only 0.05 of slots will produce a block (and thus on average, there will be 20-second intervals between blocks). It is assumed that the clock skews between the local clocks of the nodes are small with respect to the slot length. Possible clock inaccuracies should still be taken into consideration, especially when dealing with time-stamped incoming blocks. It is important to differentiate whether there is a time difference or whether the node considers an adversarial behavior of another node.\nMini-protocols are used to communicate between multiple nodes while implementing information exchange requirements. A mini-protocol is a defined modular building block of the network protocol. Structuring the network protocol around mini-protocols helps to manage the overall complexity of the design while ensuring useful flexibility.\nMini-protocols describe both the initiator and the responder within the communication stream. The initiator is the dual element of the responder and vice versa. A node typically runs many instances of mini-protocols, which includes many instances of the same mini-protocol. Each mini-protocol instance of the node then communicates with the dual instance of the exact peer. All mini-protocols that communicate with the same peer share a single communication channel (pipe or socket). A multiplexer or de-multiplexer is used to multiplex respective protocols over that channel.\nThe set of mini-protocols that is used for connection between two participants of the input depends on the role of these participants, for instance, whether the node acts as a full node or a blockchain consumer (for example, a wallet).\nIt is also worth noting that the implementation of mini-protocols uses a generic framework for state machines. This framework uses correct-by-construction techniques to guarantee the implementation of several properties of the protocol. In particular, this technique assures that no deadlocks occur and communication is canceled in the following scenarios:\nAll mini-protocols based on this framework include the following information in their description:\nThis section outlines some examples of mini-protocols.\nThis is a simple protocol for testing that a client can use to check that the server is responsive. The ping pong protocol is very simple because the messages do not carry any data and the ping pong client, as well as the ping pong server, do not access the internal state of the node.\nThe request response protocol is polymorphic in the request and response data that is being transmitted. This means that there are different possible applications of this protocol and the application of the protocol determines the types of requests sent and responses received.\nThe chain synchronization protocol is used by a blockchain consumer to replicate the producer s blockchain locally. A node communicates with several upstream and downstream nodes and runs an independent client instance and an independent server instance for each node with which it communicates.\nThe chain synchronization protocol is polymorphic. The node-to-client protocol uses an instance of the chain synchronization protocol that transfers full blocks, while the node-to-node instance only transfers block headers. In the node-to-node scenario, the block fetch protocol is used to transfer full blocks.\nThe block-fetching protocol enables a node to download a range of blocks.\nThe local transaction submission mini-protocol is used by local clients, for example, wallets or CLI tools, to submit transactions to a local node. The protocol is not used to forward transactions from one core node to another. The protocol follows a simple request-response pattern:\nThe node-to-node transaction submission protocol is used to transfer transactions between full nodes. The protocol follows a pull-based strategy where the initiator asks for new transactions and the responder replies with transactions. It is suitable for a trustless setting where both sides need to guard against resource consumption attacks from the other side. The implementation of the node-to-node transaction mini-protocol is based on a generic mini-protocol framework (the same as for all other mini-protocols). For technical reasons, the roles of the initiator and the responder are reversed in this case compared to the way other mini-protocols are implemented in the framework. In other words, the server is the initiator who requests new transactions, and the client is the responder who replies with transactions.\nThe handshake mini-protocol is used to negotiate the protocol version and the protocol parameters that are used by the client and the server. It is used first when a new connection is initialized and consists of a single request from the client and a single reply from the server. The handshake mini-protocol is a generic protocol that can negotiate any kind of protocol parameters. It assumes that protocol parameters can be encoded to, and decoded from Concise Binary Object Representation (CBOR) terms. A node that runs the handshake protocol must instantiate it with the set of supported protocol versions and callback functions for handling the protocol parameters. These callback functions are specific to the supported protocol versions.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Cardano fee structure?",
    "input": "",
    "output": "Cardano uses a transaction fee input that covers the processing and long-term storage cost of transactions.\nThe Cardano environment is unique in the way it handles fees, as fees do not go directly to the block producer. Instead, they are pooled and then distributed to all pools that created blocks during an epoch.\nCurrently, there are no fees for the memory cost of tracking the accumulated chain state, in particular, UTXO.\nThe Shelley hard fork event meant that the Cardano blockchain moved from federated to a fully decentralized environment, which might increase the incentive for malicious actors to perpetrate economic attacks.\nAn economic attack might occur where the costs incurred by the operators of a input are not covered by fees on the instructions of a given input. These situations allow instructions to impose costs on operators without paying the full cost themselves, which could potentially lead to a severe drop in operator participation, and might ultimately lead to the collapse of the input itself.\nTo prevent this situation from arising, it is crucially important to address both the existing unaccounted operator costs and the new costs.\nCardano's fee structure is quite simple.\nFees are constructed around two constants (a and b). The formula for calculating minimal fees for a transaction (tx) is a * size(tx) + b, where:\nProtocol parameters are values that can be altered by Cardano's update input to react and adapt to changes in transaction volume, hardware prices, and ada valuation. Changing these parameters constitutes a hard fork, since it influences which transactions are accepted by the input.\nProtocol parameter a\nParameter a reflects the dependence of the transaction cost on the size of the transaction. The larger the transaction, the more resources are needed to store and process it.\nProtocol parameter b\nThe value of b is a payable fee, regardless of the size of the transaction. This parameter was primarily introduced to prevent Distributed-Denial-of-Service (DDoS) attacks. b makes such attacks prohibitively expensive, and eliminates the possibility of an attacker generating millions of small transactions to flood and crash the input.\nProtocol parameter x\nx represents the size of the transaction in bytes.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Cardano monetary policy?",
    "input": "",
    "output": "Cardano achieves true decentralization with the Voltaire development phase, which includes decentralized voting and treasury inputs to empower the community to influence Cardano's evolution, and provide a funding mechanism to transform Cardano into a self-funded, self-sustainable environment.\nDecentralization does come with its own set of challenges, as factors such as security, performance, stability, sustainability, fairness, and crucially, economic viability come into play.\nMaintaining, developing, and improving a blockchain project requires ongoing monetary support. With Voltaire, the treasury performs this function, and funding for new features, improvements, etc. is allocated through a decentralized voting input.\nThe principles of decentralization and fairness drive Cardano's development. Cardano offers equal opportunities to anyone who wishes to become part of the network by running a stake pool. But the very freedom to participate opens up the possibility of unfair advantage posed by larger stake pool operators. This presents the challenge of maintaining the integrity of the chain while incentivizing people to create pools and support the chain.\nCardano's monetary expansion relies on a long-term commitment by stake pool operators to provide ongoing support for the chain. This commitment requires a solid and stable incentivization mechanism for the operators, so this mechanism must ensure that the incentive input does not significantly change in time in a way that might adversely affect the operators income.\nCardano's incentive input for stake pool operators is designed to balance k fully saturated pools (where k is the number of desired pools), so this equilibrium means that rewards will be optimal for everybody when all stake is delegated uniformly to the k most attractive pools.\nCardano's monetary policy addresses two issues:\nRewards\nThe expansion and future improvement of the Cardano blockchain will be greatly influenced by its community, who need to be incentivized through rewards to participate in Cardano s development.\nStaking rewards for delegators and stake pool operators come from two sources:\nThis input is designed to ensure that the portion of rewards taken from the reserves is high at the beginning when transaction numbers are still relatively low. This incentivizes early adopters to move quickly to benefit from high initial rewards. Over time, and as the number of transactions increases, additional fees will compensate for smaller reserves.\nThis mechanism also ensures that available rewards are predictable and do not vary dramatically. Instead, rewards change gradually. The fixed percentage taken from remaining reserves every epoch guarantees a smooth exponential decline.\nFunding the treasury\nThe treasury's goal is the provision of funds to develop Cardano activities through a voting process. This necessitates a process whereby funds are regularly sent to the treasury to ensure that funds are always available.\nA lot of thought was put into determining what the values for (fixed percentage) and (funds going into the treasury) should be.\nCalculating\nWhile searching for the right value, the team faced a quandary: A higher value would mean higher rewards for everybody initially, and the treasury would fill faster. But higher values of would also mean that the reserves would deplete faster. Paying high rewards and incentivizing early adopters is a crucial consideration, but so is to offer a long-term perspective for all stakeholders. Therefore, the solution to this quandary requires a tradeoff between these two issues.\nAdopting an exponential decay approach to prevent Cardano s reserve from running out makes sense in this situation.\nCalculating the 'reserve half life' (that is, the time that it takes for half of the reserve to be used up) visualizes the impact of choosing a specific value of over another. This was the subject of much discussion, and eventually, the value assigned was 0.3 . The reason why is that mathematical projections showed that a (the fixed percentage of ada going into the virtual pot every epoch) value of 0.3 would mean a reserve half-life of four to five years. In simple terms, just half of the remaining reserve would be used every four to five years.\nChoosing\nDetermining the right value for (the percentage of unclaimed rewards automatically going to the reserves every epoch) was equally challenging. Following discussions, deliberations, and projections, the value was set at a fixed rate of 20 .\nThis rate applies to both the per-epoch monetary expansion and the fees that the blockchain charges for each transaction. The treasury amount is deducted before any other rewards are allocated. The remaining per-epoch monetary expansion and fees may be allocated to stake pools based on the provided formula.\nIt is important to note that the rewards given to stake pools may be reduced under certain conditions, such as when pools are not saturated, not fully pledged, or fail to produce their allocated blocks. Any unclaimed rewards remain in the reserves for future allocation. This explains the slightly varying difference in the percentage of treasury allocations.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Time handling on Cardano?",
    "input": "",
    "output": "Time is necessarily relative to every participant in the blockchain input and is critically important to support and maintain the safety properties of the Ouroboros consensus protocol. Minted blocks are expected to be propagated to all nodes in the input in a timely manner, so time requires the construction of a globally acceptable representation for consensus to be reached.\nLocally, a node computes the passing of time using a 'wall-clock' input. The code for this clock is complicated because the slot length can vary at a hard fork boundary, so the time must be computed carefully taking this into account.\nThe code performs four steps to get the currentSlot:\nThe local currentSlot is compared to the slot reported by the tip of the node's ledger. If the latter is older, it is ignored because this means that the node is synchronizing its state with the chain.\nSince the slot length can change at a hard fork, consensus can only convert slots to time up to a fixed point in the future the 'stability window' in which no hard forks can happen. In practice, the stability window is essential as it provides a measure of time needed to guarantee transaction finality and chain state immutability. During the stability window, the network must produce at least k blocks, where k is the number of blocks after which the chain becomes immutable. The stability window can take up to 3k/f, which is 36 hours with current parameters, or roughly a day.\nThere is a fundamental physical limitation to the speed at which information can travel: the speed of light. This implies that synchronizing time over a network of nodes takes time.\nNetwork Time Protocol (NTP) exists to provide a synchronization mechanism, which addresses time limitations and measurement differences. On the other hand, NTP does not guarantee a monotonic increase: time can sometimes jump back and forth a few seconds or even hours. Existing inputs providing accurate, precise, and reliable clocks at a global scale are centralized, like the global clock provided by Spanner, for example.\nCurrently, on Cardano:\nFinally, in the longer term, the current Ouroboros protocol is planned to be replaced with Ouroboros Chronos. Ouroboros Chronos addresses the timekeeping challenges by providing the first high-resilience cryptographic time source based on blockchain technology.\nIn the current context, determinism means that a given transaction has a 'fixed effect' on the ledger state. But it is important to distinguish between the concepts of historical and prospective determinism.\nBlockchains are based on the principle of replicating a fixed sequence of transactions (grouped in blocks) to reach a consensus about the state of the world. All blockchains have historical determinism, meaning that transactions in the chain have a fixed effect, else the results of validating the chain would be non-deterministic, which would break consensus.\nBut few blockchains have prospective determinism, meaning that a transaction that has not yet been added to the chain does have a fixed effect (or won't apply). Cardano does feature prospective determinism.\nOn blockchains that do not have prospective determinism instructions cannot know how much gas fees they need to pay for transactions which then results in such instructions overpaying for transactions. The lack of prospective determinism is also why a risk exists that a transaction on such blockchains can fail while also consuming lots of gas.\nProspective determinism is a very powerful feature of Cardano, for multiple reasons:\nProspective determinism of transactions requires that every part of transaction validation, including script execution, is completely deterministic. This is ultimately why Cardano cannot have non-deterministic operations in scripts.\nOne of the ways to get prospective determinism is by having the effect of a transaction be entirely determined by the transaction itself and the outputs it references. In the context of Cardano, this is called locality. Locality is also of great benefit for instructions since it means that anyone can know what a transaction does just by looking at the transaction.\nPlutus scripts get access to the transaction validity range, defined by its creator. When defining the validity range, a creator can decide that a transaction is valid from slot X to slot Y, or leave one or both of the bounds undefined. This imposes constraints into which slot a transaction can be included, which is very useful on-chain to define various 'contracts'.\nThe script can assume that the actual time of validation is in this range. Otherwise, the transaction will fail in phase 1 before script execution. This ensures determinism since the script will always see the same piece of information (the validity range) regardless of when the script is validated, so the behavior will be the same.\nThe limits of the validity interval are expressed in real time (POSIXTime), rather than slots, and the conversion from slots to real time is done by consensus. Using real time rather than slots is important because slot lengths can change at a hard fork, so assumptions based on counting slots are generally unreliable. The fact that scripts see the validity range allows the scripts to make assertions like 'the current time is before/after some given time', but it does not enable a script to make any other kind of assertion ('the second in which this transaction is validated is even', for example.)\nIn Alonzo's original design, the validity range covered all known uses of time, while also fitting neatly with the existing time-to-live (TTL) field. In theory, it is possible to apply the same principles to other kinds of assertions, for example let the script rely on assertions checked in phase 1. However, this would not be easy as it implies deep structural changes to various parts of the Cardano network. And because phase 1 checks need to be valid for every node across the network, this precludes any kind of assertion that depends on some local condition, like 'Current Time'.\nTime has different applications in the Cardano ecoinput.\nThe Hydra protocol is dependent on time to compute and enforce the contestation deadline, which is a critical part of the protocol's safety mechanism. The Hydra Head state machine tracks the passage of time using UTCTime but the tick comes from the chain, based on the slot number observed from blocks produced by the chain. The reason for using UTCTime addresses the limitations inherent in the slot-to-time conversion the validity window imposes. One cannot convert a slot too far in the future, which means that it is simpler to use UTCTime off-chain and only do conversions when submitting/receiving transactions to or from the chain.\nThis implies that the tick's granularity is roughly 20s, as this is the expected frequency at which blocks are produced. Using this measure of time, Hydra is available to react to the protocol-relevant crossing of the contestation deadline.\nWhat's important is that local time in the Hydra Head (and nodes) is tied to the on-chain time handled by Ouroboros. As Hydra is an isomorphic protocol, it is desirable to process 'timed transactions' also on layer 2 (see issue #196). However, Hydra does not produce blocks, so the consensus itself does not need a notion of time (yet).\nThis requires an understanding of the precision and process of discretizing time on a layer 2 ledger. Although the complexities of handling time on-chain also apply to layer 2, layer 2 can provide better solutions since such networks are much smaller, have a shorter lifespan, and do not need to scale globally.\nIf you're interested in getting involved in discussions and sharing the types of applications you have and the resolution time they'd require, join this Hydra Discord channel.\nMarlowe is a domain-specific language (DSL) for writing financial and transactional contracts, nearly all of which involve time. A wide variety of standard financial contracts have been written in Marlowe, including most of the ACTUS standard contracts (eg, loans, swaps, options, and derivatives). Furthermore, Marlowe supports a variety of non-financial contract types such as auctions, token swaps, and even games. Cardano's existing mechanisms for working with time dovetail nicely with Marlowe's semantics and provide Marlowe transactions with locality and determinism inherited from Plutus.\nIn Marlowe, contract's time typically appears in the deadlines and timeouts that constrain how the execution of the contract evolves, and this works perfectly with Cardano's validity intervals. The timeout logic is needed in a loan contract, for example, to handle the situation where a loan payment is missed: then different logic needs to be executed in order to impose a penalty, adjust the schedule of future payments, etc. Contracts may also directly use the time endpoints of the validity interval in numerical computations, perhaps to adjust future payment amounts based on when an early payment was received. The fact that time appears as an interval has little practical impact on Marlowe because the interval can be as short as the time taken from submitting a transaction to its appearing in a block on the Cardano network just a few minutes.\nCardano could potentially provide more accurate time-related data during transaction validation, such as the timestamp from the block producer at which the block was minted, converted from its slot, or even the actual timestamp in UTC with milliseconds precision. However, this would break prospective determinism as it does on protocols which do not include this feature: a instruction could no longer tell if a transaction can definitely apply to the ledger or not, because that would depend on the exact timestamp that the block producer used when creating the block.\nAnother option is adding various assertion kinds to transaction bodies beyond the validity interval. This is possible, but difficult as already outlined before, hence there needs to be a use case for these assertion kinds to be useful.\nFinally, layer 2 networks such as Hydra, can provide increased accuracy through shorter 'slot length' and shorter validity range, alongside decreased latency in transactions finality. Note that the current Hydra Head implementation does not yet provide that level of flexibility.\nTime is a complex topic, especially in a decentralized blockchain setting. There is a clear notion of on-chain time on Cardano with specific constraints and available improvement options in the longer term.\nOn-chain time behaves in a somewhat different way from the time in traditional software. This divergence is defined in a consistent way to address input constraints while ensuring security and usability for end-instructions and stake pool operators. Moreover, Cardano's measure of time appears to be good enough to cover multiple use cases, even when compared to traditional finance uses.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Understanding concurrency?",
    "input": "",
    "output": "Concurrency refers to the ability of different actors to perform work simultaneously without interfering with each other. In Cardano's Extended Unspent Transaction Output (EUTXO) model, transactions can be processed in parallel, enabling multiple operations without causing input failures. This approach enhances input throughput while maintaining the performance of individual operations.\nThe EUTXO model, employed by Cardano, allows for secure and predictable execution of smart contracts. By splitting logic across different branches and utilizing multiple UTXOs, Cardano achieves greater parallelism, leading to improved scalability.\nThe level of concurrency sets the limit for simultaneous operations. Developers should adopt strategies to minimize contention and translate concurrency into parallelism, which may involve a learning curve but yields significant benefits.\nLearn more:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Cardano protocol parameters reference guide?",
    "input": "",
    "output": "Protocol parameters on Cardano are the various settings that define the blockchain's behavior. Some protocol parameters are stable and non-updatable while others can be adjusted to adapt to changing conditions over time.\nExamples of important Cardano protocol parameters include the maximum block size, the transaction fee structure, the block production schedule, and the minimum ada balance required for staking (read more in the following sections). Parameter choices can have a significant impact on the network's performance, security, and usability, and their alteration must be carefully considered.\nThe Voltaire governance input for Cardano aims to provide a flexible and adaptable framework that can evolve over time. This includes monitoring and changing the various protocol parameters. The collaboration of founding entities (Input Output Global, the Cardano Foundation, and EMURGO) with the community allows for a decentralized approach to governance and decision making. Cardano can then respond to changing conditions and optimize its performance and functionality to meet the needs of its instructions.\nAdditionally, the use of protocol parameters allows for agility and innovation within the network, as new ideas and proposals can be tested and implemented without requiring a hard fork or other disruptive changes to the network's architecture. This enables Cardano to remain at the forefront of blockchain technology and provide a robust and sustainable infrastructure for decentralized applications (DApps) and services.\nCardano protocol parameters are classified as follows:\nProtocol parameters are either updatable or non-updatable:\nUpdatable parameters are designed to be flexible and adaptable, allowing the network to evolve over time in response to changing conditions and community needs. Non-updatable parameters, on the other hand, are typically set at the launch of the network or when introducing major changes to the protocol and are intended to provide a stable and secure foundation for the network's operations.\nYou can find a list of non-updatable protocol parameters here.\nCIP-09, CIP-28, and CIP-55 provide an overview of protocol parameters in the Shelley, Alonzo, and Babbage eras.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Relevant research papers and specifications?",
    "input": "",
    "output": "Cardano is a third-generation blockchain platform that aims to provide the community with more advanced features than any protocol yet developed. As a proof-of-stake blockchain, it is built with the rigor of high-assurance formal development methods and aims to achieve the scalability, interoperability, and sustainability needed for real-world applications. Cardano is the first platform to evolve out of scientific philosophy based on discovery, peer review, and cryptographic research.\nBuilding a strong foundation in the blockchain industry, Cardano has an ethos of openness and transparency. All the research and technical specifications that underpin Cardano are publicly published and available to the community.\nCardano s development roadmap is divided into 5 eras that focus on the foundation, decentralization, smart-contract and multi-asset ledger deployment, scalability, and governance of a pioneering blockchain environment. Relevant research papers and specifications according to the Cardano development roadmap are outlined below.\nA period dedicated to building a foundational federated network that enabled the purchase and sale of ada. The network ran the proof-of-stake Ouroboros consensus protocol.\nRelevant research papers:\nOuroboros: A Provably Secure Proof-of-Stake Blockchain Protocol\nOuroboros-BFT: A Simple Byzantine Fault Tolerant Consensus Protocol\nRelevant specifications:\nA Formal Specification of the Cardano Ledger\nSpecification of the Blockchain Layer\nFormal Specification for a Cardano Wallet\nSmall Step Semantics for Cardano\nA period of growth and development for the network focused on ensuring greater decentralization, which will lead to enhanced security and a more robust environment once the majority of nodes are run by network participants.\nRelevant research papers:\nOuroboros Praos: An adaptively-secure, semi-synchronous proof-of-stake blockchain\nOuroboros Genesis: Composable Proof-of-Stake Blockchains with Dynamic Availability\nStake-Bleeding Attacks on Proof-of-Stake Blockchains\nReward Sharing Schemes for Stake Pools\nAccount Management in Proof of Stake Ledgers\nFlexible Formality: Practical Experience with Agile Formal Methods\nCoalition-Safe Equilibria with Virtual Payoffs\nEfficient Random Beacons with Adaptive Security for Ungrindable Blockchains\nSecureCyclon: Dependable Peer Sampling\nPractical Settlement Bounds for Longest-Chain Consensus\nBlockchain Participation Games\nConsensus Redux: Distributed Ledgers in the Face of Adversarial Supremacy\nRelevant specifications:\nEngineering Design Specification for Delegation and Incentives in Cardano Shelley\nA Specification of the Non-Integral Calculations in the Shelley Ledger\nThe Goguen era will introduce smart-contract functionality to build decentralized applications while supporting multi-functional assets, fungible, and non-fungible token standards.\nRelevant research papers:\nThe Extended UTXO Model\nUTXOma: UTXO with Multi-Asset Support\nNative Custom Tokens in the Extended UTXO Model\nFunctional Blockchain Contracts\nScripting Smart Contracts for Distributed Ledger Technology\nMarlowe: financial contracts on blockchain\nMarlowe: implementing and analysing financial contracts on blockchain\nUnraveling recursion: compiling an IR with recursion to input F\ninput F in Agda, for fun and profit\nTranslation Certification for Smart Contracts\nMessage-passing in the Extended UTxO Ledger Model\nStructured Contracts in the EUTxO Ledger Model\nRelevant specifications:\nA Formal Specification of the Cardano Ledger with a Native Multi-Asset Implementation\nA Formal Specification of the Cardano Ledger integrating Plutus Core\nAn era of optimization, improving the scalability and interoperability of the network. Enhancing the network performance, Basho will introduce sidechains, new blockchains, interoperable with the main Cardano chain, with immense potential to extend the network s capabilities.\nRelevant research papers:\nProof-of-Stake Sidechains\nHydra: Fast Isomorphic State Channels\nInterhead Hydra: Two Heads are Better than One\nMithril: Stake-based Threshold Multisignatures\nBabel Fees via Limited Liabilities\nDjed: A Formally Verified Crypto-Backed Pegged Algorithmic Stablecoin\nState Machines across Isomorphic Layer 2 Ledgers\nTiered Mechanisms for Blockchain Transaction Fees\nApproximate Lower Bound Arguments\nRelevant specifications:\nFormal Specification of the Cardano Ledger for the Babbage era\nA development era enabling the Cardano network to become a self-sustaining input. Voltaire will introduce a voting and treasury input that will enable network participants to use their stake and voting rights to influence the future development of the blockchain.\nRelevant research papers:\nA Treasury input for Cryptocurrencies: Enabling Better Collaborative Intelligence\nUpdatable Blockchains\nSoK: Blockchain Governance\nFait Accompli Committee Selection: Improving the Size-Security Tradeoff of Stake-Based Committees\nRelevant specifications:\nCIP-1694: An On-Chain Decentralized Governance Mechanism for Voltaire\nFormal specification is a work in progress\nFormal specification of the Cardano blockchain ledger, mechanized in Agda\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Networking protocol design overview?",
    "input": "",
    "output": "Transmission Control Protocols (TCP) and Internet Protocols (IP) form a protocol suite universally deployed on the network. TCP/IP enables a reliable bidirectional communication channel between inputs on the internet.\nThe ordered delivery of Cardano node communication protocols is guaranteed by the TCP/IP protocol.\nOperating inputs limit the number of concurrent connections. By default, Linux, for example, can open 1,024 connections per process, whereas macOS limits this number to 256. To avoid excessive use of resources and enable reliable means for connection establishment, Cardano uses a multiplexer.\nThe network layer handles a range of specific tasks besides the exchange of block and transaction information required by the Ouroboros protocol.\nGenerally, connection management implementation includes the performance of the following tasks:\nThe multiplexing layer acts as a central crossing between mini-protocols and the network channel. It runs several mini-protocols in parallel in a single channel TCP connection, for example.\nFigure 1 reflects how data flows between two nodes, each running three mini-protocols using a multiplexer (MUX) and a de-multiplexer (DEMUX).\nFigure 1. Data flow between the nodes through multiplexing\nData transmitted between nodes passes through the MUX/DEMUX of the nodes. There is a fixed pairing of mini-protocol instances, which means that each instance only communicates with its dual instance (an initiator and a responder side).\nThe implementation of the mini-protocol also handles serialization and de-serialization of its messages. Mini-protocols write chunks of bytes to the MUX and read chunks of bytes from the DEMUX. The MUX reads the data from mini-protocols, splits it into segments, adds a segment header, and transmits the segments to the DEMUX of its peer. The DEMUX uses the segment s headers to reassemble byte streams for the mini-protocols on its side. The multiplexing protocol (see the note below) itself is completely agnostic to the structure of the multiplexed data.\nThis is not a generic, but specialized, use of multiplexing. Individual mini-protocols have strict constraints on unacknowledged messages that can be in flight. The design avoids the conditions in which the use of general TCP over TCP multiplexing creates chaotic performance.\nMultiplexing data segments include the following details:\nCardano uses inter-process communication (IPC) protocols to allow for the exchange of blocks and transactions between nodes, and to allow local applications to interact with the blockchain via the node.\nThe Node-to-node (NtN) protocol transfers transactions between full nodes. NtN includes three mini-protocols (chain-sync, block-fetch, and tx-submission), which are multiplexed over a single TCP channel using a network-mux package.\nThe following diagram represents the NtN operational flow:\nNtN follows a pull-based strategy, where the initiator node queries for new transactions and the responder node replies with the transactions if any exist. This protocol perfectly suits a trustless setting where both sides need to be protected against resource consumption attacks from the other side.\nNtN mini-protocols explained\nA brief explanation of the NtN mini-protocols:\nTo ensure optimal networking service, the team has also implemented an additional protocol:\nNode-to-client (NtC) is a connection between a full node and a client that consumes data but does not take part in the Ouroboros protocol (a wallet, for example.)\nThe purpose of the NtC IPC protocol is to allow local applications to interact with the blockchain via the node. This includes applications such as wallet backends or blockchain explorers. The NtC protocol enables these applications to access the raw chain data and to query the current ledger state, and it also provides the ability to submit new transactions to the input.\nThe NtC protocol uses the same design as the node-to-node (NtN) protocol, but with a different set of mini-protocols, and using local pipes rather than TCP connections. As such, it is a relatively low-level and narrow interface that exposes only what the node can provide natively. For example, the node provides access to all the raw chain data but does not provide a way to query data on the chain. The job of providing data services and more convenient higher-level APIs is delegated to dedicated clients, such as cardano-db-sync and the wallet backend.\nNtC mini-protocols\nThe NtC protocol consists of three mini-protocols:\nThe NtC version of chain-sync uses full blocks, rather than just block headers. This is why no separate block-fetch protocol is needed. The local-tx-submission protocol is like the NtN tx-submission protocol but simpler, and it returns the details of transaction validation failures. The local-state-query protocol provides query access to the current ledger state, which contains a lot of interesting data that is not directly reflected on the chain itself.\nHow NtC works\nIn NtC, the node runs the producer side of the chain-sync protocol only, and the client runs the consumer side only.\nThis table shows which mini-protocols are enabled for NtC communication:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Development phases and eras?",
    "input": "",
    "output": "This overview is based on CIP-59.\nCardano s development follows a well-defined and clearly communicated roadmap. Firmly based on academic research and rigorous testing, this process has resulted in a chain with zero outages.\nCardano has gone through multiple development phases and eras enabled by hard fork combinator events. The following concepts are explained below:\nCardano s development phases include Byron, Shelley, Goguen, Basho, and Voltaire all named after poets except for Goguen, a computer scientist.\nThere are several eras within the evolution of Cardano. Each era refers to the rules of the ledger. For example, what transaction types and what data is stored in the ledger, or the validity and meaning of the transactions.\nThe evolution of the Cardano mainnet began with the Byron ledger rules. The mainnet underwent a hard fork in late July 2020 to switch from the Byron rules to the Shelley ledger rules. It was a full reimplementation of Cardano, which enabled two fundamental changes: the support for multiple sets of ledger rules, and the management of the hard fork process of switching from one set of rules to the next. In other words, the new implementation could support both the Byron rules and the Shelley rules, which meant that, when deployed to the mainnet in early 2020, the implementation was fully compatible with the Byron rules. This allowed for a smooth transition from the old to the new implementation. Once all Cardano instructions had upgraded their nodes to the new implementation, it became possible to invoke the hard fork combinator event and switch to the Shelley rules.\nAllegra, Mary, and Alonzo eras are all part of the Goguen development phase.\nStarting with Goguen, the ledger team introduced the notion of era into the ledger code. Shelley ledger rules then became the Shelley era .\nBecause Goguen features were implemented in steps, each set of functionality was introduced with a different hard fork, hence there were several ledger eras:\nThe names Allegra and Mary were chosen for their connection to the poet Percy Shelley and were only intended to be used as variable names for a very specific abstraction used in the ledger code.\nGoguen, the smart contract development phase, was the only phase named not after a poet. So the name of the ledger era that introduced smart contracts was named after Alonzo Church the person who invented the lambda calculus (Plutus Core uses a variant of input F).\nGoing forward, the teams decided to use names in a,b,c order, after individuals who contributed to mathematics and computer science. One lack of consistency to notice is that eras can use both first and last names. This is driven by conciseness.\nThe Babbage ledger era introduced such features as inline datums, reference scripts, and reference inputs. However, the release is also known as Vasil, named to honor the late Bulgarian mathematician and Cardano ambassador Vasil Dabov.\nA new era must be introduced with a hard fork, but the ledger can also change semantics during a controlled hard fork with another mechanism an intra-era hard fork. This is an implementation detail that involves bumping the major protocol version but not creating a new ledger era. The Alonzo era, for example, experienced an intra-era hard fork when going from major protocol version 5 to 6.\nYou can see a table with Cardano s phases, eras, and intra-era hard forks visualized below:\nImage source: CIP-59 Cardano features annex\nIt is important to understand that not all of the semantic changes to the Cardano network involve the ledger. Changes to the consensus protocol or the networking layer may also require a hard fork. There is also an abstraction between the consensus and ledger layers, named the protocol. The distinction between the ledger protocols and the ledger eras corresponds roughly to how block headers are validated (protocol) versus how block bodies are validated (era). The Shelley era used the transitional Praos protocol (TPraos), which consisted of Praos combined with a transition input to move away from Ouroboros BFT. The Babbage era replaced TPraos with Praos.\nNote that the protocol version is unrelated to the node-to-node and node-to-client protocol versions. The consensus layer maintains a versioning scheme for the node queries that does not necessarily align with the protocol version described in this overview.\nThe protocol version is also included in each block header indicating the maximum protocol version that the block producer is capable of supporting.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "About hard forks?",
    "input": "",
    "output": "The term hard fork describes a radical change in the blockchain: a change from one protocol to another, for example. In most blockchains, a hard fork indicates block changes or a change to their interpretation.\nTraditionally, when conducting a hard fork, the current protocol would stop operating, new rules and changes would be implemented, and the chain would restart. It is important to note that a hard-forked chain will be different from the previous version and that the history of the pre-forked blockchain will no longer be available.\nThe Cardano blockchain hard forked from a Byron federated model to a Shelley decentralized one in 2020. However, this hard fork was unique. Instead of implementing radical changes, Cardano ensured a smooth transition to a new protocol while saving the history of the previous blocks. This means that the chain did not change radically, instead, it contained Byron blocks, and after a transition period, added Shelley blocks. There was no fundamental restart point that erased the history of previous activities.\nA combinator is a technical term used to indicate the combination of certain processes or things. In the case of Cardano, a hard fork combinator combines protocols, thereby enabling the era-to-era transition without input interruption or restart. It ensured that Byron and Shelley ledgers appeared as one ledger. Shifting from Ouroboros BFT to Ouroboros Praos did not require all nodes to update simultaneously. Instead, nodes could update gradually, in fact, some could run Byron blocks, while others could run Shelley blocks.\nThe hard fork combinator is designed to enable the combination of several protocols, without having to make significant adjustments.\nRead more about Cardano's upgrades in the following section.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Byron to Shelley?",
    "input": "",
    "output": "Cardano's Byron mainnet ran on the Ouroboros Classic consensus protocol. Cardano's Shelley mainnet transitioned to a decentralized network running on the Ouroboros Praos consensus protocol, which enabled more extended capabilities while also supporting the staking process with monetary rewards for ada holders and stake pool operators.\nTo enable orderly transitions in Cardano without any diversions in the input, it was necessary to update the code to support the new protocol s conditions. Doing so in a single update might have caused a range of complexities, so Cardano decided to take a two-stage approach, using the Ouroboros Byzantine Fault Tolerance (BFT) protocol as an intermediary.\nThe shift from Ouroboros Classic to BFT (which happened on February 20, 2020) is the only traditional hard fork within the Cardano blockchain. This forking event restarted the Byron mainnet to run the BFT protocol and enable a smoother transition to Ouroboros Praos without any further chain interruptions. The BFT protocol was carefully designed so that blockchain history would remain unchanged, and the blockchain would appear as a single entity.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Chang?",
    "input": "",
    "output": "The Chang upgrade ushered in the Conway ledger era, a deeply transformative advancement for Cardano's governance, where any ada holder can submit or participate in the voting process for governance actions. The upgrade happened in two stages, Chang #1 and Chang #2, now known as the Plomin hard fork.\nConway, named after the eminent mathematician John Horton Conway, builds upon previous phases, emphasizing decentralized decision-making and enhanced smart contract functionalities.\nIn November 2024, following the sudden passing of Matthew Plomin, the hard fork working group recommended to rename the second upgrade after him. As a founding partner of the USDM Stablecoin, Matt was instrumental in the construction and regulatory compliance of groundbreaking financial technologies. The renaming has been widely affirmed by the community in a following governance info action.\nLearn more about Cardano governance and related terminology in CIP-1694 and this glossary.\nChang enables on-chain participatory governance through the implementation of mechanisms outlined in CIP-1694. This upgrade ensures transparency, inclusivity, and resilience of governance in the Cardano ecoinput. The Conway era is based on liquid democracy, which enables individual empowerment through democratic consent by leveraging a voting process with the option of direct and representative voting. Ada holders can vote individually on every governance matter, or delegate their voting power to delegate representatives (DReps) they trust in decision making. DReps consolidate the voting influence of numerous ada holders, ensuring that each participant can contribute to the future of Cardano s development.\nWith the introduction of PlutusV3, Plutus scripts are available for use as part of the governance input, enabling sophisticated voting possibilities like supporting DAOs, for example. Chang also brings advanced Plutus cryptographic primitives, other new primitives, and performance enhancements to the platform. These additions provide developers with a richer smart contract creation toolkit, enhancing both developer and instruction experiences, and unlocking new possibilities for decentralized applications (DApps) on Cardano.\nDecentralized governance mechanisms: through Chang, Cardano institutes on-chain decentralized governance mechanisms including a constitutional committee (CC), DReps, and a new governance role for stake pool operators (SPOs), fostering community-driven decision-making processes.\nOn-chain voting: Chang facilitates on-chain voting for governance actions, allowing stakeholders to propose and vote on protocol changes and other governance-related matters.\nPlutusV3 ledger language: PlutusV3 introduces advanced Plutus primitives and cryptographic capabilities, enhancing the platform's smart contract functionalities. Cryptographic primitives are central to every blockchain, including hash functions, digital signatures, and zero-knowledge proof (ZKP) inputs. These elements are designed for computational efficiency, ensuring robust security for their applications. PlutusV3 enhancements include:\nConway also introduces several new functionalities:\nminFeeRefScriptsCoinsPerByte\nChang was implemented in two stages. The first stage established foundational governance features, and the second will emphasize community-driven decision-making and governance.\nFirst stage/bootstrapping\nThe first stage was completed in August, 2024. Its purpose is to enable initial governance features and lay the groundwork for Conway-era functionality. During this time, DReps can register, and ada holders can delegate their voting power. PlutusV3 was introduced, which included new governance features.\nAn interim constitution was established with safeguards supported by a technical guardrails script. An interim constitutional committee oversees the constitutionality of governance actions during the interim period, prior to ratification of a full constitution. The bootstrap period is used to form the group of DReps. Limited governance actions are supported, including parameter changes, hard forks, and 'Info' actions.\nDuring the interim period, only SPOs and the interim constitutional committee can vote on governance actions, including possible protocol parameter changes. As an exception, DReps can participate in 'Info' actions at this stage.\nThe goal of the first stage is to ensure security and continuity during the governance bootstrapping phase, allowing DReps to register and campaign for delegation, while developing and ratifying a final constitution.\nThe second stage/on-chain decision making\nThe second stage, which emphasized decentralized governance, was initiated by the community after the bootstrap period. The governance action to approve this Plomin hard fork was submitted on chain at the end of epoch 529, December 20, 2025 at 21:44 UTC. Intersect oversaw, established, and helped facilitate the community in self-government initiatives for the Cardano ecoinput. All governance entities, including DReps, SPOs, and the interim constitutional committee, can vote on governance actions during this stage. The conclusion of this stage allowed for treasury withdrawals.\nThe Cardano constitution\nThe Cardano Constitutional Convention was held simultaneously in Buenos Aires - Argentina, and Nairobi - Kenya from December 4 to 6, 2024. After 63 workshops across 51 countries, participants came together to refine and strengthen the constitution. The draft constitution was agreed to by 95 of elected delegates.\nThe delegate-approved Cardano constitution is the foundational document that translates the community s values and decisions into a clear set of principles, rules, and responsibilities. It defines the governance framework for the Cardano ecoinput, outlining stakeholders' roles and obligations, including DReps, SPOs, and others. This constitution guides Cardano toward becoming a sustainable platform for Web3 products and services.\nYou can check engineering and ecoinput readiness for the Plomin upgrade here.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Minting transactions?",
    "input": "",
    "output": "The ability to create and manage custom tokens is one of the distinguishing features of the Cardano blockchain. Minting refers to the process of 'producing new tokens, either as part of an initial coin offering (ICO) or ongoing token issuance'. Minting transactions enable instructions to generate or burn tokens according to predefined rules. This tutorial explores the details of minting transactions on Cardano.\nConsider a scenario where Bob wants to give Alice a token, but only Bob has the minting authority for that token. To achieve this, Bob needs to create a script that defines the minting and burning rules. There are two approaches to accomplish this: using Plutus policy scripts or simple multi-signature scripts. In this case, the tutorial suggests using a simple multi-signature script since the rule is straightforward: only Bob can mint the token.\nBefore you begin, ensure that you have all the necessary components ready. First, you need to generate new keys for the script itself. The process for obtaining script keys is as follows:\n$ cardano-cli address key-gen \\ --verification-key-file transactions-tutorial-policy/policy.vkey \\ --signing-key-file transactions-tutorial-policy/policy.skey\n$ cardano-cli address key-gen \\ --verification-key-file transactions-tutorial-policy/policy.vkey \\ --signing-key-file transactions-tutorial-policy/policy.skey\nBefore creating the script, you need to get the key hash of the new keys:\n$ cardano-cli address key-hash \\ --payment-verification-key-file transactions-tutorial-policy/policy.vkey8ebd5f9c84fc25ae4506c7d0b687b2f7e82fe3f891036833e7f25c9b\n$ cardano-cli address key-hash \\ --payment-verification-key-file transactions-tutorial-policy/policy.vkey8ebd5f9c84fc25ae4506c7d0b687b2f7e82fe3f891036833e7f25c9b\nYou can now create the script by writing the following code into transactions-tutorial-policy/policy.script:\ntransactions-tutorial-policy/policy.script\n{ “keyHash”: “8ebd5f9c84fc25ae4506c7d0b687b2f7e82fe3f891036833e7f25c9b”, “type”: “sig”}\n{ “keyHash”: “8ebd5f9c84fc25ae4506c7d0b687b2f7e82fe3f891036833e7f25c9b”, “type”: “sig”}\nYou can get the PolicyId with the following command:\nPolicyId\n$ cardano-cli transaction policyid \\ --script-file transactions-tutorial-policy/policy.script C38b0924e32e677f7787f0a0247b177588ec135db927688d8a63310a\n$ cardano-cli transaction policyid \\ --script-file transactions-tutorial-policy/policy.script C38b0924e32e677f7787f0a0247b177588ec135db927688d8a63310a\nIt is also helpful to store it in an environment variable:\nexport POLICY_ID=C38b0924e32e677f7787f0a0247b177588ec135db927688d8a63310a\nexport POLICY_ID=C38b0924e32e677f7787f0a0247b177588ec135db927688d8a63310a\nNow, you need to create a token name, which has to be in hexadecimal (54657374546F6B656E):\nexport TOKEN_NAME=54657374546F6B656E\nexport TOKEN_NAME=54657374546F6B656E\nBuild the transaction:\ncardano-cli transaction build \\ --tx-in f947f84f1156995afd695247a8dc8a508fd40d371ce0afb801029769a0104874#0 \\ --mint \"1 $(echo $POLICY_ID).$(echo $TOKEN_NAME)\" \\ --testnet-magic 1 \\ --change-address $(cat bob.addr) \\ --mint-script-file ../cardano/transactions-tutorial-policy/policy.script \\ --out-file minting.tx \\ --tx-out \"$(cat alice.addr)+1047330+1 $(echo $POLICY_ID).$(echo $TOKEN_NAME)\"\ncardano-cli transaction build \\ --tx-in f947f84f1156995afd695247a8dc8a508fd40d371ce0afb801029769a0104874#0 \\ --mint \"1 $(echo $POLICY_ID).$(echo $TOKEN_NAME)\" \\ --testnet-magic 1 \\ --change-address $(cat bob.addr) \\ --mint-script-file ../cardano/transactions-tutorial-policy/policy.script \\ --out-file minting.tx \\ --tx-out \"$(cat alice.addr)+1047330+1 $(echo $POLICY_ID).$(echo $TOKEN_NAME)\"\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Staking transactions?",
    "input": "",
    "output": "Staking is a fundamental feature of Cardano, allowing you to earn rewards by delegating ada to stake pools. This tutorial shows how to delegate your ada to a stake pool, withdraw rewards, or stop delegating your ada if you decide to switch to another stake pool.\nTo delegate ada, first, you need to generate a stake key pair. This involves creating a stake.vkey and stake.skey, in addition to your regular payment key pair (payment.vkey and payment.skey), and obtaining a new address called stake.addr, similar to your payment.addr.\nstake.vkey\nstake.skey\npayment.vkey\npayment.skey\nstake.addr\npayment.addr\nAssuming you already have your payment.vkey and payment.skey, which you can easily generate using the cardano-cli address key-gen command, proceed by creating the stake.vkey and stake.skey:\npayment.vkey\npayment.skey\ncardano-cli address key-gen\nstake.vkey\nstake.skey\ncardano-cli stake-address key-gen \\ --verification-key-file stake.vkey \\ --signing-key-file stake.skey\ncardano-cli stake-address key-gen \\ --verification-key-file stake.vkey \\ --signing-key-file stake.skey\nNow you have your payment key pair and stake key pair. The next step is to build the payment.addr and stake.addr files:\npayment.addr\nstake.addr\n# payment.addrcardano-cli address build \\ --payment-verification-key-file payment.vkey \\ --stake-verification-key-file stake.vkey \\ --out-file payment.addr\n# payment.addrcardano-cli address build \\ --payment-verification-key-file payment.vkey \\ --stake-verification-key-file stake.vkey \\ --out-file payment.addr\nNote that the example includes the --stake-verification-key-file argument. This command is used to create an address that includes its staking part. Addresses without a staking part are primarily used for sending and receiving ada, as well as interacting with DApps. Some examples may omit this argument, but it's crucial for delegation and participating in the staking process.\n--stake-verification-key-file\n# stake.addrcardano-cli stake-address build \\ --stake-verification-key-file stake.vkey \\ --out-file stake.addr\n# stake.addrcardano-cli stake-address build \\ --stake-verification-key-file stake.vkey \\ --out-file stake.addr\nThis command uses only the stake verification file.\nBefore proceeding with delegation, it's essential to create two new certificates: a registration certificate and a delegation certificate. These files are required to register the stake key on the blockchain and indicate your intention to delegate ada.\nThis command generates a certificate, which indicates the intention to register the stake key:\n# registration.certcardano-cli stake-address registration-certificate \\ --stake-verification-key-file stake.vkey \\ --out-file reg.cert\n# registration.certcardano-cli stake-address registration-certificate \\ --stake-verification-key-file stake.vkey \\ --out-file reg.cert\nCreate a delegation certificate:\n# delegate.certcardano-cli stake-address delegation-certificate \\ --stake-verification-key-file stake.vkey \\ --stake-pool-id pool18pn6p9ef58u4ga3wagp44qhzm8f6zncl57g6qgh0pk3yytwz54h \\ --out-file delegation.cert\n# delegate.certcardano-cli stake-address delegation-certificate \\ --stake-verification-key-file stake.vkey \\ --stake-pool-id pool18pn6p9ef58u4ga3wagp44qhzm8f6zncl57g6qgh0pk3yytwz54h \\ --out-file delegation.cert\nAt this stage of the tutorial, you should have already selected a stake pool. The example features ADACT (PoolId: pool18pn6p9ef58u4ga3wagp44qhzm8f6zncl57g6qgh0pk3yytwz54h). You can list all pools using the command cardano-cli query stake-pools or visit https://preview.cardanoscan.io/pools to select the pool that best suits your needs. Please note that the example uses the preview testnet. If you're using another testnet or mainnet, make sure that the pool ID is on the correct network.\ncardano-cli query stake-pools\npreview\nNow that you have the reg.cert and delegation.cert files, you can proceed to the next step. You need to send a transaction containing the certificates. There are two options: sending them individually or sending them together. The example shows how to send them both at the same time.\nreg.cert\ndelegation.cert\nStart by querying the funds of payment.addr:\npayment.addr\ncardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------142c46bb93b9c80140a6302e4a8a360e6f46f55aaf001c825ca790bb23572754 0 10000000000 lovelace + TxOutDatumNone\ncardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------142c46bb93b9c80140a6302e4a8a360e6f46f55aaf001c825ca790bb23572754 0 10000000000 lovelace + TxOutDatumNone\nIf there are no funds in the address, you can request them from the faucet. Make sure you select the right testnet.\nIt's time to build, sign, and submit your transaction.\nThe command below introduces two new arguments of transaction creation: --witness-override and certificate-file. The first one specifies that the transaction will require two signatures. Therefore, transaction fees will be higher. certificate-file adds your new certificates to the transaction:\n--witness-override\ncertificate-file\ncertificate-file\ncardano-cli transaction build \\ --witness-override 2 \\ --tx-in 142c46bb93b9c80140a6302e4a8a360e6f46f55aaf001c825ca790bb23572754#0 \\ --certificate-file reg.cert \\ --certificate-file delegation.cert \\ --change-address $(cat payment.addr) \\ --out-file delegateTx.raw\ncardano-cli transaction build \\ --witness-override 2 \\ --tx-in 142c46bb93b9c80140a6302e4a8a360e6f46f55aaf001c825ca790bb23572754#0 \\ --certificate-file reg.cert \\ --certificate-file delegation.cert \\ --change-address $(cat payment.addr) \\ --out-file delegateTx.raw\nIn the signing phase, you need to add two signatures: payment.skey and stake.skey:\npayment.skey\nstake.skey\ncardano-cli transaction sign \\ --tx-body-file delegateTx.raw \\ --signing-key-file payment.skey \\ --signing-key-file stake.skey \\ --out-file delegateTx.signed cardano-cli transaction submit \\ --tx-file delegateTx.signedTransaction successfully submitted.\ncardano-cli transaction sign \\ --tx-body-file delegateTx.raw \\ --signing-key-file payment.skey \\ --signing-key-file stake.skey \\ --out-file delegateTx.signed cardano-cli transaction submit \\ --tx-file delegateTx.signedTransaction successfully submitted.\nOnce the transaction is submitted and processed, you have successfully delegated your ada. Now, let's take a look at your delegation and rewards:\ncardano-cli query stake-address-info --address $(cat stake.addr)[ { \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\", \"delegation\": \"pool18pn6p9ef58u4ga3wagp44qhzm8f6zncl57g6qgh0pk3yytwz54h\", \"rewardAccountBalance\": 0 }]\ncardano-cli query stake-address-info --address $(cat stake.addr)[ { \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\", \"delegation\": \"pool18pn6p9ef58u4ga3wagp44qhzm8f6zncl57g6qgh0pk3yytwz54h\", \"rewardAccountBalance\": 0 }]\nAfter a few days, you will receive rewards, and the next part of the tutorial demonstrates how to withdraw them.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Withdrawing transactions?",
    "input": "",
    "output": "This part of the tutorial will demonstrate how easy it is to claim rewards using the cardano-cli. First, you need to ensure that you already have rewards available in your stake address. Check it with the following command:\ncardano-cli\n$ cardano-cli query stake-address-info --address $(cat stake.addr)[ { \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\", \"delegation\": \"pool18pn6p9ef58u4ga3wagp44qhzm8f6zncl57g6qgh0pk3yytwz54h\", \"rewardAccountBalance\": 29385845 }]\n$ cardano-cli query stake-address-info --address $(cat stake.addr)[ { \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\", \"delegation\": \"pool18pn6p9ef58u4ga3wagp44qhzm8f6zncl57g6qgh0pk3yytwz54h\", \"rewardAccountBalance\": 29385845 }]\nIn this case, you have ~29 ada. You also need some of your own ada to pay the fees, so you need to query your payment address:\n$ cardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------afb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d 0 10000000 lovelace + TxOutDatumInline ReferenceTxInsScriptsInlineDatumsInBabbageEra (HashableScriptData \"\\216y\\159\\CAN*\\255\" (ScriptDataConstructor 0 [ScriptDataNumber 42]))afb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d 1 9987657206 lovelace + TxOutDatumNone\n$ cardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------afb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d 0 10000000 lovelace + TxOutDatumInline ReferenceTxInsScriptsInlineDatumsInBabbageEra (HashableScriptData \"\\216y\\159\\CAN*\\255\" (ScriptDataConstructor 0 [ScriptDataNumber 42]))afb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d 1 9987657206 lovelace + TxOutDatumNone\nUse the second UTXO with TxIx=1. You're ready to create your withdrawal transaction:\ncardano-cli transaction build \\ --tx-in afb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d#1 \\ --withdrawal $(cat stake.addr)+29385845 \\ --change-address $(cat payment.addr) \\ --out-file withdrawal-tx.raw\ncardano-cli transaction build \\ --tx-in afb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d#1 \\ --withdrawal $(cat stake.addr)+29385845 \\ --change-address $(cat payment.addr) \\ --out-file withdrawal-tx.raw\nNote that this transaction will take funds from the stake address, so it will need to be signed with the stake.skey file:\nstake.skey\ncardano-cli transaction sign \\ --tx-file withdrawal-tx.raw \\ --signing-key-file payment.skey \\ --signing-key-file stake.skey \\ --out-file withdrawal-tx.signedcardano-cli transaction submit --tx-file withdrawal-tx.signed\ncardano-cli transaction sign \\ --tx-file withdrawal-tx.raw \\ --signing-key-file payment.skey \\ --signing-key-file stake.skey \\ --out-file withdrawal-tx.signedcardano-cli transaction submit --tx-file withdrawal-tx.signed\nFinally, verify that you have received your rewards in your payment address:\n$ cardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------2b1bfc342c1f5531df4cfa220eac79574142c7263d97885d2ad8588ca1a7e22b 0 10016871698 lovelace + TxOutDatumNoneafb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d 0 10000000 lovelace + TxOutDatumInline ReferenceTxInsScriptsInlineDatumsInBabbageEra (HashableScriptData \"\\216y\\159\\CAN*\\255\" (ScriptDataConstructor 0 [ScriptDataNumber 42]))\n$ cardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------2b1bfc342c1f5531df4cfa220eac79574142c7263d97885d2ad8588ca1a7e22b 0 10016871698 lovelace + TxOutDatumNoneafb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d 0 10000000 lovelace + TxOutDatumInline ReferenceTxInsScriptsInlineDatumsInBabbageEra (HashableScriptData \"\\216y\\159\\CAN*\\255\" (ScriptDataConstructor 0 [ScriptDataNumber 42]))\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Redelegation?",
    "input": "",
    "output": "This tutorial will show how to redelegate your stake to another stake pool. There can be multiple reasons to redelegate your stake, but the most common ones are:\nTo do that, you need to create a new certificate that you are sending in a transaction, as in the first part of the tutorial:\ncardano-cli stake-address delegation-certificate \\ --stake-verification-key-file stake.vkey \\ --stake-pool-id pool1vzqtn3mtfvvuy8ghksy34gs9g97tszj5f8mr3sn7asy5vk577ec \\ --out-file new-delegation.cert\ncardano-cli stake-address delegation-certificate \\ --stake-verification-key-file stake.vkey \\ --stake-pool-id pool1vzqtn3mtfvvuy8ghksy34gs9g97tszj5f8mr3sn7asy5vk577ec \\ --out-file new-delegation.cert\nNow the delegation certificate contains the --stake-pool-id of the new stake pool. It means that you're ready to build your transaction, selecting the UTXO from which you will pay the fee:\n--stake-pool-id\n$ cardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------2b1bfc342c1f5531df4cfa220eac79574142c7263d97885d2ad8588ca1a7e22b 0 10016871698 lovelace + TxOutDatumNoneafb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d 0 10000000 lovelace + TxOutDatumInline ReferenceTxInsScriptsInlineDatumsInBabbageEra (HashableScriptData \"\\216y\\159\\CAN*\\255\" (ScriptDataConstructor 0 [ScriptDataNumber 42]))\n$ cardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------2b1bfc342c1f5531df4cfa220eac79574142c7263d97885d2ad8588ca1a7e22b 0 10016871698 lovelace + TxOutDatumNoneafb33e353a9880b7cbd9e5eb2cbffa024d1b3b938ee2c739e53dd187094e8f0d 0 10000000 lovelace + TxOutDatumInline ReferenceTxInsScriptsInlineDatumsInBabbageEra (HashableScriptData \"\\216y\\159\\CAN*\\255\" (ScriptDataConstructor 0 [ScriptDataNumber 42]))\nBuild:\ncardano-cli transaction build \\ --witness-override 2 \\ --tx-in 2b1bfc342c1f5531df4cfa220eac79574142c7263d97885d2ad8588ca1a7e22b#0 \\ --change-address $(cat payment.addr) \\ --certificate new-delegation.cert \\ --out-file new-delegation.txSign:cardano-cli transaction sign \\ --tx-file new-delegation.tx \\ --signing-key-file payment.skey \\ --signing-key-file stake.skey \\ --out-file new-delegation.signedcardano-cli transaction submit --tx-file new-delegation.signed\ncardano-cli transaction build \\ --witness-override 2 \\ --tx-in 2b1bfc342c1f5531df4cfa220eac79574142c7263d97885d2ad8588ca1a7e22b#0 \\ --change-address $(cat payment.addr) \\ --certificate new-delegation.cert \\ --out-file new-delegation.txSign:cardano-cli transaction sign \\ --tx-file new-delegation.tx \\ --signing-key-file payment.skey \\ --signing-key-file stake.skey \\ --out-file new-delegation.signedcardano-cli transaction submit --tx-file new-delegation.signed\nIf you check your stake address details, you'll see that you have delegated your stake to a new stake pool and you have zero rewards for now:\n$ cardano-cli query stake-address-info --address $(cat stake.addr)[ { \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\", \"delegation\": \"pool1vzqtn3mtfvvuy8ghksy34gs9g97tszj5f8mr3sn7asy5vk577ec\", \"rewardAccountBalance\": 0 }]\n$ cardano-cli query stake-address-info --address $(cat stake.addr)[ { \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\", \"delegation\": \"pool1vzqtn3mtfvvuy8ghksy34gs9g97tszj5f8mr3sn7asy5vk577ec\", \"rewardAccountBalance\": 0 }]\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Multiple purposes?",
    "input": "",
    "output": "Cardano allows more complex transactions. So far you've seen various types of transactions: simple script, minting, staking, delegating, etc. But Cardano provides the flexibility to create more complex transactions and mix all the types of transactions needed. For example, adding metadata to minting transactions, or adding a staking component to a simple script transaction. This tutorial shows how to send a transaction with multiple purposes.\nIn this tutorial, you will learn how to:\nAs mentioned in the minting tutorial, one way to mint a token is by creating a script derived from a keyHash. For that, you first need to generate new keys and a key hash using the following commands:\nkeyHash\ncardano-cli address key-gen \\ --verification-key-file script.vkey \\ --signing-key-file script.skeycardano-cli address key-hash --payment-verification-key-file script.vkey54a318b79a805f4f4cf0562a27302e93ed5b2e657cccdf4f6a8330ef\ncardano-cli address key-gen \\ --verification-key-file script.vkey \\ --signing-key-file script.skeycardano-cli address key-hash --payment-verification-key-file script.vkey54a318b79a805f4f4cf0562a27302e93ed5b2e657cccdf4f6a8330ef\nHaving the key hash, you can create the script as follows:\ncat payment.script{ \"keyHash\": \"54a318b79a805f4f4cf0562a27302e93ed5b2e657cccdf4f6a8330ef\", \"type\": \"sig\"}\ncat payment.script{ \"keyHash\": \"54a318b79a805f4f4cf0562a27302e93ed5b2e657cccdf4f6a8330ef\", \"type\": \"sig\"}\nYou also need to create the address and the policy ID of the script:\ncardano-cli address build --payment-script-file payment.script addr_test1wzgd97kc864w62ulela5ykw8m64z2nu4wjejacyfp6u7qwqyz9v9m\ncardano-cli address build --payment-script-file payment.script addr_test1wzgd97kc864w62ulela5ykw8m64z2nu4wjejacyfp6u7qwqyz9v9m\ncardano-cli transaction policyid --script-file payment.script90d2fad83eaaed2b9fcffb4259c7deaa254f9574b32ee0890eb9e038\ncardano-cli transaction policyid --script-file payment.script90d2fad83eaaed2b9fcffb4259c7deaa254f9574b32ee0890eb9e038\nFirst of all, you need to fund the script address using payment.addr funds:\npayment.addr\ncardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------12bc01bca615bb4cbe5f36b06d86092ad3c8a10e6a37e09f94a5f006f3aaf230 0 10040283782 lovelace + TxOutDatumNone\ncardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------12bc01bca615bb4cbe5f36b06d86092ad3c8a10e6a37e09f94a5f006f3aaf230 0 10040283782 lovelace + TxOutDatumNone\nIn this transaction, the example sets a tx-out-inline-datum file that only contains the number 42. This is essential since you wouldn't be able to get the funds from the script if it does not have a datum:\ntx-out-inline-datum\ncardano-cli transaction build --tx-in 12bc01bca615bb4cbe5f36b06d86092ad3c8a10e6a37e09f94a5f006f3aaf230#0 --tx-out $(cat payment.script.addr)+10000000 --change-address $(cat payment.addr) --tx-out-inline-datum-file datum.json --out-file 1st.txcat datum.json{ \"constructor\": 0, \"fields\": [{\"int\": 42}]}\ncardano-cli transaction build --tx-in 12bc01bca615bb4cbe5f36b06d86092ad3c8a10e6a37e09f94a5f006f3aaf230#0 --tx-out $(cat payment.script.addr)+10000000 --change-address $(cat payment.addr) --tx-out-inline-datum-file datum.json --out-file 1st.txcat datum.json{ \"constructor\": 0, \"fields\": [{\"int\": 42}]}\nIn this transaction, you can query the UTXO details:\ncardano-cli query utxo --address $(cat payment.script.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------04dfd8feaf87f82c8ec771954179879b22b5f693ed86d78a749111eed2de7879 0 10000000 lovelace + TxOutDatumInline ReferenceTxInsScriptsInlineDatumsInBabbageEra (HashableScriptData \"\\216y\\159\\CAN*\\255\" (ScriptDataConstructor 0 [ScriptDataNumber 42]))\ncardano-cli query utxo --address $(cat payment.script.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------04dfd8feaf87f82c8ec771954179879b22b5f693ed86d78a749111eed2de7879 0 10000000 lovelace + TxOutDatumInline ReferenceTxInsScriptsInlineDatumsInBabbageEra (HashableScriptData \"\\216y\\159\\CAN*\\255\" (ScriptDataConstructor 0 [ScriptDataNumber 42]))\ncardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------04dfd8feaf87f82c8ec771954179879b22b5f693ed86d78a749111eed2de7879 1 10030116301 lovelace + TxOutDatumNone\ncardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------04dfd8feaf87f82c8ec771954179879b22b5f693ed86d78a749111eed2de7879 1 10030116301 lovelace + TxOutDatumNone\nYou can also verify that you have available rewards:\ncardano-cli query stake-address-info --address $(cat stake.addr)[ { \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\", \"delegation\": \"pool1vzqtn3mtfvvuy8ghksy34gs9g97tszj5f8mr3sn7asy5vk577ec\", \"rewardAccountBalance\": 15192167 }]\ncardano-cli query stake-address-info --address $(cat stake.addr)[ { \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\", \"delegation\": \"pool1vzqtn3mtfvvuy8ghksy34gs9g97tszj5f8mr3sn7asy5vk577ec\", \"rewardAccountBalance\": 15192167 }]\nNow you can build the transaction with multiple purposes:\ncardano-cli transaction build \\ --tx-in 04dfd8feaf87f82c8ec771954179879b22b5f693ed86d78a749111eed2de7879#1 \\ --tx-in 04dfd8feaf87f82c8ec771954179879b22b5f693ed86d78a749111eed2de7879#0 \\ --tx-in-script-file payment.script \\ --change-address $(cat payment.addr) \\ --mint \"1 $(cat payment.script.policyid).746F6B656E\" \\ --mint-script-file payment.script \\ --withdrawal $(cat stake.addr)+15192167 \\ --metadata-json-file metadata.json \\ --out-file 2nd.tx\ncardano-cli transaction build \\ --tx-in 04dfd8feaf87f82c8ec771954179879b22b5f693ed86d78a749111eed2de7879#1 \\ --tx-in 04dfd8feaf87f82c8ec771954179879b22b5f693ed86d78a749111eed2de7879#0 \\ --tx-in-script-file payment.script \\ --change-address $(cat payment.addr) \\ --mint \"1 $(cat payment.script.policyid).746F6B656E\" \\ --mint-script-file payment.script \\ --withdrawal $(cat stake.addr)+15192167 \\ --metadata-json-file metadata.json \\ --out-file 2nd.tx\nYou can see multiple things happening in this transaction:\nmint-script-file\nFinally, you can verify the result of signing and submitting the transaction:\nThe payment address now has:\ncardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------c260ebce5868a56ce559f5277e6ca2d47b0eecb5b851b957fcb40a2194f67b29 0 10055118943 lovelace + 1 90d2fad83eaaed2b9fcffb4259c7deaa254f9574b32ee0890eb9e038.746f6b656e + TxOutDatumNone\ncardano-cli query utxo --address $(cat payment.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------c260ebce5868a56ce559f5277e6ca2d47b0eecb5b851b957fcb40a2194f67b29 0 10055118943 lovelace + 1 90d2fad83eaaed2b9fcffb4259c7deaa254f9574b32ee0890eb9e038.746f6b656e + TxOutDatumNone\nThe script address does not have any funds.\ncardano-cli query utxo --address $(cat payment.script.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------\ncardano-cli query utxo --address $(cat payment.script.addr) TxHash TxIx Amount--------------------------------------------------------------------------------------\nWe no longer have rewards from delegating:\ncardano-cli query stake-address-info --address $(cat stake.addr)[ { \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\", \"delegation\": \"pool1vzqtn3mtfvvuy8ghksy34gs9g97tszj5f8mr3sn7asy5vk577ec\", \"rewardAccountBalance\": 0 }]\ncardano-cli query stake-address-info --address $(cat stake.addr)[ { \"address\": \"stake_test1uq954t492tmusk2dy9z505g3cz3sfpnh0swsqjmzk47rasqyn8uqp\", \"delegation\": \"pool1vzqtn3mtfvvuy8ghksy34gs9g97tszj5f8mr3sn7asy5vk577ec\", \"rewardAccountBalance\": 0 }]\nAnd the best part, it was only done in one transaction.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "No Title?",
    "input": "",
    "output": ""
  },
  {
    "instruction": "Marlowe?",
    "input": "",
    "output": "To get started with Marlowe, find the various resources on the documentation website:\nMarlowe is a set of open source tools designed to simplify the creation, testing, and deployment of secure smart contracts on the Cardano blockchain. It caters to developers, regardless of their expertise in software development, by offering intuitive solutions to create, utilize, and monetize smart contracts with ease.\nMarlowe contracts are unique due to their foundation in peer-reviewed research. Formal proofs, extensive testing, and analysis tools provide strong assurances for the safety of Marlowe contracts.\nSupported programming languages in Marlowe include Marlowe itself, Haskell, JavaScript, and TypeScript. Marlowe also includes a Blockly editor for visual programming.\nThe deployment of Marlowe onto the mainnet includes the following features:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Aiken?",
    "input": "",
    "output": "To get started with Aiken, see:\nAiken is a modern programming language and toolchain for developing smart contracts on the Cardano blockchain. It draws inspiration from various modern languages, like Gleam, Rust, and Elm, renowned for their friendly error messages and an overall excellent developer experience.\nThe language is exclusively used for creating on-chain validator scripts. instructions will need to write their off-chain code for generating transactions in another language, such as Rust, Haskell, JavaScript, Python, etc.\nAs a language, Aiken is purely functional with static typing and type inference. This means most of the time, the compiler is smart enough to determine the type of something without requiring instruction annotation. It also allows the creation of custom types resembling records and enums. Aiken does not include higher-kinded types or type classes because it aims for simplicity.\nOn-chain scripts are typically small in size and scope compared to other kinds of applications being developed today. Consequently, they do not necessitate as many features as general-purpose languages that must tackle far more complex issues.\nAiken is easier than Plutus to get started with for those who are less familiar with functional languages like Haskell. Similar to Plutus, Aiken scripts are compiled down to the untyped Plutus Core (UPLC).\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Mithril?",
    "input": "",
    "output": "Mithril is a stake-based multi-signature scheme that leverages the existing Cardano network to provide certified snapshots of all or part of the blockchain state. These snapshots can be useful in multiple use cases such as secure voting, data exchange, and synchronization between applications, sidechains, light wallets, etc.\nThe first application of Mithril allows faster bootstrapping of Cardano nodes. As each node has a full copy of the blockchain and needs to verify each block from the history, it takes a significant amount of time to start a new node from scratch. With Mithril, it is possible to start a node from a predefined state, with the same security guarantees that the chain itself provides, but much faster.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Peertopeer P2P networking?",
    "input": "",
    "output": "Cardano nodes and the interactions between them are combined together within a networking layer, which distributes information about transactions and block creation among all active nodes. In this way, the input validates and adds blocks to the chain and also verifies transactions. A distributed network of nodes must keep communication delays to a minimum, and be resilient enough to cope with failures or capacity constraints.\nIn the Byron federated input, nodes were connected by a static configuration that was defined in a topology file. Since the introduction of Shelley, the input has been functioning in a hybrid mode. Moving from the federated state of network connectivity to the hybrid one, the teams delivered a manually constructed P2P network of SPO relay nodes. This means that SPO block-producing nodes can connect to both trusted relay nodes and other SPO-run relay nodes. Hybrid connectivity is not automated, however, it enables the exchange of block and transaction information without relying on trusted relays only.\nA trusted relay is the one that the SPO, wallet, or exchange accessing the network trusts . Though this role has mostly been performed by IOG, other entities, such as the Cardano Foundation, a wallet, or exchanges can also run trusted relays. Block-producing nodes can connect to any relays they deem trustable.\nTo ensure efficient communication between nodes, it is desirable to enable automated connections of SPO relays to each other, so that less static configuration is needed. Dynamic P2P has been gradually enabled since the node v.1.35.6 release. For more details, see this blog post.\nWith the deployment of Dynamic P2P, networking keeps evolving with additions such as Ouroboros Genesis and peer sharing:\nThe network stack undergoes a number of improvements to achieve the desired network resilience. These improvements do not require a protocol change, but rather enable automated peer selection and communication between peers and nodes.\nThe P2P networking is enabled due to the use of the following components:\nNext, we take a closer look at how the outbound governor works to ensure automated connectivity between peer nodes on the network.\nThe Cardano network consists of multiple peer nodes. Some peer nodes are more active than others, some have established connections, and some should be promoted to ensure the best input performance. Each block-producing node maintains a set of peers mapped into three categories:\nNewly discovered peers are initially added to the cold peer set. The outbound governor is then responsible for peer connection management: it defines which peers are beneficial for connection purposes, and which should be promoted or demoted between cold, warm, or hot sets.\nThe primary goal of the outbound governor is to maintain the target number of cold, warm, and hot peers. This builds and maintains a connectivity map of the local part of the network, and simplifies the process of connection definitions by handling them automatically.\nTo establish connectivity between nodes, the outbound governor engages in the following activities:\nThe outbound governor needs to establish and maintain:\nUsing 2 20 hot peers is cost-efficient, as peers exchange only their block headers. The block body, in turn, is typically requested only once, and it tends to follow the shortest path through the connectivity graph.\nThe purpose of warm peers is to provide access to those peers that can be quickly promoted to hot ones (in case any of the hot peers fail), and also provide candidates for the churn of hot peers.\nThe policy for selecting which warm peers to promote to hot relies on the upstream measurements. The purpose of a degree of churn between cold and warm peers is, in part, to discover the network distance between more peers and to allow potentially better warm peers to take over from existing hot peers. This enables further optimization and adjustments. Maintaining diversity in hop distances contributes to better block distribution times across the globally distributed network.\nOverall, this approach follows a common pattern for probabilistic search or optimization that uses a balance of local optimization with some elements of higher-order disruption to avoid becoming trapped in a poor local optimum.\nPeers maintain a limited set of information, which is based on their previous direct interactions. Cold peers, for instance, may not maintain any data, as they have not established interactions yet. Such data can be compared to a reputation property, however, these details are purely local and are not shared among other nodes. Local peer reputation information is also updated when peer connections fail. The network does not maintain negative peer information for extended periods of time: to bound resources and because of the simplicity of Sybil attacks.\nThe implementation classifies exceptions that cause connection failures into three classes:\nIn the case of adversarial behavior, the peer can be immediately demoted from the hot, warm, or cold sets.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Daedalus wallet for the Cardano testnets?",
    "input": "",
    "output": "Here you can download any of the special testnet-only versions of the Daedalus wallet. Please note that this wallet is for testing purposes only. It may not be fully-featured and may contain bugs.\nOperating inputs\nRecommended hardware requirements\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Vasil?",
    "input": "",
    "output": "Vasil is the protocol upgrade implemented in June 2022. Named after the late Bulgarian mathematician and prominent Cardano community member Vasil Dabov, the Vasil upgrade introduced five key mechanisms to improve the blockchain's performance: CIP-31 (reference inputs), CIP-32 (inline datums), CIP-33 (reference scripts), CIP-40 (collateral outputs), and diffusion pipelining.\nHere's a more detailed feature overview.\nDiffusion pipelining is a feature that improves block propagation times and further leads to higher throughput. In essence, it streamlines the process of sharing information about newly created blocks among network participants. The goal is to ensure that blocks can be shared (propagated) in the network within five seconds after their creation. For this, diffusion pipelining propagates blocks before their full validation thus overlapping the time spent on diffusion with the time needed on validation.\nPipelining also ensures that the block header referencing the hash of a previous block is propagated correctly. The body of the block is retained within the metadata included in the next block, which is essential for DDoS attack resistance even without full block confirmation.\nDiffusion pipelining provides more space for block size increase and Plutus script improvements, leading to a more scalable setting overall.\nPlutus Core is a scripting language used in the Cardano ledger. It consists of basic core language constructs and also includes built-in types (integers, strings, etc) and built-in functions (integer addition, etc) that provide functionality that would be difficult or expensive to implement in the Plutus Core code. Built-in functions mostly operate on built-in types. Built-in types come with a size metric that is used by costing functions. For example, the size metric for integers returns the bit-size of the integer.\nThe performance of Plutus Core scripts relates to how expensive it is to run a script in the ledger. The cost model describes CPU and memory fees for each language primitive and can be used off-chain to predict fees for running such scripts.\nModel performance is calculated by costing _evaluation_ in abstract resource units (exunits) of CPU and memory. Individual steps of evaluation are costed, and built-in functions must also come with a _costing function_ that provides costing information for them. The costing function for a built-in function is a mathematical function that takes the sizes of the arguments (as computed by their size metrics) and returns an estimate of the budget that will be used to perform that function.\ncosting _evaluation_\n_costing function_\nFor example, the costing function for addition says that the CPU and memory costs are both proportional to the maximum of the sizes of the input integers (with some appropriate constants). Determining costing functions is done empirically by running the function in question against a large number of inputs and choosing a costing function that fits the data well.\nThe Cardano ledger recognizes various types of scripts that are identified by language version. This language tag allows the ledger to distinguish between different script types. When a new behavior or functionality is introduced, so is a new language. Each new version of Plutus will be its own language, and all Plutus Core language versions are supported forever in the ledger. This provides the ability to validate the history of the chain indefinitely.\nPart of the specification of a language in the ledger explains how language scripts run, what arguments they are given, and how those arguments are structured. Languages also have an associated subset of Cardano protocol parameters that control some aspects of the script evaluation. For Plutus, this is the cost model that is associated with each new language version.\nDue to performance improvements in the Plutus evaluator, both Plutus V1 and Plutus V2 scripts have lower cost model parameters than before, resulting in 20-30 improvements in script resource usage.\nThe updated cost model parameters include the following changes:\nExtend the set of built-in functions by adding the new built-in serialiseData.\nThe built-in function verifySignature was renamed verifyEd25519Signature to make it more clear what its function is.\nRecalibrate the cost model for the version of the evaluator in the node to align with the CPU parameters changes.\nThe built-in types and type operators remain unchanged from the Alonzo upgrade. All the new built-in functions are backward compatible. Adding them does not break any older script validators. The Vasil release continues to support the Alonzo built-in functions and adds the following new function:\nserialiseData\nA new Plutus built-in is added for serializing BuiltinData to BuiltinByteString. The serialiseData function takes a data object and converts it into a CBOR object.\nBuiltinData\nBuiltinByteString\nPlutus already provides a built-in for hashing data structure, for example, sha2_256 :: BuiltinByteString - BuiltinByteString, it does not provide generic ways of serializing some data types to BuiltinByteString.\nsha2_256 :: BuiltinByteString -> BuiltinByteString\nBuiltinByteString\nThe overall memory and CPU costs are reduced by having a new built-in to serialize any Plutus BuiltinData to BuiltinByteString such that validators can leverage more optimized implementations and bytestring builders via built-ins than what is available on-chain.\nFor more explanations, how-to guides, and tutorials, see Plutus Docs.\nA Plutus V2 script does not have the same hash value as a Plutus V1 script.\nSince scripts must match their on-chain hashes exactly, it is important that the scripts that an application uses do not accidentally change. For example, changing the source code or updating dependencies or tooling may lead to small changes in the script. As a result, the hash will change. In cases where the hashes must match exactly, even changes which do not alter the functionality of the script can be problematic.\nIn light of this consideration, some DApp developers might expect that when doing a migration from Plutus V1 scripts to Plutus V2 scripts, the same source code, when recompiled, will generate the same hash value of that script address. However, it is impossible for a compiled V2 script to have the same script hash and address as a compiled V1 script.\nUsing the exact same script with different language versions will result in different hashes. The exact same script (as in UPLC.Program) can be used as a Plutus V1 script or a Plutus V2 script, and since the language version is part of the hash, the two hashes will be different.\nA Plutus V1 script will not necessarily have the same hash value when recompiled with a later version of the Plutus compiler\nSuppose you write your Haskell source code (Plutus Tx), compile it into Plutus Core code (PLC), generate its hash value, then use it in a transaction. If you don t save your compiled code, and then decide to use the same script in the future, you would have to recompile it. This could result in a different hash value of the script address even without upgrading from Plutus V1 to Plutus V2 scripts. This is because the hash is computed based on the output of the compiled code.\nGiven Plutus compiler version changes, changes in the dependencies, and multiple other improvements, it is expected that the hash value of the script address will change after the source code is recompiled.\nWhen to export and save the output of a compiled script\nOnce you expect that you will not modify the on-chain part of your application and you don t want the hash value of your script address to change, the best way to keep it the same is to save the output of your final compiled Plutus Core code (PLC) to a file.\nFor details on how to export scripts, please see: How to export scripts, datums, and redeemers in the Plutus Core instruction documentation.\nTransaction outputs carry datums, which enable access to information on the blockchain. However, these datums are constrained in a number of ways. For example, to access information in the datum, you d have to spend the output that the datum is attached to. This requires the re-creation of a spent output. Any instruction who wishes to look at the data cannot spend the old output (which is gone), but must spend the new output (which they will not know about until the next block). In practice, this limits some applications to one operation per block, thus decreasing the desired performance.\nCIP-31 introduces a new mechanism for accessing information in datums a reference input. Reference inputs allow looking at an output without spending it. This will facilitate access to information stored on the blockchain without the need for spending and re-creating unspent transaction outputs (UTXOs).\nThe key use case of CIP-31 is to support reference scripts (CIP-33). Other use cases include:\nSee the how to use reference inputs tutorial for more details.\nDatums carrying transaction information are commonly implemented by attaching hashes of datums to outputs. This is quite inconvenient for instructions. Datums tend to represent the result of computation done by the party who creates the output, and as such, there is almost no chance that the spending party will know the datum without communicating with the creating party. This means that either the datum must be communicated between parties off-chain, or on-chain by including it in the witness map of the transaction that creates the output ( extra datums ). Such a case requires the spending party to watch the whole chain to find the datum, which is also inconvenient.\nCIP-32 suggests a solution that allows datums themselves to be attached to outputs instead of datum hashes. This will allow much simpler communication of datum values between instructions.\nUse cases include:\nSee the how to use inline datums tutorial for more details.\nWhen you spend an output locked with a Plutus script, you must include the script in the spending transaction. Hence, the size of the scripts contributes to transaction size, which directly influences Cardano s throughput.\nLarge script sizes pose problems for instructions because:\nCIP-33 introduces the ability to reference a script without including it in each transaction. This hugely reduces the contribution of scripts to the transaction size.\nSee the how to reference scripts tutorial for more details.\nTwo important elements in Plutus are datums and redeemers. The datum is a piece of information that can be associated with a UTXO and is used to carry script state information. It is frequently used in combination with a redeemer, which is like an instruction or command to the contract.\nWith the Vasil hard fork, developers can see redeemers for all inputs rather than just the one being passed to the currently executing script.\nScript collateral is the monetary guarantee a instruction gives to assure that the transaction that uses a contract has been carefully constructed and thoroughly tested before submission to the validators. It is used to guarantee that nodes are compensated for their work in case phase-2 validation fails. The collateral amount is specified at the time of constructing the transaction and is reserved to allow for the on-chain script execution.\nWith the Vasil hard fork, DApp developers can specify a change address for the script collateral. This means that in case the script fails phase-2 validation, only the right amount will be taken, and the remaining funds will be sent to the provided change address.\nSee the how to use collateral outputs tutorial for more details.\nOn Cardano, the Verifiable Random Function (VRF) determines which SPO creates the next block. Before Vasil, there were two VFR functions executed on every network hop to validate a block. With the Vasil hard fork, one of these functions is dropped, resulting in faster block validation and overall network syncing times.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Allegra?",
    "input": "",
    "output": "Allegra was the Shelley protocol upgrade that introduced token locking support to enable various kinds of smart contract use cases.\nAllegra represented a relatively small technical change to the consensus protocol, with a slight impact on the actual ledger. However, it was significant since it prepared the platform for smart contracts and the creation of assets (in addition to ada) that run on Cardano. It also provided an important piece of Voltaire (governance) functionality, supporting a voting mechanism.\nToken locking is a way of recording that a specific token is being used for some purpose. Locking, in this case, means reserving a certain number of tokens for a specified period of time so they cannot be disposed of to gain a benefit (such as voting, or running a smart contract).\nRead more about token locking in this blog post.\nSupport for token locking is crucial to enable complex deal settlement and funds accounting.\nIt can be used in the following scenarios:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Mary?",
    "input": "",
    "output": "Mary is the Shelley protocol upgrade implemented in March 2021. It introduced native token and multi-asset support on Cardano. Mary allowed instructions to create uniquely defined (custom) tokens and carry out transactions with them directly on the Cardano blockchain.\nWith the Mary upgrade, the ledger s accounting infrastructure processes not only ada transactions but also transactions that simultaneously carry several asset types. Native support grants distinct advantages for developers as there is no need to create smart contracts to handle custom token creation or transactions. Instead, the accounting ledger tracks the ownership and transfer of assets, removing extra complexity and potential for manual errors, while ensuring significant cost efficiency.\nDevelopers, businesses, and applications can create general purpose (fungible) or specialized (non-fungible) tokens to achieve commercial or business objectives. These might include the creation of custom payment tokens or rewards for decentralized applications; stablecoins pegged to other currencies; or unique assets that represent intellectual property. All these assets can then be traded, exchanged, or used as payment for products or services.\nFurther reading:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Alonzo?",
    "input": "",
    "output": "Alonzo is the protocol upgrade implemented in September 2021, as part of the Goguen development phase. It built on top of transaction metadata, token locking, and native asset functionality to enable smart contract development.\nThis upgrade introduced a versatile platform opening up opportunities for businesses and developers, by allowing the creation of smart contracts and decentralized applications (DApps) for decentralized finance (DeFi).\nSuch capability was enabled by adding the necessary tools and the infrastructure using the Plutus platform. Applying a rigorous approach based on formal methods and verification, Alonzo extended the basic multi-signature scripting language (multisig) used in Cardano Shelley. Multisig was upgraded to the Plutus Core language for more powerful and secure scripting options. For this, Alonzo implemented the extended unspent transaction output (EUTXO) accounting model.\nFurther reading:\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  },
  {
    "instruction": "Valentine SECP?",
    "input": "",
    "output": "The Valentine (or SECP) upgrade is Cardano s intra-era hard fork that followed the Vasil upgrade. Valentine was a small and focused semantic change to the ledger, which brought new built-in functions to Plutus to support SECP elliptic curves (ECDSA and Schnorr). Although an intra-era hard fork requires a hard fork combinator event, it does not change the ledger era, which means that this was an upgrade to the Babbage ledger era.\nECC is a popular primitive for developing cryptographic protocols and secure applications using custom encryption and decryption algorithms validated by digital signatures. ECC provides the same level of security as other mechanisms while using shorter keys and signatures.\nThere are different elliptic curves one can use, with secp256k1 as one of the options. Each of these curves differs in its parameters. The secp256k1 curve provides two common signature schemes ECDSA and Schnorr.\nCardano uses the Edwards-curve Digital Signature Algorithm (EdDSA) with elliptic curve Curve25519 as its base curve (Ed25519). Ed25519 is designed to be resistant to certain types of cryptographic attacks, making it a secure choice.\nEd25519 is part of the family of safeCurves, which secp256k1 is not part of. The variance in algorithms means that Plutus DApp developers who want to work with other blockchains and need to validate ECDSA and Schnorr signatures would have to spend time, effort, and funds to implement such algorithms over the Standards for Efficient Cryptography (SECP) elliptic curves in Plutus. This extra implementation considerably increases potential security risks.\nSince only Cardano s primary signature algorithm Ed25519 was provided as a Plutus built-in function, ECDSA and Schnorr operations would be more expensive and time-consuming unless also provided as built-in functions.\nWhat did the SECP upgrade bring?\nCardano s Valentine upgrade added new built-in functions to Plutus to support ECDSA and Schnorr signatures along with Cardano s native signature.\nThese built-in functions are now native to Cardano, and since they are implemented and audited by experts, they provide the highest level of security. This standardization allows any Plutus DApp developer to widen the choice of multi-signature or threshold signature design to use.\nCIP-49 provides a more in-depth oversight of the motivation and specification for the new implementation of built-in functions.\nAfter the new cryptographic primitives implementation, Plutus can easily verify transactions from other blockchains using ECDSA and Schnorr standards. For example, Plutus can natively verify signatures generated in EVM sidechains, which improves the developer experience in terms of process simplicity, cost, and advanced security.\nBelow is a link to examples of scripts and script data files containing the inputs for working with SECP256k1 elliptic curves.\nThe use of these scripts is similar to a token minting process, where you build a transaction to mint a token using --mint-script-file with a provided Plutus script and --mint-redeemer-file for provided input script data.\n--mint-script-file\n--mint-redeemer-file\nSee the tutorial on how to use SECP256K1 primitives.\nCardano is an open-source project. Cardano is a software platform ONLY and does not conduct any independent diligence on, or substantive review of, any blockchain asset, digital currency, cryptocurrency or associated funds. You are fully and solely responsible for evaluating your investments, for determining whether you will exchange blockchain assets based on your own judgement, and for all your decisions as to whether to exchange blockchain assets with Cardano. In many cases, blockchain assets you exchange on the basis of your research may not increase in value, and may decrease in value. Similarly, blockchain assets you exchange on the basis of your research may fall or rise in value after your exchange. Past performance is not indicative of future results. Any investment in blockchain assets involves the risk of loss of part or all of your investment. The value of the blockchain assets you exchange is subject to market and other investment risks.\nThis work is licensed under CC BY 4.0\nIOHK 2015-2025 - IOHK Supported Project"
  }
]
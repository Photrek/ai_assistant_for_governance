# The way I recommend creating certs for nginx virtualhosts and reverse proxies
# Is using certbot wtiht he nginx plugin and then just
# sudo apt install certbot python3-certbot-nginx
# sudo certbot --nginx -d <Domain name here>


# This is virtualhost to the ai app itself
# sudo certbot --nginx -d ai.photrek.io
server {
    server_name ai.photrek.io;
    root /var/www/aiagent/out;
    index index.html index.htm;
    location / {
       try_files $uri /index.html;
    }
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/ai.photrek.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ai.photrek.io/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    access_log /var/log/nginx/aiagent_access.log;
    error_log /var/log/nginx/aiagent_error.log;
}
server {
    if ($host = ai.photrek.io) {
        return 301 https://$host$request_uri;
    }
    server_name ai.photrek.io;
    listen 80;
    return 404;
}

# This is reverse proxy to the ai agents JSON-RPC2.0 backend API
# sudo certbot --nginx -d aiapi.photrek.dev
server {
    server_name aiapi.photrek.dev;
    location / {
        proxy_pass http://localhost:4441;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
    }
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/aiapi.photrek.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aiapi.photrek.dev/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}
server {
    if ($host = aiapi.photrek.dev) {
        return 301 https://$host$request_uri;
    }
    server_name aiapi.photrek.dev;
    listen 80;
    return 404;
}

# This will be reverse proxy from NERC to the GPU server to access ollama
# sudo certbot --nginx -d ollama.photrek.dev
server {
    server_name ollama.photrek.dev;
    location / {
        proxy_pass http://199.94.61.196:11434;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
    }
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/ollama.photrek.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ollama.photrek.dev/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}
server {
    if ($host = ollama.photrek.dev) {
        return 301 https://$host$request_uri;
    }
    server_name ollama.photrek.dev;
    listen 80;
    return 404;
}